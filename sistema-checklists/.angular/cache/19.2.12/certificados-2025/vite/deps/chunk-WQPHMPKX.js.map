{
  "version": 3,
  "sources": ["../../../../../../node_modules/@aws-amplify/core/dist/esm/constants.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Logger/types.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Logger/ConsoleLogger.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/errors/AmplifyError.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/types/errors.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/errors/createAssertionFunction.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/errors/errorHelpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/globalHelpers/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/base64Decoder.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/utils/errorHelpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/utils/index.mjs", "../../../../../../node_modules/@aws-crypto/sha256-js/build/module/constants.js", "../../../../../../node_modules/@aws-crypto/sha256-js/build/module/RawSha256.js", "../../../../../../node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js", "../../../../../../node_modules/@aws-crypto/util/build/module/convertToBuffer.js", "../../../../../../node_modules/@aws-crypto/util/build/module/isEmptyData.js", "../../../../../../node_modules/@aws-crypto/sha256-js/build/module/jsSha256.js", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Hub/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/getClientInfo/getClientInfo.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/retry/retry.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/deepFreeze.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/parseAWSExports.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/constants.mjs", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/rng.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/regex.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/validate.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/stringify.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/parse.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/v35.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/md5.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/v3.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/native.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/v4.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/sha1.js", "../../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/v5.js", "../../../../../../node_modules/@aws-amplify/core/dist/esm/parseAmplifyOutputs.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/parseAmplifyConfig.mjs", "../../../../../../node_modules/@smithy/util-hex-encoding/dist-es/index.js", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/types.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/version.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/helpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/React.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Vue.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Svelte.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Next.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Nuxt.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Angular.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/ReactNative.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Expo.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Web.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detectFramework.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/customUserAgent.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/BackgroundProcessManager/types.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/isWebWorker.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Reachability/Reachability.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/isBrowser.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/sessionListener/SessionListener.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/sessionListener/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/Amplify.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/apis/internal/fetchAuthSession.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/apis/fetchAuthSession.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/apis/clearCredentials.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/serde/responseInfo.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/serde/json.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/internal/composeServiceApi.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/endpoints/partitions.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/endpoints/getDnsSuffix.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/constants.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/retryMiddleware.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/amplifyUuid/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/amzSdkInvocationIdHeaderMiddleware.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/amzSdkRequestHeaderMiddleware.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/userAgent/middleware.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/internal/composeTransferHandler.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/utils/memoization.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/handlers/fetch.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/handlers/aws/unauthenticated.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/retry/constants.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/retry/jitteredBackoff.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/jitteredBackoff.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/isClockSkewError.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/defaultRetryDecider.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/amplifyUrl/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/cognitoIdentity/base.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/cognitoIdentity/getId.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/cognitoIdentity/getCredentialsForIdentity.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/errors/PlatformNotSupportedError.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/KeyValueStorage.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/InMemoryStorage.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/utils.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/DefaultStorage.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/SessionStorage.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/SyncKeyValueStorage.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/SyncSessionStorage.mjs", "../../../../../../node_modules/js-cookie/dist/js.cookie.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/CookieStorage.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/storage/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/constants.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/utils/cacheHelpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/utils/errorHelpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/StorageCacheCommon.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/StorageCache.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/I18n/I18n.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/I18n/errorHelpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/I18n/index.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/pinpoint/base.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/pinpoint/errorHelpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignedHeaders.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/constants.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCredentialScope.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getFormattedDates.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningValues.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalHeaders.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalUri.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getHashedPayload.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalRequest.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningKey.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getStringToSign.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignature.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/signRequest.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/getSkewCorrectedDate.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/isClockSkewed.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/getUpdatedSystemClockOffset.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/middleware.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/handlers/aws/authenticated.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/extendedEncodeURIComponent.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/pinpoint/updateEndpoint.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/providers/pinpoint/utils/constants.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/pinpoint/putEvents.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/providers/pinpoint/utils/PinpointEventBuffer.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/providers/pinpoint/types/errors.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/ServiceWorker/errorHelpers.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/generateRandomString.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/urlSafeDecode.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/urlSafeEncode.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/deDupeAsyncFunction.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/isTokenExpired.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/deviceName/getDeviceName.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Signer/DateUtils.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/bytesToString.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/base64Encoder.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/cryptoSecureRandomInt.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/WordArray.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/types/validation.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/common/AuthErrorStrings.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/AuthError.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/constants.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/types.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/internal/getCurrentUser.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/getCurrentUser.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/parsers/regionParsers.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolSerializer.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/utils/assertServiceError.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolDeserializer.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/constants.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/types/errors.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/cognitoUserPoolEndpointResolver.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/userContextData.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/refreshAuthTokens.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/errorHelpers.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/types.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/constants.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/TokenStore.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/signInWithRedirectStore.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/oAuthStore.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/inflightPromise.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/TokenOrchestrator.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/tokenProvider.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/utils/store/autoSignInStore.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/utils/store/signInStore.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/autoSignIn.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/utils/assertValidationError.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/utils/getAuthUserAgentValue.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createVerifySoftwareTokenClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/cacheTokens.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/dispatchSignedInHubEvent.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/utils/passkey/errors.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/utils/passkey/getIsPasskeySupported.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/convert/base64url/convertArrayBufferToBase64Url.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/convert/base64url/convertBase64UrlToArrayBuffer.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/utils/passkey/serde.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/utils/passkey/types/shared.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/utils/passkey/types/index.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/utils/passkey/getPasskey.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmDeviceClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/textEncoder/index.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/BigInteger/BigInteger.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/calculate/calculateS.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/constants.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getBytesFromHex.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getHexFromBytes.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getHashFromData.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getHashFromHex.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getPaddedHex.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/calculate/calculateU.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getHkdfKey.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getRandomBytes.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getRandomString.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/AuthenticationHelper/AuthenticationHelper.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/calculate/calculateA.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getAuthenticationHelper.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/getNewDeviceMetadata.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/flows/userAuth/handleWebAuthnSignInResult.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getNowString.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getSignatureString.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/handleDeviceSRPAuth.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/handlePasswordVerifierChallenge.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/retryOnResourceNotFoundException.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/setActiveSignInUsername.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/flows/shared/handlePasswordSRP.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/flows/userAuth/handleSelectChallenge.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/flows/userAuth/handleSelectChallengeWithPassword.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/flows/userAuth/handleSelectChallengeWithPasswordSRP.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/signInHelpers.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithCustomAuth.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithCustomSRPAuth.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithSRP.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithUserPassword.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/client/flows/userAuth/handleUserAuthFlow.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithUserAuth.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signIn.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/apiHelpers.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/signUpHelpers.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createSignUpClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signUp.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createForgotPasswordClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/resetPassword.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmForgotPasswordClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmResetPassword.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createResendConfirmationCodeClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/resendSignUpCode.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmSignUpClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmSignUp.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmSignIn.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createSetUserMFAPreferenceClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updateMFAPreference.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/fetchMFAPreference.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/verifyTOTPSetup.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createChangePasswordClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updatePassword.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/setUpTOTP.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateUserAttributesClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updateUserAttributes.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updateUserAttribute.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createVerifyUserAttributeClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmUserAttribute.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/Errors.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/types/Auth.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/createOAuthError.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/validateState.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/completeOAuthFlow.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/getRedirectUrl.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/handleFailure.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/enableOAuthListener.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/types/models.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/utils/openAuthSession.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/generateCodeVerifier.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/generateState.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/cancelOAuthFlow.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithRedirect.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/internal/fetchUserAttributes.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/fetchUserAttributes.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/completeOAuthSignOut.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/oAuthSignOutRedirect.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/handleOAuthSignOut.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createRevokeTokenClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createGlobalSignOutClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signOut.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserAttributeVerificationCodeClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/sendUserAttributeVerificationCode.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserAttributesClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/deleteUserAttributes.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createEmptyResponseDeserializer.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/deleteUser.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateDeviceStatusClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/rememberDevice.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createForgetDeviceClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/forgetDevice.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createListDevicesClient.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/fetchDevices.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/types.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/IdentityIdStore.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/utils.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/IdentityIdProvider.mjs", "../../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/credentialsProvider.mjs"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Logging constants\nconst AWS_CLOUDWATCH_CATEGORY = 'Logging';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n// Error exception code constants\nconst NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\nexport { AWS_CLOUDWATCH_CATEGORY, NO_HUBCALLBACK_PROVIDED_EXCEPTION, USER_AGENT_HEADER };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar LogType;\n(function (LogType) {\n  LogType[\"DEBUG\"] = \"DEBUG\";\n  LogType[\"ERROR\"] = \"ERROR\";\n  LogType[\"INFO\"] = \"INFO\";\n  LogType[\"WARN\"] = \"WARN\";\n  LogType[\"VERBOSE\"] = \"VERBOSE\";\n  LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\nexport { LogType };\n", "import { AWS_CLOUDWATCH_CATEGORY } from '../constants.mjs';\nimport { LogType } from './types.mjs';\n\n/* eslint-disable no-console */\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst LOG_LEVELS = {\n  VERBOSE: 1,\n  DEBUG: 2,\n  INFO: 3,\n  WARN: 4,\n  ERROR: 5,\n  NONE: 6\n};\n/**\n * Write logs\n * @class Logger\n */\nclass ConsoleLogger {\n  /**\n   * @constructor\n   * @param {string} name - Name of the logger\n   */\n  constructor(name, level = LogType.WARN) {\n    this.name = name;\n    this.level = level;\n    this._pluggables = [];\n  }\n  _padding(n) {\n    return n < 10 ? '0' + n : '' + n;\n  }\n  _ts() {\n    const dt = new Date();\n    return [this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') + '.' + dt.getMilliseconds();\n  }\n  configure(config) {\n    if (!config) return this._config;\n    this._config = config;\n    return this._config;\n  }\n  /**\n   * Write log\n   * @method\n   * @memeberof Logger\n   * @param {LogType|string} type - log type, default INFO\n   * @param {string|object} msg - Logging message or object\n   */\n  _log(type, ...msg) {\n    let loggerLevelName = this.level;\n    if (ConsoleLogger.LOG_LEVEL) {\n      loggerLevelName = ConsoleLogger.LOG_LEVEL;\n    }\n    if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n      loggerLevelName = window.LOG_LEVEL;\n    }\n    const loggerLevel = LOG_LEVELS[loggerLevelName];\n    const typeLevel = LOG_LEVELS[type];\n    if (!(typeLevel >= loggerLevel)) {\n      // Do nothing if type is not greater than or equal to logger level (handle undefined)\n      return;\n    }\n    let log = console.log.bind(console);\n    if (type === LogType.ERROR && console.error) {\n      log = console.error.bind(console);\n    }\n    if (type === LogType.WARN && console.warn) {\n      log = console.warn.bind(console);\n    }\n    if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n      if (type === LogType.INFO && console.info) {\n        log = console.info.bind(console);\n      }\n      if (type === LogType.DEBUG && console.debug) {\n        log = console.debug.bind(console);\n      }\n    }\n    const prefix = `[${type}] ${this._ts()} ${this.name}`;\n    let message = '';\n    if (msg.length === 1 && typeof msg[0] === 'string') {\n      message = `${prefix} - ${msg[0]}`;\n      log(message);\n    } else if (msg.length === 1) {\n      message = `${prefix} ${msg[0]}`;\n      log(prefix, msg[0]);\n    } else if (typeof msg[0] === 'string') {\n      let obj = msg.slice(1);\n      if (obj.length === 1) {\n        obj = obj[0];\n      }\n      message = `${prefix} - ${msg[0]} ${obj}`;\n      log(`${prefix} - ${msg[0]}`, obj);\n    } else {\n      message = `${prefix} ${msg}`;\n      log(prefix, msg);\n    }\n    for (const plugin of this._pluggables) {\n      const logEvent = {\n        message,\n        timestamp: Date.now()\n      };\n      plugin.pushLogs([logEvent]);\n    }\n  }\n  /**\n   * Write General log. Default to INFO\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  log(...msg) {\n    this._log(LogType.INFO, ...msg);\n  }\n  /**\n   * Write INFO log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  info(...msg) {\n    this._log(LogType.INFO, ...msg);\n  }\n  /**\n   * Write WARN log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  warn(...msg) {\n    this._log(LogType.WARN, ...msg);\n  }\n  /**\n   * Write ERROR log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  error(...msg) {\n    this._log(LogType.ERROR, ...msg);\n  }\n  /**\n   * Write DEBUG log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  debug(...msg) {\n    this._log(LogType.DEBUG, ...msg);\n  }\n  /**\n   * Write VERBOSE log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  verbose(...msg) {\n    this._log(LogType.VERBOSE, ...msg);\n  }\n  addPluggable(pluggable) {\n    if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n      this._pluggables.push(pluggable);\n      pluggable.configure(this._config);\n    }\n  }\n  listPluggables() {\n    return this._pluggables;\n  }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\nexport { ConsoleLogger };\n", "class AmplifyError extends Error {\n  /**\n   *  Constructs an AmplifyError.\n   *\n   * @param message text that describes the main problem.\n   * @param underlyingError the underlying cause of the error.\n   * @param recoverySuggestion suggestion to recover from the error.\n   *\n   */\n  constructor({\n    message,\n    name,\n    recoverySuggestion,\n    underlyingError,\n    metadata\n  }) {\n    super(message);\n    this.name = name;\n    this.underlyingError = underlyingError;\n    this.recoverySuggestion = recoverySuggestion;\n    if (metadata) {\n      // If metadata exists, explicitly only record the following properties.\n      const {\n        extendedRequestId,\n        httpStatusCode,\n        requestId\n      } = metadata;\n      this.metadata = {\n        extendedRequestId,\n        httpStatusCode,\n        requestId\n      };\n    }\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    this.constructor = AmplifyError;\n    Object.setPrototypeOf(this, AmplifyError.prototype);\n  }\n}\nexport { AmplifyError };\n", "var AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n  AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n  AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n  AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n  AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\nexport { AmplifyErrorCode };\n", "import { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n  const {\n    message,\n    recoverySuggestion\n  } = errorMap[name];\n  if (!assertion) {\n    throw new AssertionError({\n      name,\n      message: additionalContext ? `${message} ${additionalContext}` : message,\n      recoverySuggestion\n    });\n  }\n};\nexport { createAssertionFunction };\n", "import { AmplifyErrorCode } from '../types/errors.mjs';\nimport { createAssertionFunction } from './createAssertionFunction.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst amplifyErrorMap = {\n  [AmplifyErrorCode.NoEndpointId]: {\n    message: 'Endpoint ID was not found and was unable to be created.'\n  },\n  [AmplifyErrorCode.PlatformNotSupported]: {\n    message: 'Function not supported on current platform.'\n  },\n  [AmplifyErrorCode.Unknown]: {\n    message: 'An unknown error occurred.'\n  },\n  [AmplifyErrorCode.NetworkError]: {\n    message: 'A network error has occurred.'\n  }\n};\nconst assert = createAssertionFunction(amplifyErrorMap);\nexport { assert };\n", "import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCrypto = () => {\n  if (typeof window === 'object' && typeof window.crypto === 'object') {\n    return window.crypto;\n  }\n  // Next.js global polyfill\n  if (typeof crypto === 'object') {\n    return crypto;\n  }\n  throw new AmplifyError({\n    name: 'MissingPolyfill',\n    message: 'Cannot resolve the `crypto` function from the environment.'\n  });\n};\nconst getBtoa = () => {\n  // browser\n  if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n    return window.btoa;\n  }\n  // Next.js global polyfill\n  if (typeof btoa === 'function') {\n    return btoa;\n  }\n  throw new AmplifyError({\n    name: 'Base64EncoderError',\n    message: 'Cannot resolve the `btoa` function from the environment.'\n  });\n};\nconst getAtob = () => {\n  // browser\n  if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n    return window.atob;\n  }\n  // Next.js global polyfill\n  if (typeof atob === 'function') {\n    return atob;\n  }\n  throw new AmplifyError({\n    name: 'Base64EncoderError',\n    message: 'Cannot resolve the `atob` function from the environment.'\n  });\n};\nexport { getAtob, getBtoa, getCrypto };\n", "import { getAtob } from '../../globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Decoder = {\n  convert(input, options) {\n    let inputStr = input;\n    // urlSafe character replacement options conform to the base64 url spec\n    // https://datatracker.ietf.org/doc/html/rfc4648#page-7\n    if (options?.urlSafe) {\n      inputStr = inputStr.replace(/-/g, '+').replace(/_/g, '/');\n    }\n    return getAtob()(inputStr);\n  }\n};\nexport { base64Decoder };\n", "import { createAssertionFunction } from '../../../errors/createAssertionFunction.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n  AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n  AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n  AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n  AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n  AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n  [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n    message: 'Auth Token Provider not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app.'\n  },\n  [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n    message: 'Auth UserPool or IdentityPool not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.'\n  },\n  [AuthConfigurationErrorCode.AuthUserPoolException]: {\n    message: 'Auth UserPool not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.'\n  },\n  [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n    message: 'Invalid identity pool id provided.',\n    recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.'\n  },\n  [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n    message: 'oauth param not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.'\n  }\n};\nconst assert = createAssertionFunction(authConfigurationErrorMap);\nexport { AuthConfigurationErrorCode, assert };\n", "import { base64Decoder } from '../../../utils/convert/base64/base64Decoder.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport { assert, AuthConfigurationErrorCode } from './errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertTokenProviderConfig(cognitoConfig) {\n  let assertionValid = true; // assume valid until otherwise proveed\n  if (!cognitoConfig) {\n    assertionValid = false;\n  } else {\n    assertionValid = !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n  }\n  assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n}\nfunction assertOAuthConfig(cognitoConfig) {\n  const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain && !!cognitoConfig?.loginWith?.oauth?.redirectSignOut && !!cognitoConfig?.loginWith?.oauth?.redirectSignIn && !!cognitoConfig?.loginWith?.oauth?.responseType;\n  assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n}\nfunction assertIdentityPoolIdConfig(cognitoConfig) {\n  const validConfig = !!cognitoConfig?.identityPoolId;\n  assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n}\n/**\n * Decodes payload of JWT token\n *\n * @param {String} token A string representing a token to be decoded\n * @throws {@link Error} - Throws error when token is invalid or payload malformed.\n */\nfunction decodeJWT(token) {\n  const tokenParts = token.split('.');\n  if (tokenParts.length !== 3) {\n    throw new Error('Invalid token');\n  }\n  try {\n    const base64WithUrlSafe = tokenParts[1];\n    const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonStr = decodeURIComponent(base64Decoder.convert(base64).split('').map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`).join(''));\n    const payload = JSON.parse(jsonStr);\n    return {\n      toString: () => token,\n      payload\n    };\n  } catch (err) {\n    throw new Error('Invalid token payload');\n  }\n}\nexport { assertIdentityPoolIdConfig, assertOAuthConfig, assertTokenProviderConfig, decodeJWT };\n", "/**\n * @internal\n */\nexport var BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexport var DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexport var KEY = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);\n/**\n * @internal\n */\nexport var INIT = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n/**\n * @internal\n */\nexport var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n", "import { BLOCK_SIZE, DIGEST_LENGTH, INIT, KEY, MAX_HASHABLE_LENGTH } from \"./constants\";\n/**\n * @internal\n */\nvar RawSha256 = /** @class */function () {\n  function RawSha256() {\n    this.state = Int32Array.from(INIT);\n    this.temp = new Int32Array(64);\n    this.buffer = new Uint8Array(64);\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    /**\n     * @internal\n     */\n    this.finished = false;\n  }\n  RawSha256.prototype.update = function (data) {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n    var position = 0;\n    var byteLength = data.byteLength;\n    this.bytesHashed += byteLength;\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  };\n  RawSha256.prototype.digest = function () {\n    if (!this.finished) {\n      var bitsHashed = this.bytesHashed * 8;\n      var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n      var undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n      for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n      this.hashBuffer();\n      this.finished = true;\n    }\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    var out = new Uint8Array(DIGEST_LENGTH);\n    for (var i = 0; i < 8; i++) {\n      out[i * 4] = this.state[i] >>> 24 & 0xff;\n      out[i * 4 + 1] = this.state[i] >>> 16 & 0xff;\n      out[i * 4 + 2] = this.state[i] >>> 8 & 0xff;\n      out[i * 4 + 3] = this.state[i] >>> 0 & 0xff;\n    }\n    return out;\n  };\n  RawSha256.prototype.hashBuffer = function () {\n    var _a = this,\n      buffer = _a.buffer,\n      state = _a.state;\n    var state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n    for (var i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] = (buffer[i * 4] & 0xff) << 24 | (buffer[i * 4 + 1] & 0xff) << 16 | (buffer[i * 4 + 2] & 0xff) << 8 | buffer[i * 4 + 3] & 0xff;\n      } else {\n        var u = this.temp[i - 2];\n        var t1_1 = (u >>> 17 | u << 15) ^ (u >>> 19 | u << 13) ^ u >>> 10;\n        u = this.temp[i - 15];\n        var t2_1 = (u >>> 7 | u << 25) ^ (u >>> 18 | u << 14) ^ u >>> 3;\n        this.temp[i] = (t1_1 + this.temp[i - 7] | 0) + (t2_1 + this.temp[i - 16] | 0);\n      }\n      var t1 = (((state4 >>> 6 | state4 << 26) ^ (state4 >>> 11 | state4 << 21) ^ (state4 >>> 25 | state4 << 7)) + (state4 & state5 ^ ~state4 & state6) | 0) + (state7 + (KEY[i] + this.temp[i] | 0) | 0) | 0;\n      var t2 = ((state0 >>> 2 | state0 << 30) ^ (state0 >>> 13 | state0 << 19) ^ (state0 >>> 22 | state0 << 10)) + (state0 & state1 ^ state0 & state2 ^ state1 & state2) | 0;\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = state3 + t1 | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = t1 + t2 | 0;\n    }\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  };\n  return RawSha256;\n}();\nexport { RawSha256 };\n", "export const fromUtf8 = input => new TextEncoder().encode(input);", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from ? function (input) {\n  return Buffer.from(input, \"utf8\");\n} : fromUtf8Browser;\nexport function convertToBuffer(data) {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n  return new Uint8Array(data);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isEmptyData(data) {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n  return data.byteLength === 0;\n}\n", "import { __awaiter, __generator } from \"tslib\";\nimport { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nvar Sha256 = /** @class */function () {\n  function Sha256(secret) {\n    this.secret = secret;\n    this.hash = new RawSha256();\n    this.reset();\n  }\n  Sha256.prototype.update = function (toHash) {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  };\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  Sha256.prototype.digestSync = function () {\n    if (this.error) {\n      throw this.error;\n    }\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n      return this.outer.digest();\n    }\n    return this.hash.digest();\n  };\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  Sha256.prototype.digest = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.digestSync()];\n      });\n    });\n  };\n  Sha256.prototype.reset = function () {\n    this.hash = new RawSha256();\n    if (this.secret) {\n      this.outer = new RawSha256();\n      var inner = bufferFromSecret(this.secret);\n      var outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n      for (var i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n      this.hash.update(inner);\n      this.outer.update(outer);\n      // overwrite the copied key in memory\n      for (var i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  };\n  return Sha256;\n}();\nexport { Sha256 };\nfunction bufferFromSecret(secret) {\n  var input = convertToBuffer(secret);\n  if (input.byteLength > BLOCK_SIZE) {\n    var bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n  var buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants.mjs';\nimport { AmplifyError } from '../errors/AmplifyError.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' ? Symbol('amplify_default') : '@@amplify_default';\nconst logger = new ConsoleLogger('Hub');\nclass HubClass {\n  constructor(name) {\n    this.listeners = new Map();\n    this.protectedChannels = ['core', 'auth', 'api', 'analytics', 'interactions', 'pubsub', 'storage', 'ui', 'xr'];\n    this.name = name;\n  }\n  /**\n   * Used internally to remove a Hub listener.\n   *\n   * @remarks\n   * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n   */\n  _remove(channel, listener) {\n    const holder = this.listeners.get(channel);\n    if (!holder) {\n      logger.warn(`No listeners for ${channel}`);\n      return;\n    }\n    this.listeners.set(channel, [...holder.filter(({\n      callback\n    }) => callback !== listener)]);\n  }\n  dispatch(channel, payload, source, ampSymbol) {\n    if (typeof channel === 'string' && this.protectedChannels.indexOf(channel) > -1) {\n      const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n      if (!hasAccess) {\n        logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n      }\n    }\n    const capsule = {\n      channel,\n      payload: {\n        ...payload\n      },\n      source,\n      patternInfo: []\n    };\n    try {\n      this._toListeners(capsule);\n    } catch (e) {\n      logger.error(e);\n    }\n  }\n  listen(channel, callback, listenerName = 'noname') {\n    let cb;\n    if (typeof callback !== 'function') {\n      throw new AmplifyError({\n        name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n        message: 'No callback supplied to Hub'\n      });\n    } else {\n      // Needs to be casted as a more generic type\n      cb = callback;\n    }\n    let holder = this.listeners.get(channel);\n    if (!holder) {\n      holder = [];\n      this.listeners.set(channel, holder);\n    }\n    holder.push({\n      name: listenerName,\n      callback: cb\n    });\n    return () => {\n      this._remove(channel, cb);\n    };\n  }\n  _toListeners(capsule) {\n    const {\n      channel,\n      payload\n    } = capsule;\n    const holder = this.listeners.get(channel);\n    if (holder) {\n      holder.forEach(listener => {\n        logger.debug(`Dispatching to ${channel} with `, payload);\n        try {\n          listener.callback(capsule);\n        } catch (e) {\n          logger.error(e);\n        }\n      });\n    }\n  }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nconst Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nconst HubInternal = new HubClass('internal-hub');\nexport { AMPLIFY_SYMBOL, Hub, HubClass, HubInternal };\n", "import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('getClientInfo');\nfunction getClientInfo() {\n  if (typeof window === 'undefined') {\n    return {};\n  }\n  return browserClientInfo();\n}\nfunction browserClientInfo() {\n  if (typeof window === 'undefined') {\n    logger.warn('No window object available to get browser client info');\n    return {};\n  }\n  const nav = window.navigator;\n  if (!nav) {\n    logger.warn('No navigator object available to get browser client info');\n    return {};\n  }\n  const {\n    platform,\n    product,\n    vendor,\n    userAgent,\n    language\n  } = nav;\n  const type = getBrowserType(userAgent);\n  const timezone = browserTimezone();\n  return {\n    platform,\n    make: product || vendor,\n    model: type.type,\n    version: type.version,\n    appVersion: [type.type, type.version].join('/'),\n    language,\n    timezone\n  };\n}\nfunction browserTimezone() {\n  const tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n  return tzMatch ? tzMatch[1] || '' : '';\n}\nfunction getBrowserType(userAgent) {\n  // The latest user agents for Opera: https://www.whatismybrowser.com/guides/the-latest-user-agent/opera\n  const operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9.]+).*/i.exec(userAgent);\n  if (operaMatch) {\n    return {\n      type: operaMatch[1],\n      version: operaMatch[2]\n    };\n  }\n  // The latest user agents for Edge: https://www.whatismybrowser.com/guides/the-latest-user-agent/edge\n  const ieMatch = /.+(Trident|Edge|Edg|EdgA|EdgiOS)\\/([0-9.]+).*/i.exec(userAgent);\n  if (ieMatch) {\n    return {\n      type: ieMatch[1],\n      version: ieMatch[2]\n    };\n  }\n  // The latest user agents for web browsers on Firefox and Chrome\n  // https://www.whatismybrowser.com/guides/the-latest-user-agent/firefox\n  // https://www.whatismybrowser.com/guides/the-latest-user-agent/chrome\n  const cfMatch = /.+(Chrome|CriOS|Firefox|FxiOS)\\/([0-9.]+).*/i.exec(userAgent);\n  if (cfMatch) {\n    return {\n      type: cfMatch[1],\n      version: cfMatch[2]\n    };\n  }\n  // The latest user agents for Safari: https://www.whatismybrowser.com/guides/the-latest-user-agent/safari\n  const sMatch = /.+(Safari)\\/([0-9.]+).*/i.exec(userAgent);\n  if (sMatch) {\n    return {\n      type: sMatch[1],\n      version: sMatch[2]\n    };\n  }\n  const awkMatch = /.+(AppleWebKit)\\/([0-9.]+).*/i.exec(userAgent);\n  if (awkMatch) {\n    return {\n      type: awkMatch[1],\n      version: awkMatch[2]\n    };\n  }\n  const anyMatch = /.*([A-Z]+)\\/([0-9.]+).*/i.exec(userAgent);\n  if (anyMatch) {\n    return {\n      type: anyMatch[1],\n      version: anyMatch[2]\n    };\n  }\n  return {\n    type: '',\n    version: ''\n  };\n}\nexport { getClientInfo };\n", "import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\nimport { isNonRetryableError } from './isNonRetryableError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('retryUtil');\n/**\n * @private\n * Internal use of Amplify only\n */\nasync function retry(functionToRetry, args, delayFn, onTerminate) {\n  if (typeof functionToRetry !== 'function') {\n    throw Error('functionToRetry must be a function');\n  }\n  // TODO(eslint): remove this linter suppression with refactoring.\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve, reject) => {\n    let attempt = 0;\n    let terminated = false;\n    let timeout;\n    let wakeUp = () => {\n      // no-op\n    }; // will be replaced with a resolver()\n    // used after the loop if terminated while waiting for a timer.\n    let lastError;\n    onTerminate && onTerminate.then(() => {\n      // signal not to try anymore.\n      terminated = true;\n      // stop sleeping if we're sleeping.\n      clearTimeout(timeout);\n      wakeUp();\n    });\n    // TODO(eslint): remove this linter suppression with refactoring.\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (!terminated) {\n      attempt++;\n      logger.debug(`${functionToRetry.name} attempt #${attempt} with this vars: ${JSON.stringify(args)}`);\n      try {\n        resolve(await functionToRetry(...args));\n        return;\n      } catch (err) {\n        lastError = err;\n        logger.debug(`error on ${functionToRetry.name}`, err);\n        if (isNonRetryableError(err)) {\n          logger.debug(`${functionToRetry.name} non retryable error`, err);\n          reject(err);\n          return;\n        }\n        const retryIn = delayFn(attempt, args, err);\n        logger.debug(`${functionToRetry.name} retrying in ${retryIn} ms`);\n        // we check `terminated` again here because it could have flipped\n        // in the time it took `functionToRetry` to return.\n        if (retryIn === false || terminated) {\n          reject(err);\n          return;\n        } else {\n          await new Promise(_resolve => {\n            wakeUp = _resolve; // export wakeUp for onTerminate handling\n            timeout = setTimeout(wakeUp, retryIn);\n          });\n        }\n      }\n    }\n    // reached if terminated while waiting for a timer.\n    reject(lastError);\n  });\n}\nexport { retry };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst deepFreeze = object => {\n  const propNames = Reflect.ownKeys(object);\n  for (const name of propNames) {\n    const value = object[name];\n    if (value && typeof value === 'object' || typeof value === 'function') {\n      deepFreeze(value);\n    }\n  }\n  return Object.freeze(object);\n};\nexport { deepFreeze };\n", "import { ConsoleLogger } from './Logger/ConsoleLogger.mjs';\nimport { AmplifyError } from './errors/AmplifyError.mjs';\nimport './types/errors.mjs';\nimport './errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('parseAWSExports');\nconst authTypeMapping = {\n  API_KEY: 'apiKey',\n  AWS_IAM: 'iam',\n  AMAZON_COGNITO_USER_POOLS: 'userPool',\n  OPENID_CONNECT: 'oidc',\n  NONE: 'none',\n  AWS_LAMBDA: 'lambda',\n  // `LAMBDA` is an incorrect value that was added during the v6 rewrite.\n  // Keeping it as a valid value until v7 to prevent breaking customers who might\n  // be relying on it as a workaround.\n  // ref: https://github.com/aws-amplify/amplify-js/pull/12922\n  // TODO: @v7 remove next line\n  LAMBDA: 'lambda'\n};\n/**\n * Converts the object imported from `aws-exports.js` or `amplifyconfiguration.json` files generated by\n * the Amplify CLI into an object that conforms to the {@link ResourcesConfig}.\n *\n * @param config A configuration object imported  from `aws-exports.js` or `amplifyconfiguration.json`.\n *\n * @returns An object that conforms to the {@link ResourcesConfig} .\n */\nconst parseAWSExports = (config = {}) => {\n  if (!Object.prototype.hasOwnProperty.call(config, 'aws_project_region')) {\n    throw new AmplifyError({\n      name: 'InvalidParameterException',\n      message: 'Invalid config parameter.',\n      recoverySuggestion: 'Ensure passing the config object imported from  `amplifyconfiguration.json`.'\n    });\n  }\n  const {\n    aws_appsync_apiKey,\n    aws_appsync_authenticationType,\n    aws_appsync_graphqlEndpoint,\n    aws_appsync_region,\n    aws_bots_config,\n    aws_cognito_identity_pool_id,\n    aws_cognito_sign_up_verification_method,\n    aws_cognito_mfa_configuration,\n    aws_cognito_mfa_types,\n    aws_cognito_password_protection_settings,\n    aws_cognito_verification_mechanisms,\n    aws_cognito_signup_attributes,\n    aws_cognito_social_providers,\n    aws_cognito_username_attributes,\n    aws_mandatory_sign_in,\n    aws_mobile_analytics_app_id,\n    aws_mobile_analytics_app_region,\n    aws_user_files_s3_bucket,\n    aws_user_files_s3_bucket_region,\n    aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing,\n    aws_user_pools_id,\n    aws_user_pools_web_client_id,\n    geo,\n    oauth,\n    predictions,\n    aws_cloud_logic_custom,\n    Notifications,\n    modelIntrospection\n  } = config;\n  const amplifyConfig = {};\n  // Analytics\n  if (aws_mobile_analytics_app_id) {\n    amplifyConfig.Analytics = {\n      Pinpoint: {\n        appId: aws_mobile_analytics_app_id,\n        region: aws_mobile_analytics_app_region\n      }\n    };\n  }\n  // Notifications\n  const {\n    InAppMessaging,\n    Push\n  } = Notifications ?? {};\n  if (InAppMessaging?.AWSPinpoint || Push?.AWSPinpoint) {\n    if (InAppMessaging?.AWSPinpoint) {\n      const {\n        appId,\n        region\n      } = InAppMessaging.AWSPinpoint;\n      amplifyConfig.Notifications = {\n        InAppMessaging: {\n          Pinpoint: {\n            appId,\n            region\n          }\n        }\n      };\n    }\n    if (Push?.AWSPinpoint) {\n      const {\n        appId,\n        region\n      } = Push.AWSPinpoint;\n      amplifyConfig.Notifications = {\n        ...amplifyConfig.Notifications,\n        PushNotification: {\n          Pinpoint: {\n            appId,\n            region\n          }\n        }\n      };\n    }\n  }\n  // Interactions\n  if (Array.isArray(aws_bots_config)) {\n    amplifyConfig.Interactions = {\n      LexV1: Object.fromEntries(aws_bots_config.map(bot => [bot.name, bot]))\n    };\n  }\n  // API\n  if (aws_appsync_graphqlEndpoint) {\n    const defaultAuthMode = authTypeMapping[aws_appsync_authenticationType];\n    if (!defaultAuthMode) {\n      logger.debug(`Invalid authentication type ${aws_appsync_authenticationType}. Falling back to IAM.`);\n    }\n    amplifyConfig.API = {\n      GraphQL: {\n        endpoint: aws_appsync_graphqlEndpoint,\n        apiKey: aws_appsync_apiKey,\n        region: aws_appsync_region,\n        defaultAuthMode: defaultAuthMode ?? 'iam'\n      }\n    };\n    if (modelIntrospection) {\n      amplifyConfig.API.GraphQL.modelIntrospection = modelIntrospection;\n    }\n  }\n  // Auth\n  const mfaConfig = aws_cognito_mfa_configuration ? {\n    status: aws_cognito_mfa_configuration && aws_cognito_mfa_configuration.toLowerCase(),\n    totpEnabled: aws_cognito_mfa_types?.includes('TOTP') ?? false,\n    smsEnabled: aws_cognito_mfa_types?.includes('SMS') ?? false\n  } : undefined;\n  const passwordFormatConfig = aws_cognito_password_protection_settings ? {\n    minLength: aws_cognito_password_protection_settings.passwordPolicyMinLength,\n    requireLowercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_LOWERCASE') ?? false,\n    requireUppercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_UPPERCASE') ?? false,\n    requireNumbers: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_NUMBERS') ?? false,\n    requireSpecialCharacters: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_SYMBOLS') ?? false\n  } : undefined;\n  const mergedUserAttributes = Array.from(new Set([...(aws_cognito_verification_mechanisms ?? []), ...(aws_cognito_signup_attributes ?? [])]));\n  const userAttributes = mergedUserAttributes.reduce((attributes, key) => ({\n    ...attributes,\n    // All user attributes generated by the CLI are required\n    [key.toLowerCase()]: {\n      required: true\n    }\n  }), {});\n  const loginWithEmailEnabled = aws_cognito_username_attributes?.includes('EMAIL') ?? false;\n  const loginWithPhoneEnabled = aws_cognito_username_attributes?.includes('PHONE_NUMBER') ?? false;\n  if (aws_cognito_identity_pool_id || aws_user_pools_id) {\n    amplifyConfig.Auth = {\n      Cognito: {\n        identityPoolId: aws_cognito_identity_pool_id,\n        allowGuestAccess: aws_mandatory_sign_in !== 'enable',\n        signUpVerificationMethod: aws_cognito_sign_up_verification_method,\n        userAttributes,\n        userPoolClientId: aws_user_pools_web_client_id,\n        userPoolId: aws_user_pools_id,\n        mfa: mfaConfig,\n        passwordFormat: passwordFormatConfig,\n        loginWith: {\n          username: !(loginWithEmailEnabled || loginWithPhoneEnabled),\n          email: loginWithEmailEnabled,\n          phone: loginWithPhoneEnabled\n        }\n      }\n    };\n  }\n  const hasOAuthConfig = oauth ? Object.keys(oauth).length > 0 : false;\n  const hasSocialProviderConfig = aws_cognito_social_providers ? aws_cognito_social_providers.length > 0 : false;\n  if (amplifyConfig.Auth && hasOAuthConfig) {\n    amplifyConfig.Auth.Cognito.loginWith = {\n      ...amplifyConfig.Auth.Cognito.loginWith,\n      oauth: {\n        ...getOAuthConfig(oauth),\n        ...(hasSocialProviderConfig && {\n          providers: parseSocialProviders(aws_cognito_social_providers)\n        })\n      }\n    };\n  }\n  // Storage\n  if (aws_user_files_s3_bucket) {\n    amplifyConfig.Storage = {\n      S3: {\n        bucket: aws_user_files_s3_bucket,\n        region: aws_user_files_s3_bucket_region,\n        dangerouslyConnectToHttpEndpointForTesting: aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing\n      }\n    };\n  }\n  // Geo\n  if (geo) {\n    const {\n      amazon_location_service\n    } = geo;\n    amplifyConfig.Geo = {\n      LocationService: {\n        maps: amazon_location_service.maps,\n        geofenceCollections: amazon_location_service.geofenceCollections,\n        searchIndices: amazon_location_service.search_indices,\n        region: amazon_location_service.region\n      }\n    };\n  }\n  // REST API\n  if (aws_cloud_logic_custom) {\n    amplifyConfig.API = {\n      ...amplifyConfig.API,\n      REST: aws_cloud_logic_custom.reduce((acc, api) => {\n        const {\n          name,\n          endpoint,\n          region,\n          service\n        } = api;\n        return {\n          ...acc,\n          [name]: {\n            endpoint,\n            ...(service ? {\n              service\n            } : undefined),\n            ...(region ? {\n              region\n            } : undefined)\n          }\n        };\n      }, {})\n    };\n  }\n  // Predictions\n  if (predictions) {\n    // map VoiceId from speechGenerator defaults to voiceId\n    const {\n      VoiceId: voiceId\n    } = predictions?.convert?.speechGenerator?.defaults ?? {};\n    amplifyConfig.Predictions = voiceId ? {\n      ...predictions,\n      convert: {\n        ...predictions.convert,\n        speechGenerator: {\n          ...predictions.convert.speechGenerator,\n          defaults: {\n            voiceId\n          }\n        }\n      }\n    } : predictions;\n  }\n  return amplifyConfig;\n};\nconst getRedirectUrl = redirectStr => redirectStr?.split(',') ?? [];\nconst getOAuthConfig = ({\n  domain,\n  scope,\n  redirectSignIn,\n  redirectSignOut,\n  responseType\n}) => ({\n  domain,\n  scopes: scope,\n  redirectSignIn: getRedirectUrl(redirectSignIn),\n  redirectSignOut: getRedirectUrl(redirectSignOut),\n  responseType\n});\nconst parseSocialProviders = aws_cognito_social_providers => {\n  return aws_cognito_social_providers.map(provider => {\n    const updatedProvider = provider.toLowerCase();\n    return updatedProvider.charAt(0).toUpperCase() + updatedProvider.slice(1);\n  });\n};\nexport { parseAWSExports };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ADD_OAUTH_LISTENER = Symbol('oauth-listener');\nexport { ADD_OAUTH_LISTENER };\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "import validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n    case 1:\n      return x ^ y ^ z;\n    case 2:\n      return x & y ^ x & z ^ y & z;\n    case 3:\n      return x ^ y ^ z;\n  }\n}\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n    M[i] = arr;\n  }\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isAmplifyOutputs(config) {\n  // version format initially will be '1' but is expected to be something like x.y where x is major and y minor version\n  const {\n    version\n  } = config;\n  if (!version) {\n    return false;\n  }\n  return version.startsWith('1');\n}\nfunction parseStorage(amplifyOutputsStorageProperties) {\n  if (!amplifyOutputsStorageProperties) {\n    return undefined;\n  }\n  const {\n    bucket_name,\n    aws_region,\n    buckets\n  } = amplifyOutputsStorageProperties;\n  return {\n    S3: {\n      bucket: bucket_name,\n      region: aws_region,\n      buckets: buckets && createBucketInfoMap(buckets)\n    }\n  };\n}\nfunction parseAuth(amplifyOutputsAuthProperties) {\n  if (!amplifyOutputsAuthProperties) {\n    return undefined;\n  }\n  const {\n    user_pool_id,\n    user_pool_client_id,\n    identity_pool_id,\n    password_policy,\n    mfa_configuration,\n    mfa_methods,\n    unauthenticated_identities_enabled,\n    oauth,\n    username_attributes,\n    standard_required_attributes,\n    groups\n  } = amplifyOutputsAuthProperties;\n  const authConfig = {\n    Cognito: {\n      userPoolId: user_pool_id,\n      userPoolClientId: user_pool_client_id,\n      groups\n    }\n  };\n  if (identity_pool_id) {\n    authConfig.Cognito = {\n      ...authConfig.Cognito,\n      identityPoolId: identity_pool_id\n    };\n  }\n  if (password_policy) {\n    authConfig.Cognito.passwordFormat = {\n      requireLowercase: password_policy.require_lowercase,\n      requireNumbers: password_policy.require_numbers,\n      requireUppercase: password_policy.require_uppercase,\n      requireSpecialCharacters: password_policy.require_symbols,\n      minLength: password_policy.min_length ?? 6\n    };\n  }\n  if (mfa_configuration) {\n    authConfig.Cognito.mfa = {\n      status: getMfaStatus(mfa_configuration),\n      smsEnabled: mfa_methods?.includes('SMS'),\n      totpEnabled: mfa_methods?.includes('TOTP')\n    };\n  }\n  if (unauthenticated_identities_enabled) {\n    authConfig.Cognito.allowGuestAccess = unauthenticated_identities_enabled;\n  }\n  if (oauth) {\n    authConfig.Cognito.loginWith = {\n      oauth: {\n        domain: oauth.domain,\n        redirectSignIn: oauth.redirect_sign_in_uri,\n        redirectSignOut: oauth.redirect_sign_out_uri,\n        responseType: oauth.response_type === 'token' ? 'token' : 'code',\n        scopes: oauth.scopes,\n        providers: getOAuthProviders(oauth.identity_providers)\n      }\n    };\n  }\n  if (username_attributes) {\n    authConfig.Cognito.loginWith = {\n      ...authConfig.Cognito.loginWith,\n      email: username_attributes.includes('email'),\n      phone: username_attributes.includes('phone_number'),\n      // Signing in with a username is not currently supported in Gen2, this should always evaluate to false\n      username: username_attributes.includes('username')\n    };\n  }\n  if (standard_required_attributes) {\n    authConfig.Cognito.userAttributes = standard_required_attributes.reduce((acc, curr) => ({\n      ...acc,\n      [curr]: {\n        required: true\n      }\n    }), {});\n  }\n  return authConfig;\n}\nfunction parseAnalytics(amplifyOutputsAnalyticsProperties) {\n  if (!amplifyOutputsAnalyticsProperties?.amazon_pinpoint) {\n    return undefined;\n  }\n  const {\n    amazon_pinpoint\n  } = amplifyOutputsAnalyticsProperties;\n  return {\n    Pinpoint: {\n      appId: amazon_pinpoint.app_id,\n      region: amazon_pinpoint.aws_region\n    }\n  };\n}\nfunction parseGeo(amplifyOutputsAnalyticsProperties) {\n  if (!amplifyOutputsAnalyticsProperties) {\n    return undefined;\n  }\n  const {\n    aws_region,\n    geofence_collections,\n    maps,\n    search_indices\n  } = amplifyOutputsAnalyticsProperties;\n  return {\n    LocationService: {\n      region: aws_region,\n      searchIndices: search_indices,\n      geofenceCollections: geofence_collections,\n      maps\n    }\n  };\n}\nfunction parseData(amplifyOutputsDataProperties) {\n  if (!amplifyOutputsDataProperties) {\n    return undefined;\n  }\n  const {\n    aws_region,\n    default_authorization_type,\n    url,\n    api_key,\n    model_introspection\n  } = amplifyOutputsDataProperties;\n  const GraphQL = {\n    endpoint: url,\n    defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n    region: aws_region,\n    apiKey: api_key,\n    modelIntrospection: model_introspection\n  };\n  return {\n    GraphQL\n  };\n}\nfunction parseCustom(amplifyOutputsCustomProperties) {\n  if (!amplifyOutputsCustomProperties?.events) {\n    return undefined;\n  }\n  const {\n    url,\n    aws_region,\n    api_key,\n    default_authorization_type\n  } = amplifyOutputsCustomProperties.events;\n  const Events = {\n    endpoint: url,\n    defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n    region: aws_region,\n    apiKey: api_key\n  };\n  return {\n    Events\n  };\n}\nfunction parseNotifications(amplifyOutputsNotificationsProperties) {\n  if (!amplifyOutputsNotificationsProperties) {\n    return undefined;\n  }\n  const {\n    aws_region,\n    channels,\n    amazon_pinpoint_app_id\n  } = amplifyOutputsNotificationsProperties;\n  const hasInAppMessaging = channels.includes('IN_APP_MESSAGING');\n  const hasPushNotification = channels.includes('APNS') || channels.includes('FCM');\n  if (!(hasInAppMessaging || hasPushNotification)) {\n    return undefined;\n  }\n  // At this point, we know the Amplify outputs contains at least one supported channel\n  const notificationsConfig = {};\n  if (hasInAppMessaging) {\n    notificationsConfig.InAppMessaging = {\n      Pinpoint: {\n        appId: amazon_pinpoint_app_id,\n        region: aws_region\n      }\n    };\n  }\n  if (hasPushNotification) {\n    notificationsConfig.PushNotification = {\n      Pinpoint: {\n        appId: amazon_pinpoint_app_id,\n        region: aws_region\n      }\n    };\n  }\n  return notificationsConfig;\n}\nfunction parseAmplifyOutputs(amplifyOutputs) {\n  const resourcesConfig = {};\n  if (amplifyOutputs.storage) {\n    resourcesConfig.Storage = parseStorage(amplifyOutputs.storage);\n  }\n  if (amplifyOutputs.auth) {\n    resourcesConfig.Auth = parseAuth(amplifyOutputs.auth);\n  }\n  if (amplifyOutputs.analytics) {\n    resourcesConfig.Analytics = parseAnalytics(amplifyOutputs.analytics);\n  }\n  if (amplifyOutputs.geo) {\n    resourcesConfig.Geo = parseGeo(amplifyOutputs.geo);\n  }\n  if (amplifyOutputs.data) {\n    resourcesConfig.API = parseData(amplifyOutputs.data);\n  }\n  if (amplifyOutputs.custom) {\n    const customConfig = parseCustom(amplifyOutputs.custom);\n    if (customConfig && 'Events' in customConfig) {\n      resourcesConfig.API = {\n        ...resourcesConfig.API,\n        ...customConfig\n      };\n    }\n  }\n  if (amplifyOutputs.notifications) {\n    resourcesConfig.Notifications = parseNotifications(amplifyOutputs.notifications);\n  }\n  return resourcesConfig;\n}\nconst authModeNames = {\n  AMAZON_COGNITO_USER_POOLS: 'userPool',\n  API_KEY: 'apiKey',\n  AWS_IAM: 'iam',\n  AWS_LAMBDA: 'lambda',\n  OPENID_CONNECT: 'oidc'\n};\nfunction getGraphQLAuthMode(authType) {\n  return authModeNames[authType];\n}\nconst providerNames = {\n  GOOGLE: 'Google',\n  LOGIN_WITH_AMAZON: 'Amazon',\n  FACEBOOK: 'Facebook',\n  SIGN_IN_WITH_APPLE: 'Apple'\n};\nfunction getOAuthProviders(providers = []) {\n  return providers.reduce((oAuthProviders, provider) => {\n    if (providerNames[provider] !== undefined) {\n      oAuthProviders.push(providerNames[provider]);\n    }\n    return oAuthProviders;\n  }, []);\n}\nfunction getMfaStatus(mfaConfiguration) {\n  if (mfaConfiguration === 'OPTIONAL') return 'optional';\n  if (mfaConfiguration === 'REQUIRED') return 'on';\n  return 'off';\n}\nfunction createBucketInfoMap(buckets) {\n  const mappedBuckets = {};\n  buckets.forEach(({\n    name,\n    bucket_name: bucketName,\n    aws_region: region,\n    paths\n  }) => {\n    if (name in mappedBuckets) {\n      throw new Error(`Duplicate friendly name found: ${name}. Name must be unique.`);\n    }\n    const sanitizedPaths = paths ? Object.entries(paths).reduce((acc, [key, value]) => {\n      if (value !== undefined) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {}) : undefined;\n    mappedBuckets[name] = {\n      bucketName,\n      region,\n      paths: sanitizedPaths\n    };\n  });\n  return mappedBuckets;\n}\nexport { isAmplifyOutputs, parseAmplifyOutputs, parseAnalytics };\n", "import { parseAWSExports } from '../parseAWSExports.mjs';\nimport { isAmplifyOutputs, parseAmplifyOutputs } from '../parseAmplifyOutputs.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Parses the variety of configuration shapes that Amplify can accept into a ResourcesConfig.\n *\n * @param amplifyConfig An Amplify configuration object conforming to one of the supported schemas.\n * @return A ResourcesConfig for the provided configuration object.\n */\nconst parseAmplifyConfig = amplifyConfig => {\n  if (Object.keys(amplifyConfig).some(key => key.startsWith('aws_'))) {\n    return parseAWSExports(amplifyConfig);\n  } else if (isAmplifyOutputs(amplifyConfig)) {\n    return parseAmplifyOutputs(amplifyConfig);\n  } else {\n    return amplifyConfig;\n  }\n};\nexport { parseAmplifyConfig };\n", "const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n  let encodedByte = i.toString(16).toLowerCase();\n  if (encodedByte.length === 1) {\n    encodedByte = `0${encodedByte}`;\n  }\n  SHORT_TO_HEX[i] = encodedByte;\n  HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n  if (encoded.length % 2 !== 0) {\n    throw new Error(\"Hex encoded strings must have an even number length\");\n  }\n  const out = new Uint8Array(encoded.length / 2);\n  for (let i = 0; i < encoded.length; i += 2) {\n    const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n    if (encodedByte in HEX_TO_SHORT) {\n      out[i / 2] = HEX_TO_SHORT[encodedByte];\n    } else {\n      throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n    }\n  }\n  return out;\n}\nexport function toHex(bytes) {\n  let out = \"\";\n  for (let i = 0; i < bytes.byteLength; i++) {\n    out += SHORT_TO_HEX[bytes[i]];\n  }\n  return out;\n}", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar Framework;\n(function (Framework) {\n  // < 100 - Web frameworks\n  Framework[\"WebUnknown\"] = \"0\";\n  Framework[\"React\"] = \"1\";\n  Framework[\"NextJs\"] = \"2\";\n  Framework[\"Angular\"] = \"3\";\n  Framework[\"VueJs\"] = \"4\";\n  Framework[\"Nuxt\"] = \"5\";\n  Framework[\"Svelte\"] = \"6\";\n  // 100s - Server side frameworks\n  Framework[\"ServerSideUnknown\"] = \"100\";\n  Framework[\"ReactSSR\"] = \"101\";\n  Framework[\"NextJsSSR\"] = \"102\";\n  Framework[\"AngularSSR\"] = \"103\";\n  Framework[\"VueJsSSR\"] = \"104\";\n  Framework[\"NuxtSSR\"] = \"105\";\n  Framework[\"SvelteSSR\"] = \"106\";\n  // 200s - Mobile framework\n  Framework[\"ReactNative\"] = \"201\";\n  Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nvar Category;\n(function (Category) {\n  Category[\"AI\"] = \"ai\";\n  Category[\"API\"] = \"api\";\n  Category[\"Auth\"] = \"auth\";\n  Category[\"Analytics\"] = \"analytics\";\n  Category[\"DataStore\"] = \"datastore\";\n  Category[\"Geo\"] = \"geo\";\n  Category[\"InAppMessaging\"] = \"inappmessaging\";\n  Category[\"Interactions\"] = \"interactions\";\n  Category[\"Predictions\"] = \"predictions\";\n  Category[\"PubSub\"] = \"pubsub\";\n  Category[\"PushNotification\"] = \"pushnotification\";\n  Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nvar AiAction;\n(function (AiAction) {\n  AiAction[\"CreateConversation\"] = \"1\";\n  AiAction[\"GetConversation\"] = \"2\";\n  AiAction[\"ListConversations\"] = \"3\";\n  AiAction[\"DeleteConversation\"] = \"4\";\n  AiAction[\"SendMessage\"] = \"5\";\n  AiAction[\"ListMessages\"] = \"6\";\n  AiAction[\"OnMessage\"] = \"7\";\n  AiAction[\"Generation\"] = \"8\";\n  AiAction[\"UpdateConversation\"] = \"9\";\n})(AiAction || (AiAction = {}));\nvar AnalyticsAction;\n(function (AnalyticsAction) {\n  AnalyticsAction[\"Record\"] = \"1\";\n  AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nvar ApiAction;\n(function (ApiAction) {\n  ApiAction[\"GraphQl\"] = \"1\";\n  ApiAction[\"Get\"] = \"2\";\n  ApiAction[\"Post\"] = \"3\";\n  ApiAction[\"Put\"] = \"4\";\n  ApiAction[\"Patch\"] = \"5\";\n  ApiAction[\"Del\"] = \"6\";\n  ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nvar AuthAction;\n(function (AuthAction) {\n  AuthAction[\"SignUp\"] = \"1\";\n  AuthAction[\"ConfirmSignUp\"] = \"2\";\n  AuthAction[\"ResendSignUpCode\"] = \"3\";\n  AuthAction[\"SignIn\"] = \"4\";\n  AuthAction[\"FetchMFAPreference\"] = \"6\";\n  AuthAction[\"UpdateMFAPreference\"] = \"7\";\n  AuthAction[\"SetUpTOTP\"] = \"10\";\n  AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n  AuthAction[\"ConfirmSignIn\"] = \"12\";\n  AuthAction[\"DeleteUserAttributes\"] = \"15\";\n  AuthAction[\"DeleteUser\"] = \"16\";\n  AuthAction[\"UpdateUserAttributes\"] = \"17\";\n  AuthAction[\"FetchUserAttributes\"] = \"18\";\n  AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n  AuthAction[\"SignOut\"] = \"26\";\n  AuthAction[\"UpdatePassword\"] = \"27\";\n  AuthAction[\"ResetPassword\"] = \"28\";\n  AuthAction[\"ConfirmResetPassword\"] = \"29\";\n  AuthAction[\"FederatedSignIn\"] = \"30\";\n  AuthAction[\"RememberDevice\"] = \"32\";\n  AuthAction[\"ForgetDevice\"] = \"33\";\n  AuthAction[\"FetchDevices\"] = \"34\";\n  AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n  AuthAction[\"SignInWithRedirect\"] = \"36\";\n  AuthAction[\"StartWebAuthnRegistration\"] = \"37\";\n  AuthAction[\"CompleteWebAuthnRegistration\"] = \"38\";\n  AuthAction[\"ListWebAuthnCredentials\"] = \"39\";\n  AuthAction[\"DeleteWebAuthnCredential\"] = \"40\";\n})(AuthAction || (AuthAction = {}));\nvar DataStoreAction;\n(function (DataStoreAction) {\n  DataStoreAction[\"Subscribe\"] = \"1\";\n  DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nvar GeoAction;\n(function (GeoAction) {\n  GeoAction[\"SearchByText\"] = \"0\";\n  GeoAction[\"SearchByCoordinates\"] = \"1\";\n  GeoAction[\"SearchForSuggestions\"] = \"2\";\n  GeoAction[\"SearchByPlaceId\"] = \"3\";\n  GeoAction[\"SaveGeofences\"] = \"4\";\n  GeoAction[\"GetGeofence\"] = \"5\";\n  GeoAction[\"ListGeofences\"] = \"6\";\n  GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nvar InAppMessagingAction;\n(function (InAppMessagingAction) {\n  InAppMessagingAction[\"SyncMessages\"] = \"1\";\n  InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n  InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nvar InteractionsAction;\n(function (InteractionsAction) {\n  InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nvar PredictionsAction;\n(function (PredictionsAction) {\n  PredictionsAction[\"Convert\"] = \"1\";\n  PredictionsAction[\"Identify\"] = \"2\";\n  PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nvar PubSubAction;\n(function (PubSubAction) {\n  PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nvar PushNotificationAction;\n(function (PushNotificationAction) {\n  PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n  PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nvar StorageAction;\n(function (StorageAction) {\n  StorageAction[\"UploadData\"] = \"1\";\n  StorageAction[\"DownloadData\"] = \"2\";\n  StorageAction[\"List\"] = \"3\";\n  StorageAction[\"Copy\"] = \"4\";\n  StorageAction[\"Remove\"] = \"5\";\n  StorageAction[\"GetProperties\"] = \"6\";\n  StorageAction[\"GetUrl\"] = \"7\";\n  StorageAction[\"GetDataAccess\"] = \"8\";\n  StorageAction[\"ListCallerAccessGrants\"] = \"9\";\n})(StorageAction || (StorageAction = {}));\nexport { AiAction, AnalyticsAction, ApiAction, AuthAction, Category, DataStoreAction, Framework, GeoAction, InAppMessagingAction, InteractionsAction, PredictionsAction, PubSubAction, PushNotificationAction, StorageAction };\n", "// generated by genversion\nconst version = '6.14.4';\nexport { version };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst globalExists = () => {\n  return typeof global !== 'undefined';\n};\nconst globalThisExists = () => {\n  return typeof globalThis !== 'undefined';\n};\nconst windowExists = () => {\n  return typeof window !== 'undefined';\n};\nconst documentExists = () => {\n  return typeof document !== 'undefined';\n};\nconst processExists = () => {\n  return typeof process !== 'undefined';\n};\nconst keyPrefixMatch = (object, prefix) => {\n  return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\nexport { documentExists, globalExists, globalThisExists, keyPrefixMatch, processExists, windowExists };\n", "import { documentExists, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react 18.2 - built using Vite\nfunction reactWebDetect() {\n  const elementKeyPrefixedWithReact = key => {\n    return key.startsWith('_react') || key.startsWith('__react');\n  };\n  const elementIsReactEnabled = element => {\n    return Object.keys(element).find(elementKeyPrefixedWithReact);\n  };\n  const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n  return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nfunction reactSSRDetect() {\n  return processExists() && typeof process.env !== 'undefined' && !!Object.keys(process.env).find(key => key.includes('react'));\n}\n// use the some\n\nexport { reactSSRDetect, reactWebDetect };\n", "import { windowExists, keyPrefixMatch, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with vue 3.3.2\nfunction vueWebDetect() {\n  return windowExists() && keyPrefixMatch(window, '__VUE');\n}\nfunction vueSSRDetect() {\n  return globalExists() && keyPrefixMatch(global, '__VUE');\n}\nexport { vueSSRDetect, vueWebDetect };\n", "import { windowExists, keyPrefixMatch, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with svelte 3.59\nfunction svelteWebDetect() {\n  return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nfunction svelteSSRDetect() {\n  return processExists() && typeof process.env !== 'undefined' && !!Object.keys(process.env).find(key => key.includes('svelte'));\n}\nexport { svelteSSRDetect, svelteWebDetect };\n", "import { windowExists, globalExists, keyPrefixMatch } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with next 13.4 / react 18.2\nfunction nextWebDetect() {\n  return windowExists() && window.next && typeof window.next === 'object';\n}\nfunction nextSSRDetect() {\n  return globalExists() && (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT'));\n}\nexport { nextSSRDetect, nextWebDetect };\n", "import { windowExists, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with nuxt 2.15 / vue 2.7\nfunction nuxtWebDetect() {\n  return windowExists() && (window.__NUXT__ !== undefined || window.$nuxt !== undefined);\n}\nfunction nuxtSSRDetect() {\n  return globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined';\n}\nexport { nuxtSSRDetect, nuxtWebDetect };\n", "import { documentExists, processExists, windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with @angular/core 16.0.0\nfunction angularWebDetect() {\n  const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n  const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n  return angularVersionSetInDocument || angularContentSetInWindow;\n}\nfunction angularSSRDetect() {\n  return processExists() && typeof process.env === 'object' && process.env.npm_lifecycle_script?.startsWith('ng ') || false;\n}\nexport { angularSSRDetect, angularWebDetect };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react-native 0.17.7\nfunction reactNativeDetect() {\n  return typeof navigator !== 'undefined' && typeof navigator.product !== 'undefined' && navigator.product === 'ReactNative';\n}\nexport { reactNativeDetect };\n", "import { globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with expo 48 / react-native 0.71.3\nfunction expoDetect() {\n  return globalExists() && typeof global.expo !== 'undefined';\n}\nexport { expoDetect };\n", "import { windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction webDetect() {\n  return windowExists();\n}\nexport { webDetect };\n", "import { Framework } from '../types.mjs';\nimport { reactWebDetect, reactSSRDetect } from './React.mjs';\nimport { vueWebDetect, vueSSRDetect } from './Vue.mjs';\nimport { svelteWebDetect, svelteSSRDetect } from './Svelte.mjs';\nimport { nextWebDetect, nextSSRDetect } from './Next.mjs';\nimport { nuxtWebDetect, nuxtSSRDetect } from './Nuxt.mjs';\nimport { angularWebDetect, angularSSRDetect } from './Angular.mjs';\nimport { reactNativeDetect } from './ReactNative.mjs';\nimport { expoDetect } from './Expo.mjs';\nimport { webDetect } from './Web.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n// First, detect mobile\n{\n  platform: Framework.Expo,\n  detectionMethod: expoDetect\n}, {\n  platform: Framework.ReactNative,\n  detectionMethod: reactNativeDetect\n},\n// Next, detect web frameworks\n{\n  platform: Framework.NextJs,\n  detectionMethod: nextWebDetect\n}, {\n  platform: Framework.Nuxt,\n  detectionMethod: nuxtWebDetect\n}, {\n  platform: Framework.Angular,\n  detectionMethod: angularWebDetect\n}, {\n  platform: Framework.React,\n  detectionMethod: reactWebDetect\n}, {\n  platform: Framework.VueJs,\n  detectionMethod: vueWebDetect\n}, {\n  platform: Framework.Svelte,\n  detectionMethod: svelteWebDetect\n}, {\n  platform: Framework.WebUnknown,\n  detectionMethod: webDetect\n},\n// Last, detect ssr frameworks\n{\n  platform: Framework.NextJsSSR,\n  detectionMethod: nextSSRDetect\n}, {\n  platform: Framework.NuxtSSR,\n  detectionMethod: nuxtSSRDetect\n}, {\n  platform: Framework.ReactSSR,\n  detectionMethod: reactSSRDetect\n}, {\n  platform: Framework.VueJsSSR,\n  detectionMethod: vueSSRDetect\n}, {\n  platform: Framework.AngularSSR,\n  detectionMethod: angularSSRDetect\n}, {\n  platform: Framework.SvelteSSR,\n  detectionMethod: svelteSSRDetect\n}];\nfunction detect() {\n  return detectionMap.find(detectionEntry => detectionEntry.detectionMethod())?.platform || Framework.ServerSideUnknown;\n}\nexport { detect };\n", "import { Framework } from './types.mjs';\nimport { detect } from './detection/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nconst frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nconst detectFramework = () => {\n  if (!frameworkCache) {\n    frameworkCache = detect();\n    if (resetTriggered) {\n      // The final run of detectFramework:\n      // Starting from this point, the `frameworkCache` becomes \"final\".\n      // So we don't need to notify the observers again so the observer\n      // can be removed after the final notice.\n      while (frameworkChangeObservers.length) {\n        frameworkChangeObservers.pop()?.();\n      }\n    } else {\n      // The first run of detectFramework:\n      // Every time we update the cache, call each observer function\n      frameworkChangeObservers.forEach(fcn => {\n        fcn();\n      });\n    }\n    // Retry once for either Unknown type after a delay (explained below)\n    resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n    resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n  }\n  return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nconst observeFrameworkChanges = fcn => {\n  // When the `frameworkCache` won't be updated again, we ignore all incoming\n  // observers.\n  if (resetTriggered) {\n    return;\n  }\n  frameworkChangeObservers.push(fcn);\n};\nfunction clearCache() {\n  frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n  if (frameworkCache === framework && !resetTriggered) {\n    setTimeout(() => {\n      clearCache();\n      resetTriggered = true;\n      setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n    }, delay);\n  }\n}\nexport { clearCache, detectFramework, frameworkChangeObservers, observeFrameworkChanges };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = input => {\n  // Save custom user-agent state & increment reference counter\n  // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n  customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n    ...acc,\n    [api]: {\n      refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n      additionalDetails: input.additionalDetails\n    }\n  }), customUserAgentState[input.category] ?? {});\n  // Callback that cleans up state for APIs recorded by this call\n  let cleanUpCallbackCalled = false;\n  const cleanUpCallback = () => {\n    // Only allow the cleanup callback to be called once\n    if (cleanUpCallbackCalled) {\n      return;\n    }\n    cleanUpCallbackCalled = true;\n    input.apis.forEach(api => {\n      const apiRefCount = customUserAgentState[input.category][api].refCount;\n      if (apiRefCount > 1) {\n        customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n      } else {\n        delete customUserAgentState[input.category][api];\n        // Clean up category if no more APIs set\n        if (!Object.keys(customUserAgentState[input.category]).length) {\n          delete customUserAgentState[input.category];\n        }\n      }\n    });\n  };\n  return cleanUpCallback;\n};\nconst getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\nexport { getCustomUserAgent, setCustomUserAgent };\n", "import { Framework } from './types.mjs';\nimport { version } from './version.mjs';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework.mjs';\nimport { getCustomUserAgent } from './customUserAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst BASE_USER_AGENT = `aws-amplify`;\n/** Sanitize Amplify version string be removing special character + and character post the special character  */\nconst sanitizeAmplifyVersion = amplifyVersion => amplifyVersion.replace(/\\+.*/, '');\nclass PlatformBuilder {\n  constructor() {\n    this.userAgent = `${BASE_USER_AGENT}/${sanitizeAmplifyVersion(version)}`;\n  }\n  get framework() {\n    return detectFramework();\n  }\n  get isReactNative() {\n    return this.framework === Framework.ReactNative || this.framework === Framework.Expo;\n  }\n  observeFrameworkChanges(fcn) {\n    observeFrameworkChanges(fcn);\n  }\n}\nconst Platform = new PlatformBuilder();\nconst getAmplifyUserAgentObject = ({\n  category,\n  action\n} = {}) => {\n  const userAgent = [[BASE_USER_AGENT, sanitizeAmplifyVersion(version)]];\n  if (category) {\n    userAgent.push([category, action]);\n  }\n  userAgent.push(['framework', detectFramework()]);\n  if (category && action) {\n    const customState = getCustomUserAgent(category, action);\n    if (customState) {\n      customState.forEach(state => {\n        userAgent.push(state);\n      });\n    }\n  }\n  return userAgent;\n};\nconst getAmplifyUserAgent = customUserAgentDetails => {\n  const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n  const userAgentString = userAgent.map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey).join(' ');\n  return userAgentString;\n};\nexport { Platform, getAmplifyUserAgent, getAmplifyUserAgentObject, sanitizeAmplifyVersion };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * All possible states a `BackgroundProcessManager` instance can be in.\n */\nvar BackgroundProcessManagerState;\n(function (BackgroundProcessManagerState) {\n  /**\n   * Accepting new jobs.\n   */\n  BackgroundProcessManagerState[\"Open\"] = \"Open\";\n  /**\n   * Not accepting new jobs. Waiting for submitted jobs to complete.\n   */\n  BackgroundProcessManagerState[\"Closing\"] = \"Closing\";\n  /**\n   * Not accepting new jobs. All submitted jobs are complete.\n   */\n  BackgroundProcessManagerState[\"Closed\"] = \"Closed\";\n})(BackgroundProcessManagerState || (BackgroundProcessManagerState = {}));\nexport { BackgroundProcessManagerState };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isWebWorker = () => {\n  if (typeof self === 'undefined') {\n    return false;\n  }\n  const selfContext = self;\n  return typeof selfContext.WorkerGlobalScope !== 'undefined' && self instanceof selfContext.WorkerGlobalScope;\n};\nexport { isWebWorker };\n", "import { from, Observable } from 'rxjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\nimport '../utils/getClientInfo/getClientInfo.mjs';\nimport { isWebWorker } from '../utils/isWebWorker.mjs';\nimport '../utils/retry/retry.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass Reachability {\n  networkMonitor(_) {\n    const globalObj = isWebWorker() ? self : typeof window !== 'undefined' && window;\n    if (!globalObj) {\n      return from([{\n        online: true\n      }]);\n    }\n    return new Observable(observer => {\n      observer.next({\n        online: globalObj.navigator.onLine\n      });\n      const notifyOnline = () => {\n        observer.next({\n          online: true\n        });\n      };\n      const notifyOffline = () => {\n        observer.next({\n          online: false\n        });\n      };\n      globalObj.addEventListener('online', notifyOnline);\n      globalObj.addEventListener('offline', notifyOffline);\n      Reachability._observers.push(observer);\n      return () => {\n        globalObj.removeEventListener('online', notifyOnline);\n        globalObj.removeEventListener('offline', notifyOffline);\n        Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n      };\n    });\n  }\n  // expose observers to simulate offline mode for integration testing\n  static _observerOverride(status) {\n    for (const observer of this._observers) {\n      if (observer.closed) {\n        this._observers = this._observers.filter(_observer => _observer !== observer);\n        continue;\n      }\n      observer?.next && observer.next(status);\n    }\n  }\n}\nReachability._observers = [];\nexport { Reachability };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\nexport { isBrowser };\n", "import { isBrowser } from '../isBrowser.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst stateChangeListeners = new Set();\nclass SessionListener {\n  constructor() {\n    this.listenerActive = false;\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    // Setup state listeners\n    if (isBrowser()) {\n      document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n      this.listenerActive = true;\n    }\n  }\n  addStateChangeListener(listener, notifyOnAdd = false) {\n    // No-op if document listener is not active\n    if (!this.listenerActive) {\n      return;\n    }\n    stateChangeListeners.add(listener);\n    // Notify new handlers of the current status on add\n    if (notifyOnAdd) {\n      listener(this.getSessionState());\n    }\n  }\n  removeStateChangeListener(handler) {\n    // No-op if document listener is not active\n    if (!this.listenerActive) {\n      return;\n    }\n    stateChangeListeners.delete(handler);\n  }\n  handleVisibilityChange() {\n    this.notifyHandlers();\n  }\n  notifyHandlers() {\n    const sessionState = this.getSessionState();\n    stateChangeListeners.forEach(listener => {\n      listener(sessionState);\n    });\n  }\n  getSessionState() {\n    if (isBrowser() && document.visibilityState !== 'hidden') {\n      return 'started';\n    }\n    // If, for any reason, document is undefined the session will never start\n    return 'ended';\n  }\n}\nexport { SessionListener };\n", "import { SessionListener } from './SessionListener.mjs';\nexport { SESSION_START_EVENT, SESSION_STOP_EVENT } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst sessionListener = new SessionListener();\nexport { sessionListener };\n", "class AuthClass {\n  /**\n   * Configure Auth category\n   *\n   * @internal\n   *\n   * @param authResourcesConfig - Resources configurations required by Auth providers.\n   * @param authOptions - Client options used by library\n   *\n   * @returns void\n   */\n  configure(authResourcesConfig, authOptions) {\n    this.authConfig = authResourcesConfig;\n    this.authOptions = authOptions;\n  }\n  /**\n   * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n   * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n   * with `{ forceRefresh: true }` input.\n   *\n   * @param options - Options configuring the fetch behavior.\n   *\n   * @returns Promise of current auth session {@link AuthSession}.\n   */\n  async fetchAuthSession(options = {}) {\n    let credentialsAndIdentityId;\n    let userSub;\n    // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n    const tokens = await this.getTokens(options);\n    if (tokens) {\n      userSub = tokens.accessToken?.payload?.sub;\n      // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n      credentialsAndIdentityId = await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n        authConfig: this.authConfig,\n        tokens,\n        authenticated: true,\n        forceRefresh: options.forceRefresh\n      });\n    } else {\n      // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n      credentialsAndIdentityId = await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n        authConfig: this.authConfig,\n        authenticated: false,\n        forceRefresh: options.forceRefresh\n      });\n    }\n    return {\n      tokens,\n      credentials: credentialsAndIdentityId?.credentials,\n      identityId: credentialsAndIdentityId?.identityId,\n      userSub\n    };\n  }\n  async clearCredentials() {\n    await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n  }\n  async getTokens(options) {\n    return (await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined;\n  }\n}\nexport { AuthClass };\n", "import { Hub, AMPLIFY_SYMBOL } from '../Hub/index.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\nimport '../utils/getClientInfo/getClientInfo.mjs';\nimport '../utils/retry/retry.mjs';\nimport { deepFreeze } from '../utils/deepFreeze.mjs';\nimport '../parseAWSExports.mjs';\nimport { ADD_OAUTH_LISTENER } from './constants.mjs';\nimport 'uuid';\nimport { parseAmplifyConfig } from '../utils/parseAmplifyConfig.mjs';\nimport './Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../Platform/index.mjs';\nimport '../Platform/types.mjs';\nimport '../BackgroundProcessManager/types.mjs';\nimport '../Reachability/Reachability.mjs';\nimport '../utils/sessionListener/index.mjs';\nimport { AuthClass } from './Auth/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AmplifyClass {\n  constructor() {\n    this.oAuthListener = undefined;\n    this.resourcesConfig = {};\n    this.libraryOptions = {};\n    this.Auth = new AuthClass();\n  }\n  /**\n   * Configures Amplify for use with your back-end resources.\n   *\n   * @remarks\n   * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n   * provided values will be used after configuration.\n   *\n   * @remarks\n   * `configure` can be used to specify additional library options where available for supported categories.\n   *\n   * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n   * @param libraryOptions - Additional options for customizing the behavior of the library.\n   */\n  configure(resourcesConfig, libraryOptions) {\n    const resolvedResourceConfig = parseAmplifyConfig(resourcesConfig);\n    this.resourcesConfig = resolvedResourceConfig;\n    if (libraryOptions) {\n      this.libraryOptions = libraryOptions;\n    }\n    // Make resource config immutable\n    this.resourcesConfig = deepFreeze(this.resourcesConfig);\n    this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n    Hub.dispatch('core', {\n      event: 'configure',\n      data: this.resourcesConfig\n    }, 'Configure', AMPLIFY_SYMBOL);\n    this.notifyOAuthListener();\n  }\n  /**\n   * Provides access to the current back-end resource configuration for the Library.\n   *\n   * @returns Returns the immutable back-end resource configuration.\n   */\n  getConfig() {\n    return this.resourcesConfig;\n  }\n  /** @internal */\n  [ADD_OAUTH_LISTENER](listener) {\n    if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n      // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n      listener(this.resourcesConfig.Auth?.Cognito);\n    } else {\n      // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n      this.oAuthListener = listener;\n    }\n  }\n  notifyOAuthListener() {\n    if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth || !this.oAuthListener) {\n      return;\n    }\n    this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n    // the listener should only be notified once with a valid oauth config\n    this.oAuthListener = undefined;\n  }\n}\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` orchestrates cross-category communication within the library.\n */\nconst Amplify = new AmplifyClass();\nexport { Amplify, AmplifyClass };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchAuthSession = (amplify, options) => {\n  return amplify.Auth.fetchAuthSession(options);\n};\nexport { fetchAuthSession };\n", "import { Amplify } from '../Amplify.mjs';\nimport { fetchAuthSession as fetchAuthSession$1 } from './internal/fetchAuthSession.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Fetch the auth session including the tokens and credentials if they are available. By default it\n * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n * with `{ forceRefresh: true }` input.\n *\n * @param options - Options configuring the fetch behavior.\n * @throws {@link AuthError} - Throws error when session information cannot be refreshed.\n * @returns Promise<AuthSession>\n */\nconst fetchAuthSession = options => {\n  return fetchAuthSession$1(Amplify, options);\n};\nexport { fetchAuthSession };\n", "import { Amplify } from '../Amplify.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction clearCredentials() {\n  return Amplify.Auth.clearCredentials();\n}\nexport { clearCredentials };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst parseMetadata = response => {\n  const {\n    headers,\n    statusCode\n  } = response;\n  return {\n    ...(isMetadataBearer(response) ? response.$metadata : {}),\n    httpStatusCode: statusCode,\n    requestId: headers['x-amzn-requestid'] ?? headers['x-amzn-request-id'] ?? headers['x-amz-request-id'],\n    extendedRequestId: headers['x-amz-id-2'],\n    cfId: headers['x-amz-cf-id']\n  };\n};\nconst isMetadataBearer = response => typeof response?.$metadata === 'object';\nexport { parseMetadata };\n", "import { parseMetadata } from './responseInfo.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nconst parseJsonError = async response => {\n  if (!response || response.statusCode < 300) {\n    return;\n  }\n  const body = await parseJsonBody(response);\n  const sanitizeErrorCode = rawValue => {\n    const [cleanValue] = rawValue.toString().split(/[,:]+/);\n    if (cleanValue.includes('#')) {\n      return cleanValue.split('#')[1];\n    }\n    return cleanValue;\n  };\n  const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ?? body.code ?? body.__type ?? 'UnknownError');\n  const message = body.message ?? body.Message ?? 'Unknown error';\n  const error = new Error(message);\n  return Object.assign(error, {\n    name: code,\n    $metadata: parseMetadata(response)\n  });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nconst parseJsonBody = async response => {\n  if (!response.body) {\n    throw new Error('Missing response payload');\n  }\n  const output = await response.body.json();\n  return Object.assign(output, {\n    $metadata: parseMetadata(response)\n  });\n};\nexport { parseJsonBody, parseJsonError };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a service API handler that accepts input as defined shape and responds conforming to defined output shape.\n * A service API handler is composed with:\n * * A transfer handler\n * * A serializer function\n * * A deserializer function\n * * A default config object\n *\n * The returned service API handler, when called, will trigger the following workflow:\n * 1. When calling the service API handler function, the default config object is merged into the input config\n * object to assign the default values of some omitted configs, resulting to a resolved config object.\n * 2. The `endpointResolver` function from the default config object will be invoked with the resolved config object and\n * API input object resulting to an endpoint instance.\n * 3. The serializer function is invoked with API input object and the endpoint instance resulting to an HTTP request\n * instance.\n * 4. The HTTP request instance and the resolved config object is passed to the transfer handler function.\n * 5. The transfer handler function resolves to an HTTP response instance(can be either successful or failed status code).\n * 6. The deserializer function is invoked with the HTTP response instance resulting to the API output object, and\n * return to the caller.\n *\n *\n * @param transferHandler Async function for dispatching HTTP requests and returning HTTP response.\n * @param serializer  Async function for converting object in defined input shape into HTTP request targeting a given\n * \tendpoint.\n * @param deserializer Async function for converting HTTP response into output object in defined output shape, or error\n * \tshape.\n * @param defaultConfig  object containing default options to be consumed by transfer handler, serializer and\n *  deserializer.\n * @returns a async service API handler function that accepts a config object and input object in defined shape, returns\n * \tan output object in defined shape. It may also throw error instance in defined shape in deserializer. The config\n *  object type is composed with options type of transferHandler, endpointResolver function as well as endpointResolver\n *  function's input options type, region string. The config object property will be marked as optional if it's also\n * \tdefined in defaultConfig.\n *\n * @internal\n */\nconst composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n  return async (config, input) => {\n    const resolvedConfig = {\n      ...defaultConfig,\n      ...config\n    };\n    // We need to allow different endpoints based on both given config(other than region) and input.\n    // However for most of non-S3 services, region is the only input for endpoint resolver.\n    const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n    // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n    // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n    // They will be populated automatically by browser, or node-fetch polyfill.\n    const request = await serializer(input, endpoint);\n    const response = await transferHandler(request, {\n      ...resolvedConfig\n    });\n    return deserializer(response);\n  };\n};\nexport { composeServiceApi };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nconst defaultPartition = {\n  id: 'aws',\n  outputs: {\n    dnsSuffix: 'amazonaws.com'\n  },\n  regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n  regions: ['aws-global']\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nconst partitionsInfo = {\n  partitions: [defaultPartition, {\n    id: 'aws-cn',\n    outputs: {\n      dnsSuffix: 'amazonaws.com.cn'\n    },\n    regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-cn-global']\n  }]\n};\nexport { defaultPartition, partitionsInfo };\n", "import { partitionsInfo, defaultPartition } from './partitions.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nconst getDnsSuffix = region => {\n  const {\n    partitions\n  } = partitionsInfo;\n  for (const {\n    regions,\n    outputs,\n    regionRegex\n  } of partitions) {\n    const regex = new RegExp(regionRegex);\n    if (regions.includes(region) || regex.test(region)) {\n      return outputs.dnsSuffix;\n    }\n  }\n  return defaultPartition.outputs.dnsSuffix;\n};\nexport { getDnsSuffix };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_RETRY_ATTEMPTS = 3;\nconst AMZ_SDK_INVOCATION_ID_HEADER = 'amz-sdk-invocation-id';\nconst AMZ_SDK_REQUEST_HEADER = 'amz-sdk-request';\nconst DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\nexport { AMZ_SDK_INVOCATION_ID_HEADER, AMZ_SDK_REQUEST_HEADER, DEFAULT_MAX_DELAY_MS, DEFAULT_RETRY_ATTEMPTS };\n", "import { DEFAULT_RETRY_ATTEMPTS } from './constants.mjs';\n\n/**\n * Middleware that executes the retry logic.\n */\nconst retryMiddlewareFactory = ({\n  maxAttempts = DEFAULT_RETRY_ATTEMPTS,\n  retryDecider,\n  computeDelay,\n  abortSignal\n}) => {\n  if (maxAttempts < 1) {\n    throw new Error('maxAttempts must be greater than 0');\n  }\n  return (next, context) => async function retryMiddleware(request) {\n    let error;\n    let attemptsCount = context.attemptsCount ?? 0;\n    let response;\n    // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n    const handleTerminalErrorOrResponse = () => {\n      if (response) {\n        addOrIncrementMetadataAttempts(response, attemptsCount);\n        return response;\n      } else {\n        addOrIncrementMetadataAttempts(error, attemptsCount);\n        throw error;\n      }\n    };\n    while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n      try {\n        response = await next(request);\n        error = undefined;\n      } catch (e) {\n        error = e;\n        response = undefined;\n      }\n      // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n      attemptsCount = (context.attemptsCount ?? 0) > attemptsCount ? context.attemptsCount ?? 0 : attemptsCount + 1;\n      context.attemptsCount = attemptsCount;\n      const {\n        isCredentialsExpiredError,\n        retryable\n      } = await retryDecider(response, error, context);\n      if (retryable) {\n        // Setting isCredentialsInvalid flag to notify signing middleware to forceRefresh credentials provider.\n        context.isCredentialsExpired = !!isCredentialsExpiredError;\n        if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n          // prevent sleep for last attempt or cancelled request;\n          const delay = computeDelay(attemptsCount);\n          await cancellableSleep(delay, abortSignal);\n        }\n        continue;\n      } else {\n        return handleTerminalErrorOrResponse();\n      }\n    }\n    if (abortSignal?.aborted) {\n      throw new Error('Request aborted.');\n    } else {\n      return handleTerminalErrorOrResponse();\n    }\n  };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n  if (abortSignal?.aborted) {\n    return Promise.resolve();\n  }\n  let timeoutId;\n  let sleepPromiseResolveFn;\n  const sleepPromise = new Promise(resolve => {\n    sleepPromiseResolveFn = resolve;\n    timeoutId = setTimeout(resolve, timeoutMs);\n  });\n  abortSignal?.addEventListener('abort', function cancelSleep(_) {\n    clearTimeout(timeoutId);\n    abortSignal?.removeEventListener('abort', cancelSleep);\n    sleepPromiseResolveFn();\n  });\n  return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n  if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n    return;\n  }\n  nextHandlerOutput.$metadata = {\n    ...(nextHandlerOutput.$metadata ?? {}),\n    attempts\n  };\n};\nexport { retryMiddlewareFactory };\n", "import { v4 } from 'uuid';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst amplifyUuid = v4;\nexport { amplifyUuid };\n", "import '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport '../../../parseAWSExports.mjs';\nimport { amplifyUuid } from '../../../utils/amplifyUuid/index.mjs';\nimport '../../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../../Platform/index.mjs';\nimport '../../../Platform/types.mjs';\nimport '../../../BackgroundProcessManager/types.mjs';\nimport '../../../Reachability/Reachability.mjs';\nimport '../../../Hub/index.mjs';\nimport '../../../utils/sessionListener/index.mjs';\nimport { AMZ_SDK_INVOCATION_ID_HEADER } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects a UUID string to `amz-sdk-invocation-id` header.\n * if the header is not set already. This header is helpful to provide\n * observability to group the requests caused by automatic retry.\n *\n * This middleware is standalone because of extra UUID dependency, we will\n * NOT use this middleware for API categories.\n *\n * Ref: https://sdk.amazonaws.com/kotlin/api/smithy-kotlin/api/1.0.9/http-client/aws.smithy.kotlin.runtime.http.operation/-http-operation-context/-sdk-invocation-id.html\n */\nconst amzSdkInvocationIdHeaderMiddlewareFactory = () => next => {\n  return async function amzSdkInvocationIdHeaderMiddleware(request) {\n    if (!request.headers[AMZ_SDK_INVOCATION_ID_HEADER]) {\n      request.headers[AMZ_SDK_INVOCATION_ID_HEADER] = amplifyUuid();\n    }\n    return next(request);\n  };\n};\nexport { amzSdkInvocationIdHeaderMiddlewareFactory };\n", "import { DEFAULT_RETRY_ATTEMPTS, AMZ_SDK_REQUEST_HEADER } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects `amz-sdk-request` header to indicate the retry state at the time an HTTP request is made.\n * This middleware should co-exist with retryMiddleware as it relies on the retryAttempts value in middleware context\n * set by the retry middleware.\n *\n * Example header: `amz-sdk-request: attempt=1; max=3`.\n *\n * This middleware is standalone because of extra headers may conflict with custom endpoint settings(e.g. CORS), we will\n * NOT use this middleware for API categories.\n */\nconst amzSdkRequestHeaderMiddlewareFactory = ({\n  maxAttempts = DEFAULT_RETRY_ATTEMPTS\n}) => (next, context) => {\n  return async function amzSdkRequestHeaderMiddleware(request) {\n    const attemptsCount = context.attemptsCount ?? 0;\n    request.headers[AMZ_SDK_REQUEST_HEADER] = `attempt=${attemptsCount + 1}; max=${maxAttempts}`;\n    return next(request);\n  };\n};\nexport { amzSdkRequestHeaderMiddlewareFactory };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nconst userAgentMiddlewareFactory = ({\n  userAgentHeader = 'x-amz-user-agent',\n  userAgentValue = ''\n}) => next => {\n  return async function userAgentMiddleware(request) {\n    if (userAgentValue.trim().length === 0) {\n      const result = await next(request);\n      return result;\n    } else {\n      const headerName = userAgentHeader.toLowerCase();\n      request.headers[headerName] = request.headers[headerName] ? `${request.headers[headerName]} ${userAgentValue}` : userAgentValue;\n      const response = await next(request);\n      return response;\n    }\n  };\n};\nexport { userAgentMiddlewareFactory };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nconst composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n  const context = {};\n  let composedHandler = composeHandlerRequest => coreHandler(composeHandlerRequest, options);\n  for (let i = middleware.length - 1; i >= 0; i--) {\n    const m = middleware[i];\n    const resolvedMiddleware = m(options);\n    composedHandler = resolvedMiddleware(composedHandler, context);\n  }\n  return composedHandler(request);\n};\nexport { composeTransferHandler };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nconst withMemoization = payloadAccessor => {\n  let cached;\n  return () => {\n    if (!cached) {\n      // Explicitly not awaiting. Intermediate await would add overhead and\n      // introduce a possible race in the event that this wrapper is called\n      // again before the first `payloadAccessor` call resolves.\n      cached = payloadAccessor();\n    }\n    return cached;\n  };\n};\nexport { withMemoization };\n", "import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport { AmplifyErrorCode } from '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\nimport { withMemoization } from '../utils/memoization.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst shouldSendBody = method => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nconst fetchTransferHandler = async ({\n  url,\n  method,\n  headers,\n  body\n}, {\n  abortSignal,\n  cache,\n  withCrossDomainCredentials\n}) => {\n  let resp;\n  try {\n    resp = await fetch(url, {\n      method,\n      headers,\n      body: shouldSendBody(method) ? body : undefined,\n      signal: abortSignal,\n      cache,\n      credentials: withCrossDomainCredentials ? 'include' : 'same-origin'\n    });\n  } catch (e) {\n    if (e instanceof TypeError) {\n      throw new AmplifyError({\n        name: AmplifyErrorCode.NetworkError,\n        message: 'A network error has occurred.',\n        underlyingError: e\n      });\n    }\n    throw e;\n  }\n  const responseHeaders = {};\n  resp.headers?.forEach((value, key) => {\n    responseHeaders[key.toLowerCase()] = value;\n  });\n  const httpResponse = {\n    statusCode: resp.status,\n    headers: responseHeaders,\n    body: null\n  };\n  // resp.body is a ReadableStream according to Fetch API spec, but React Native\n  // does not implement it.\n  const bodyWithMixin = Object.assign(resp.body ?? {}, {\n    text: withMemoization(() => resp.text()),\n    blob: withMemoization(() => resp.blob()),\n    json: withMemoization(() => resp.json())\n  });\n  return {\n    ...httpResponse,\n    body: bodyWithMixin\n  };\n};\nexport { fetchTransferHandler };\n", "import { retryMiddlewareFactory } from '../../middleware/retry/retryMiddleware.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport { amzSdkInvocationIdHeaderMiddlewareFactory } from '../../middleware/retry/amzSdkInvocationIdHeaderMiddleware.mjs';\nimport { amzSdkRequestHeaderMiddlewareFactory } from '../../middleware/retry/amzSdkRequestHeaderMiddleware.mjs';\nimport { userAgentMiddlewareFactory } from '../../middleware/userAgent/middleware.mjs';\nimport { composeTransferHandler } from '../../internal/composeTransferHandler.mjs';\nimport { fetchTransferHandler } from '../fetch.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [userAgentMiddlewareFactory, amzSdkInvocationIdHeaderMiddlewareFactory, retryMiddlewareFactory, amzSdkRequestHeaderMiddlewareFactory]);\nexport { unauthenticatedHandler };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_DELAY_MS = 5 * 60 * 1000;\nexport { MAX_DELAY_MS };\n", "import { MAX_DELAY_MS } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @private\n * Internal use of Amplify only\n */\nfunction jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n  const BASE_TIME_MS = 100;\n  const JITTER_FACTOR = 100;\n  return attempt => {\n    const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n    return delay > maxDelayMs ? false : delay;\n  };\n}\nexport { jitteredBackoff };\n", "import '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport { jitteredBackoff as jitteredBackoff$1 } from '../../../utils/retry/jitteredBackoff.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport { DEFAULT_MAX_DELAY_MS } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nconst jitteredBackoff = attempt => {\n  const delayFunction = jitteredBackoff$1(DEFAULT_MAX_DELAY_MS);\n  const delay = delayFunction(attempt);\n  // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n  // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n  return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\nexport { jitteredBackoff };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = ['AuthFailure', 'InvalidSignatureException', 'RequestExpired', 'RequestInTheFuture', 'RequestTimeTooSkewed', 'SignatureDoesNotMatch', 'BadRequestException' // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nconst isClockSkewError = errorCode => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\nexport { isClockSkewError };\n", "import { AmplifyErrorCode } from '../../../types/errors.mjs';\nimport { isClockSkewError } from './isClockSkewError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nconst getRetryDecider = errorParser => async (response, error) => {\n  const parsedError = error ?? (await errorParser(response)) ?? undefined;\n  const errorCode = parsedError?.code || parsedError?.name;\n  const statusCode = response?.statusCode;\n  const isRetryable = isConnectionError(error) || isThrottlingError(statusCode, errorCode) || isClockSkewError(errorCode) || isServerSideError(statusCode, errorCode);\n  return {\n    retryable: isRetryable\n  };\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = ['BandwidthLimitExceeded', 'EC2ThrottledException', 'LimitExceededException', 'PriorRequestNotComplete', 'ProvisionedThroughputExceededException', 'RequestLimitExceeded', 'RequestThrottled', 'RequestThrottledException', 'SlowDown', 'ThrottledException', 'Throttling', 'ThrottlingException', 'TooManyRequestsException'];\nconst TIMEOUT_ERROR_CODES = ['TimeoutError', 'RequestTimeout', 'RequestTimeoutException'];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 || !!errorCode && THROTTLING_ERROR_CODES.includes(errorCode);\nconst isConnectionError = error => [AmplifyErrorCode.NetworkError,\n// TODO(vNext): unify the error code `ERR_NETWORK` used by the Storage XHR handler\n'ERR_NETWORK'].includes(error?.name);\nconst isServerSideError = (statusCode, errorCode) => !!statusCode && [500, 502, 503, 504].includes(statusCode) || !!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode);\nexport { getRetryDecider };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n", "import { getDnsSuffix } from '../../clients/endpoints/getDnsSuffix.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\nimport { unauthenticatedHandler } from '../../clients/handlers/aws/unauthenticated.mjs';\nimport { jitteredBackoff } from '../../clients/middleware/retry/jitteredBackoff.mjs';\nimport { getRetryDecider } from '../../clients/middleware/retry/defaultRetryDecider.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '../../parseAWSExports.mjs';\nimport 'uuid';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\nimport '../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { getAmplifyUserAgent } from '../../Platform/index.mjs';\nimport '../../Platform/types.mjs';\nimport '../../BackgroundProcessManager/types.mjs';\nimport '../../Reachability/Reachability.mjs';\nimport '../../Hub/index.mjs';\nimport '../../utils/sessionListener/index.mjs';\nimport { composeTransferHandler } from '../../clients/internal/composeTransferHandler.mjs';\nimport { parseJsonError } from '../../clients/serde/json.mjs';\nimport { observeFrameworkChanges } from '../../Platform/detectFramework.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-identity';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({\n  region\n}) => ({\n  url: new AmplifyUrl(`https://cognito-identity.${region}.${getDnsSuffix(region)}`)\n});\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => next => async function disableCacheMiddleware(request) {\n  request.headers['cache-control'] = 'no-store';\n  return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n/**\n * @internal\n */\nconst defaultConfig = {\n  service: SERVICE_NAME,\n  endpointResolver,\n  retryDecider: getRetryDecider(parseJsonError),\n  computeDelay: jitteredBackoff,\n  userAgentValue: getAmplifyUserAgent(),\n  cache: 'no-store'\n};\nobserveFrameworkChanges(() => {\n  defaultConfig.userAgentValue = getAmplifyUserAgent();\n});\n/**\n * @internal\n */\nconst getSharedHeaders = operation => ({\n  'content-type': 'application/x-amz-json-1.1',\n  'x-amz-target': `AWSCognitoIdentityService.${operation}`\n});\n/**\n * @internal\n */\nconst buildHttpRpcRequest = ({\n  url\n}, headers, body) => ({\n  headers,\n  url,\n  body,\n  method: 'POST'\n});\nexport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders };\n", "import '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '../../parseAWSExports.mjs';\nimport 'uuid';\nimport '../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../Platform/index.mjs';\nimport '../../Platform/types.mjs';\nimport '../../BackgroundProcessManager/types.mjs';\nimport '../../Reachability/Reachability.mjs';\nimport '../../Hub/index.mjs';\nimport '../../utils/sessionListener/index.mjs';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { defaultConfig, cognitoIdentityTransferHandler, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getIdSerializer = (input, endpoint) => {\n  const headers = getSharedHeaders('GetId');\n  const body = JSON.stringify(input);\n  return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getIdDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseJsonError(response);\n    throw error;\n  } else {\n    const body = await parseJsonBody(response);\n    return {\n      IdentityId: body.IdentityId,\n      $metadata: parseMetadata(response)\n    };\n  }\n};\n/**\n * @internal\n */\nconst getId = composeServiceApi(cognitoIdentityTransferHandler, getIdSerializer, getIdDeserializer, defaultConfig);\nexport { getId };\n", "import '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '../../parseAWSExports.mjs';\nimport 'uuid';\nimport '../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../Platform/index.mjs';\nimport '../../Platform/types.mjs';\nimport '../../BackgroundProcessManager/types.mjs';\nimport '../../Reachability/Reachability.mjs';\nimport '../../Hub/index.mjs';\nimport '../../utils/sessionListener/index.mjs';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { defaultConfig, cognitoIdentityTransferHandler, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCredentialsForIdentitySerializer = (input, endpoint) => {\n  const headers = getSharedHeaders('GetCredentialsForIdentity');\n  const body = JSON.stringify(input);\n  return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getCredentialsForIdentityDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseJsonError(response);\n    throw error;\n  } else {\n    const body = await parseJsonBody(response);\n    return {\n      IdentityId: body.IdentityId,\n      Credentials: deserializeCredentials(body.Credentials),\n      $metadata: parseMetadata(response)\n    };\n  }\n};\nconst deserializeCredentials = ({\n  AccessKeyId,\n  SecretKey,\n  SessionToken,\n  Expiration\n} = {}) => {\n  return {\n    AccessKeyId,\n    SecretKey,\n    SessionToken,\n    Expiration: Expiration && new Date(Expiration * 1000)\n  };\n};\n/**\n * @internal\n */\nconst getCredentialsForIdentity = composeServiceApi(cognitoIdentityTransferHandler, getCredentialsForIdentitySerializer, getCredentialsForIdentityDeserializer, defaultConfig);\nexport { getCredentialsForIdentity };\n", "import { AmplifyErrorCode } from '../types/errors.mjs';\nimport { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass PlatformNotSupportedError extends AmplifyError {\n  constructor() {\n    super({\n      name: AmplifyErrorCode.PlatformNotSupported,\n      message: 'Function not supported on current platform'\n    });\n  }\n}\nexport { PlatformNotSupportedError };\n", "import { PlatformNotSupportedError } from '../errors/PlatformNotSupportedError.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass KeyValueStorage {\n  constructor(storage) {\n    this.storage = storage;\n  }\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  async setItem(key, value) {\n    if (!this.storage) throw new PlatformNotSupportedError();\n    this.storage.setItem(key, value);\n  }\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  async getItem(key) {\n    if (!this.storage) throw new PlatformNotSupportedError();\n    return this.storage.getItem(key);\n  }\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  async removeItem(key) {\n    if (!this.storage) throw new PlatformNotSupportedError();\n    this.storage.removeItem(key);\n  }\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  async clear() {\n    if (!this.storage) throw new PlatformNotSupportedError();\n    this.storage.clear();\n  }\n}\nexport { KeyValueStorage };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass InMemoryStorage {\n  constructor() {\n    this.storage = new Map();\n  }\n  get length() {\n    return this.storage.size;\n  }\n  key(index) {\n    if (index > this.length - 1) {\n      return null;\n    }\n    return Array.from(this.storage.keys())[index];\n  }\n  setItem(key, value) {\n    this.storage.set(key, value);\n  }\n  getItem(key) {\n    return this.storage.get(key) ?? null;\n  }\n  removeItem(key) {\n    this.storage.delete(key);\n  }\n  clear() {\n    this.storage.clear();\n  }\n}\nexport { InMemoryStorage };\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { InMemoryStorage } from './InMemoryStorage.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nconst logger = new ConsoleLogger('CoreStorageUtils');\nconst getLocalStorageWithFallback = () => {\n  try {\n    // Attempt to use localStorage directly\n    if (typeof window !== 'undefined' && window.localStorage) {\n      return window.localStorage;\n    }\n  } catch (e) {\n    // Handle any errors related to localStorage access\n    logger.info('localStorage not found. InMemoryStorage is used as a fallback.');\n  }\n  // Return in-memory storage as a fallback if localStorage is not accessible\n  return new InMemoryStorage();\n};\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nconst getSessionStorageWithFallback = () => {\n  try {\n    // Attempt to use sessionStorage directly\n    if (typeof window !== 'undefined' && window.sessionStorage) {\n      // Verify we can actually use it by testing access\n      window.sessionStorage.getItem('test');\n      return window.sessionStorage;\n    }\n    throw new Error('sessionStorage is not defined');\n  } catch (e) {\n    // Handle any errors related to sessionStorage access\n    logger.info('sessionStorage not found. InMemoryStorage is used as a fallback.');\n    return new InMemoryStorage();\n  }\n};\nexport { getLocalStorageWithFallback, getSessionStorageWithFallback };\n", "import { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { getLocalStorageWithFallback } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass DefaultStorage extends KeyValueStorage {\n  constructor() {\n    super(getLocalStorageWithFallback());\n  }\n}\nexport { DefaultStorage };\n", "import { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { getSessionStorageWithFallback } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass SessionStorage extends KeyValueStorage {\n  constructor() {\n    super(getSessionStorageWithFallback());\n  }\n}\nexport { SessionStorage };\n", "import { PlatformNotSupportedError } from '../errors/PlatformNotSupportedError.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass SyncKeyValueStorage {\n  constructor(storage) {\n    this._storage = storage;\n  }\n  get storage() {\n    if (!this._storage) throw new PlatformNotSupportedError();\n    return this._storage;\n  }\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  setItem(key, value) {\n    this.storage.setItem(key, value);\n  }\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  getItem(key) {\n    return this.storage.getItem(key);\n  }\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  removeItem(key) {\n    this.storage.removeItem(key);\n  }\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  clear() {\n    this.storage.clear();\n  }\n}\nexport { SyncKeyValueStorage };\n", "import { SyncKeyValueStorage } from './SyncKeyValueStorage.mjs';\nimport { getSessionStorageWithFallback } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass SyncSessionStorage extends SyncKeyValueStorage {\n  constructor() {\n    super(getSessionStorageWithFallback());\n  }\n}\nexport { SyncSessionStorage };\n", "/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init(converter, defaultAttributes) {\n  function set(name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    attributes = assign({}, defaultAttributes, attributes);\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n    name = encodeURIComponent(name).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue;\n      }\n      stringifiedAttributes += '; ' + attributeName;\n      if (attributes[attributeName] === true) {\n        continue;\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n    return document.cookie = name + '=' + converter.write(value, name) + stringifiedAttributes;\n  }\n  function get(name) {\n    if (typeof document === 'undefined' || arguments.length && !name) {\n      return;\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n        if (name === found) {\n          break;\n        }\n      } catch (e) {}\n    }\n    return name ? jar[name] : jar;\n  }\n  return Object.create({\n    set,\n    get,\n    remove: function (name, attributes) {\n      set(name, '', assign({}, attributes, {\n        expires: -1\n      }));\n    },\n    withAttributes: function (attributes) {\n      return init(this.converter, assign({}, this.attributes, attributes));\n    },\n    withConverter: function (converter) {\n      return init(assign({}, this.converter, converter), this.attributes);\n    }\n  }, {\n    attributes: {\n      value: Object.freeze(defaultAttributes)\n    },\n    converter: {\n      value: Object.freeze(converter)\n    }\n  });\n}\nvar api = init(defaultConverter, {\n  path: '/'\n});\n/* eslint-enable no-var */\n\nexport { api as default };", "import JsCookie from 'js-cookie';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass CookieStorage {\n  constructor(data = {}) {\n    const {\n      path,\n      domain,\n      expires,\n      sameSite,\n      secure\n    } = data;\n    this.domain = domain;\n    this.path = path || '/';\n    this.expires = Object.prototype.hasOwnProperty.call(data, 'expires') ? expires : 365;\n    this.secure = Object.prototype.hasOwnProperty.call(data, 'secure') ? secure : true;\n    if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n      if (!sameSite || !['strict', 'lax', 'none'].includes(sameSite)) {\n        throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n      }\n      if (sameSite === 'none' && !this.secure) {\n        throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n      }\n      this.sameSite = sameSite;\n    }\n  }\n  async setItem(key, value) {\n    JsCookie.set(key, value, this.getData());\n  }\n  async getItem(key) {\n    const item = JsCookie.get(key);\n    return item ?? null;\n  }\n  async removeItem(key) {\n    JsCookie.remove(key, this.getData());\n  }\n  async clear() {\n    const cookie = JsCookie.get();\n    const promises = Object.keys(cookie).map(key => this.removeItem(key));\n    await Promise.all(promises);\n  }\n  getData() {\n    return {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure,\n      ...(this.sameSite && {\n        sameSite: this.sameSite\n      })\n    };\n  }\n}\nexport { CookieStorage };\n", "import { DefaultStorage } from './DefaultStorage.mjs';\nimport { InMemoryStorage } from './InMemoryStorage.mjs';\nimport { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { SessionStorage } from './SessionStorage.mjs';\nimport { SyncSessionStorage } from './SyncSessionStorage.mjs';\nexport { CookieStorage } from './CookieStorage.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst defaultStorage = new DefaultStorage();\nconst sessionStorage = new SessionStorage();\nconst syncSessionStorage = new SyncSessionStorage();\nconst sharedInMemoryStorage = new KeyValueStorage(new InMemoryStorage());\nexport { defaultStorage, sessionStorage, sharedInMemoryStorage, syncSessionStorage };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default cache config\n */\nconst defaultConfig = {\n  keyPrefix: 'aws-amplify-cache',\n  capacityInBytes: 1048576,\n  itemMaxSize: 210000,\n  defaultTTL: 259200000,\n  defaultPriority: 5,\n  warningThreshold: 0.8\n};\nconst currentSizeKey = 'CurSize';\nexport { currentSizeKey, defaultConfig };\n", "import { currentSizeKey } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * return the byte size of the string\n * @param str\n */\nfunction getByteLength(str) {\n  let ret = 0;\n  ret = str.length;\n  for (let i = str.length; i >= 0; i -= 1) {\n    const charCode = str.charCodeAt(i);\n    if (charCode > 0x7f && charCode <= 0x7ff) {\n      ret += 1;\n    } else if (charCode > 0x7ff && charCode <= 0xffff) {\n      ret += 2;\n    }\n    // trail surrogate\n    if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n      i -= 1;\n    }\n  }\n  return ret;\n}\n/**\n * get current time\n */\nfunction getCurrentTime() {\n  const currentTime = new Date();\n  return currentTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nfunction isInteger(value) {\n  if (Number.isInteger) {\n    return Number.isInteger(value);\n  }\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nconst getCurrentSizeKey = keyPrefix => `${keyPrefix}${currentSizeKey}`;\nexport { getByteLength, getCurrentSizeKey, getCurrentTime, isInteger };\n", "import { createAssertionFunction } from '../../errors/createAssertionFunction.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar CacheErrorCode;\n(function (CacheErrorCode) {\n  CacheErrorCode[\"NoCacheItem\"] = \"NoCacheItem\";\n  CacheErrorCode[\"NullNextNode\"] = \"NullNextNode\";\n  CacheErrorCode[\"NullPreviousNode\"] = \"NullPreviousNode\";\n})(CacheErrorCode || (CacheErrorCode = {}));\nconst cacheErrorMap = {\n  [CacheErrorCode.NoCacheItem]: {\n    message: 'Item not found in the cache storage.'\n  },\n  [CacheErrorCode.NullNextNode]: {\n    message: 'Next node is null.'\n  },\n  [CacheErrorCode.NullPreviousNode]: {\n    message: 'Previous node is null.'\n  }\n};\nconst assert = createAssertionFunction(cacheErrorMap);\nexport { CacheErrorCode, assert };\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { defaultConfig, currentSizeKey } from './constants.mjs';\nimport { getCurrentSizeKey, getCurrentTime, getByteLength } from './utils/cacheHelpers.mjs';\nimport { assert, CacheErrorCode } from './utils/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nclass StorageCacheCommon {\n  /**\n   * Initialize the cache\n   *\n   * @param config - Custom configuration for this instance.\n   */\n  constructor({\n    config,\n    keyValueStorage\n  }) {\n    this.config = {\n      ...defaultConfig,\n      ...config\n    };\n    this.keyValueStorage = keyValueStorage;\n    this.sanitizeConfig();\n  }\n  getModuleName() {\n    return 'Cache';\n  }\n  /**\n   * Set custom configuration for the cache instance.\n   *\n   * @param config - customized configuration (without keyPrefix, which can't be changed)\n   *\n   * @return - the current configuration\n   */\n  configure(config) {\n    if (config) {\n      if (config.keyPrefix) {\n        logger.warn('keyPrefix can not be re-configured on an existing Cache instance.');\n      }\n      this.config = {\n        ...this.config,\n        ...config\n      };\n    }\n    this.sanitizeConfig();\n    return this.config;\n  }\n  /**\n   * return the current size of the cache\n   * @return {Promise}\n   */\n  async getCurrentCacheSize() {\n    let size = await this.getStorage().getItem(getCurrentSizeKey(this.config.keyPrefix));\n    if (!size) {\n      await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), '0');\n      size = '0';\n    }\n    return Number(size);\n  }\n  /**\n   * Set item into cache. You can put number, string, boolean or object.\n   * The cache will first check whether has the same key.\n   * If it has, it will delete the old item and then put the new item in\n   * The cache will pop out items if it is full\n   * You can specify the cache item options. The cache will abort and output a warning:\n   * If the key is invalid\n   * If the size of the item exceeds itemMaxSize.\n   * If the value is undefined\n   * If incorrect cache item configuration\n   * If error happened with browser storage\n   *\n   * @param {String} key - the key of the item\n   * @param {Object} value - the value of the item\n   * @param {Object} [options] - optional, the specified meta-data\n   *\n   * @return {Promise}\n   */\n  async setItem(key, value, options) {\n    logger.debug(`Set item: key is ${key}, value is ${value} with options: ${options}`);\n    if (!key || key === currentSizeKey) {\n      logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n      return;\n    }\n    if (typeof value === 'undefined') {\n      logger.warn(`The value of item should not be undefined!`);\n      return;\n    }\n    const cacheItemOptions = {\n      priority: options?.priority !== undefined ? options.priority : this.config.defaultPriority,\n      expires: options?.expires !== undefined ? options.expires : this.config.defaultTTL + getCurrentTime()\n    };\n    if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n      logger.warn(`Invalid parameter: priority due to out or range. It should be within 1 and 5.`);\n      return;\n    }\n    const prefixedKey = `${this.config.keyPrefix}${key}`;\n    const item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n    // check whether this item is too big;\n    if (item.byteSize > this.config.itemMaxSize) {\n      logger.warn(`Item with key: ${key} you are trying to put into is too big!`);\n      return;\n    }\n    try {\n      // first look into the storage, if it exists, delete it.\n      const val = await this.getStorage().getItem(prefixedKey);\n      if (val) {\n        await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n      }\n      // check whether the cache is full\n      if (await this.isCacheFull(item.byteSize)) {\n        const validKeys = await this.clearInvalidAndGetRemainingKeys();\n        if (await this.isCacheFull(item.byteSize)) {\n          const sizeToPop = await this.sizeToPop(item.byteSize);\n          await this.popOutItems(validKeys, sizeToPop);\n        }\n      }\n      // put item in the cache\n      return this.setCacheItem(prefixedKey, item);\n    } catch (e) {\n      logger.warn(`setItem failed! ${e}`);\n    }\n  }\n  /**\n   * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n   * If you specified callback function in the options,\n   * then the function will be executed if no such item in the cache\n   * and finally put the return value into cache.\n   * Please make sure the callback function will return the value you want to put into the cache.\n   * The cache will abort output a warning:\n   * If the key is invalid\n   * If error happened with AsyncStorage\n   *\n   * @param {String} key - the key of the item\n   * @param {Object} [options] - the options of callback function\n   *\n   * @return {Promise} - return a promise resolves to be the value of the item\n   */\n  async getItem(key, options) {\n    logger.debug(`Get item: key is ${key} with options ${options}`);\n    let cached;\n    if (!key || key === currentSizeKey) {\n      logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n      return null;\n    }\n    const prefixedKey = `${this.config.keyPrefix}${key}`;\n    try {\n      cached = await this.getStorage().getItem(prefixedKey);\n      if (cached != null) {\n        if (await this.isExpired(prefixedKey)) {\n          // if expired, remove that item and return null\n          await this.removeCacheItem(prefixedKey, JSON.parse(cached).byteSize);\n        } else {\n          // if not expired, update its visitedTime and return the value\n          const item = await this.updateVisitedTime(JSON.parse(cached), prefixedKey);\n          return item.data;\n        }\n      }\n      if (options?.callback) {\n        const val = options.callback();\n        if (val !== null) {\n          await this.setItem(key, val, options);\n        }\n        return val;\n      }\n      return null;\n    } catch (e) {\n      logger.warn(`getItem failed! ${e}`);\n      return null;\n    }\n  }\n  /**\n   * remove item from the cache\n   * The cache will abort output a warning:\n   * If error happened with AsyncStorage\n   * @param {String} key - the key of the item\n   * @return {Promise}\n   */\n  async removeItem(key) {\n    logger.debug(`Remove item: key is ${key}`);\n    if (!key || key === currentSizeKey) {\n      logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n      return;\n    }\n    const prefixedKey = `${this.config.keyPrefix}${key}`;\n    try {\n      const val = await this.getStorage().getItem(prefixedKey);\n      if (val) {\n        await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n      }\n    } catch (e) {\n      logger.warn(`removeItem failed! ${e}`);\n    }\n  }\n  /**\n   * Return all the keys owned by this cache.\n   * Will return an empty array if error occurred.\n   *\n   * @return {Promise}\n   */\n  async getAllKeys() {\n    try {\n      return await this.getAllCacheKeys();\n    } catch (e) {\n      logger.warn(`getAllkeys failed! ${e}`);\n      return [];\n    }\n  }\n  getStorage() {\n    return this.keyValueStorage;\n  }\n  /**\n   * check whether item is expired\n   *\n   * @param key - the key of the item\n   *\n   * @return true if the item is expired.\n   */\n  async isExpired(key) {\n    const text = await this.getStorage().getItem(key);\n    assert(text !== null, CacheErrorCode.NoCacheItem, `Key: ${key}`);\n    const item = JSON.parse(text);\n    if (getCurrentTime() >= item.expires) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * delete item from cache\n   *\n   * @param prefixedKey - the key of the item\n   * @param size - optional, the byte size of the item\n   */\n  async removeCacheItem(prefixedKey, size) {\n    const item = await this.getStorage().getItem(prefixedKey);\n    assert(item !== null, CacheErrorCode.NoCacheItem, `Key: ${prefixedKey}`);\n    const itemSize = size ?? JSON.parse(item).byteSize;\n    // first try to update the current size of the cache\n    await this.decreaseCurrentSizeInBytes(itemSize);\n    // try to remove the item from cache\n    try {\n      await this.getStorage().removeItem(prefixedKey);\n    } catch (removeItemError) {\n      // if some error happened, we need to rollback the current size\n      await this.increaseCurrentSizeInBytes(itemSize);\n      logger.error(`Failed to remove item: ${removeItemError}`);\n    }\n  }\n  /**\n   * produce a JSON object with meta-data and data value\n   * @param value - the value of the item\n   * @param options - optional, the specified meta-data\n   *\n   * @return - the item which has the meta-data and the value\n   */\n  fillCacheItem(key, value, options) {\n    const item = {\n      key,\n      data: value,\n      timestamp: getCurrentTime(),\n      visitedTime: getCurrentTime(),\n      priority: options.priority ?? 0,\n      expires: options.expires ?? 0,\n      type: typeof value,\n      byteSize: 0\n    };\n    // calculate byte size\n    item.byteSize = getByteLength(JSON.stringify(item));\n    // re-calculate using cache item with updated byteSize property\n    item.byteSize = getByteLength(JSON.stringify(item));\n    return item;\n  }\n  sanitizeConfig() {\n    if (this.config.itemMaxSize > this.config.capacityInBytes) {\n      logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n    if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n      logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n    if (Number(this.config.warningThreshold) > 1 || Number(this.config.warningThreshold) < 0) {\n      logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n      this.config.warningThreshold = defaultConfig.warningThreshold;\n    }\n    // Set 5MB limit\n    const cacheLimit = 5 * 1024 * 1024;\n    if (this.config.capacityInBytes > cacheLimit) {\n      logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n  }\n  /**\n   * increase current size of the cache\n   *\n   * @param amount - the amount of the cache szie which need to be increased\n   */\n  async increaseCurrentSizeInBytes(amount) {\n    const size = await this.getCurrentCacheSize();\n    await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size + amount).toString());\n  }\n  /**\n   * decrease current size of the cache\n   *\n   * @param amount - the amount of the cache size which needs to be decreased\n   */\n  async decreaseCurrentSizeInBytes(amount) {\n    const size = await this.getCurrentCacheSize();\n    await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size - amount).toString());\n  }\n  /**\n   * update the visited time if item has been visited\n   *\n   * @param item - the item which need to be updated\n   * @param prefixedKey - the key of the item\n   *\n   * @return the updated item\n   */\n  async updateVisitedTime(item, prefixedKey) {\n    item.visitedTime = getCurrentTime();\n    await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n    return item;\n  }\n  /**\n   * put item into cache\n   *\n   * @param prefixedKey - the key of the item\n   * @param itemData - the value of the item\n   * @param itemSizeInBytes - the byte size of the item\n   */\n  async setCacheItem(prefixedKey, item) {\n    // first try to update the current size of the cache.\n    await this.increaseCurrentSizeInBytes(item.byteSize);\n    // try to add the item into cache\n    try {\n      await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n    } catch (setItemErr) {\n      // if some error happened, we need to rollback the current size\n      await this.decreaseCurrentSizeInBytes(item.byteSize);\n      logger.error(`Failed to set item ${setItemErr}`);\n    }\n  }\n  /**\n   * total space needed when poping out items\n   *\n   * @param itemSize\n   *\n   * @return total space needed\n   */\n  async sizeToPop(itemSize) {\n    const cur = await this.getCurrentCacheSize();\n    const spaceItemNeed = cur + itemSize - this.config.capacityInBytes;\n    const cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;\n    return spaceItemNeed > cacheThresholdSpace ? spaceItemNeed : cacheThresholdSpace;\n  }\n  /**\n   * see whether cache is full\n   *\n   * @param itemSize\n   *\n   * @return true if cache is full\n   */\n  async isCacheFull(itemSize) {\n    const cur = await this.getCurrentCacheSize();\n    return itemSize + cur > this.config.capacityInBytes;\n  }\n  /**\n   * get all the items we have, sort them by their priority,\n   * if priority is same, sort them by their last visited time\n   * pop out items from the low priority (5 is the lowest)\n   * @private\n   * @param keys - all the keys in this cache\n   * @param sizeToPop - the total size of the items which needed to be poped out\n   */\n  async popOutItems(keys, sizeToPop) {\n    const items = [];\n    let remainedSize = sizeToPop;\n    for (const key of keys) {\n      const val = await this.getStorage().getItem(key);\n      if (val != null) {\n        const item = JSON.parse(val);\n        items.push(item);\n      }\n    }\n    // first compare priority\n    // then compare visited time\n    items.sort((a, b) => {\n      if (a.priority > b.priority) {\n        return -1;\n      } else if (a.priority < b.priority) {\n        return 1;\n      } else {\n        if (a.visitedTime < b.visitedTime) {\n          return -1;\n        } else return 1;\n      }\n    });\n    for (const item of items) {\n      // pop out items until we have enough room for new item\n      await this.removeCacheItem(item.key, item.byteSize);\n      remainedSize -= item.byteSize;\n      if (remainedSize <= 0) {\n        return;\n      }\n    }\n  }\n  /**\n   * Scan the storage and combine the following operations for efficiency\n   *   1. Clear out all expired keys owned by this cache, not including the size key.\n   *   2. Return the remaining keys.\n   *\n   * @return The remaining valid keys\n   */\n  async clearInvalidAndGetRemainingKeys() {\n    const remainingKeys = [];\n    const keys = await this.getAllCacheKeys({\n      omitSizeKey: true\n    });\n    for (const key of keys) {\n      if (await this.isExpired(key)) {\n        await this.removeCacheItem(key);\n      } else {\n        remainingKeys.push(key);\n      }\n    }\n    return remainingKeys;\n  }\n  /**\n   * clear the entire cache\n   * The cache will abort and output a warning if error occurs\n   * @return {Promise}\n   */\n  async clear() {\n    logger.debug(`Clear Cache`);\n    try {\n      const keys = await this.getAllKeys();\n      for (const key of keys) {\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        await this.getStorage().removeItem(prefixedKey);\n      }\n    } catch (e) {\n      logger.warn(`clear failed! ${e}`);\n    }\n  }\n}\nexport { StorageCacheCommon };\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { KeyValueStorage } from '../storage/KeyValueStorage.mjs';\nimport { getLocalStorageWithFallback } from '../storage/utils.mjs';\nimport { defaultConfig } from './constants.mjs';\nimport { StorageCacheCommon } from './StorageCacheCommon.mjs';\nimport { getCurrentSizeKey, getCurrentTime } from './utils/cacheHelpers.mjs';\nimport './utils/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nclass StorageCache extends StorageCacheCommon {\n  /**\n   * initialize the cache\n   * @param config - the configuration of the cache\n   */\n  constructor(config) {\n    const storage = getLocalStorageWithFallback();\n    super({\n      config,\n      keyValueStorage: new KeyValueStorage(storage)\n    });\n    this.storage = storage;\n    this.getItem = this.getItem.bind(this);\n    this.setItem = this.setItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n  async getAllCacheKeys(options) {\n    const {\n      omitSizeKey\n    } = options ?? {};\n    const keys = [];\n    for (let i = 0; i < this.storage.length; i++) {\n      const key = this.storage.key(i);\n      if (omitSizeKey && key === getCurrentSizeKey(this.config.keyPrefix)) {\n        continue;\n      }\n      if (key?.startsWith(this.config.keyPrefix)) {\n        keys.push(key.substring(this.config.keyPrefix.length));\n      }\n    }\n    return keys;\n  }\n  /**\n   * Return a new instance of cache with customized configuration.\n   * @param {Object} config - the customized configuration\n   * @return {Object} - the new instance of Cache\n   */\n  createInstance(config) {\n    if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n      logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n      config.keyPrefix = getCurrentTime.toString();\n    }\n    return new StorageCache(config);\n  }\n}\nexport { StorageCache };\n", "import { StorageCache } from './StorageCache.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst Cache = new StorageCache();\nexport { Cache };\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('I18n');\n/**\n * Language translation utility.\n */\nlet I18n$1 = class I18n {\n  constructor() {\n    /**\n     * @private\n     */\n    this._options = null;\n    /**\n     * @private\n     */\n    this._lang = null;\n    /**\n     * @private\n     */\n    this._dict = {};\n  }\n  /**\n   * Sets the default language from the configuration when required.\n   */\n  setDefaultLanguage() {\n    // Default to window language if not set in instance\n    if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\n      this._lang = window.navigator.language;\n    }\n    logger.debug(this._lang);\n  }\n  /**\n   * @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n  setLanguage(lang) {\n    this._lang = lang;\n  }\n  /**\n   * @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n  get(key, defVal = undefined) {\n    this.setDefaultLanguage();\n    if (!this._lang) {\n      return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    const lang = this._lang;\n    let val = this.getByLanguage(key, lang);\n    if (val) {\n      return val;\n    }\n    if (lang.indexOf('-') > 0) {\n      val = this.getByLanguage(key, lang.split('-')[0]);\n    }\n    if (val) {\n      return val;\n    }\n    return typeof defVal !== 'undefined' ? defVal : key;\n  }\n  /**\n   * @method\n   * Get value according to specified language\n   * @param {String} key\n   * @param {String} language - Specified langurage to be used\n   * @param {String} defVal - Default value\n   */\n  getByLanguage(key, language, defVal = null) {\n    if (!language) {\n      return defVal;\n    }\n    const langDict = this._dict[language];\n    if (!langDict) {\n      return defVal;\n    }\n    return langDict[key];\n  }\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {String} language - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n  putVocabulariesForLanguage(language, vocabularies) {\n    let langDict = this._dict[language];\n    if (!langDict) {\n      langDict = this._dict[language] = {};\n    }\n    this._dict[language] = {\n      ...langDict,\n      ...vocabularies\n    };\n  }\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n  putVocabularies(vocabularies) {\n    Object.keys(vocabularies).forEach(key => {\n      this.putVocabulariesForLanguage(key, vocabularies[key]);\n    });\n  }\n};\nexport { I18n$1 as I18n };\n", "import { createAssertionFunction } from '../errors/createAssertionFunction.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar I18nErrorCode;\n(function (I18nErrorCode) {\n  I18nErrorCode[\"NotConfigured\"] = \"NotConfigured\";\n})(I18nErrorCode || (I18nErrorCode = {}));\nconst i18nErrorMap = {\n  [I18nErrorCode.NotConfigured]: {\n    message: 'i18n is not configured.'\n  }\n};\nconst assert = createAssertionFunction(i18nErrorMap);\nexport { I18nErrorCode, assert };\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { I18n as I18n$1 } from './I18n.mjs';\nimport { assert, I18nErrorCode } from './errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('I18n');\nlet _config = {\n  language: null\n};\nlet _i18n = null;\n/**\n * Export I18n APIs\n */\nclass I18n {\n  /**\n   * @static\n   * @method\n   * Configure I18n part\n   * @param {Object} config - Configuration of the I18n\n   */\n  static configure(config) {\n    logger.debug('configure I18n');\n    if (!config) {\n      return _config;\n    }\n    _config = Object.assign({}, _config, config.I18n || config);\n    I18n.createInstance();\n    return _config;\n  }\n  static getModuleName() {\n    return 'I18n';\n  }\n  /**\n   * @static\n   * @method\n   * Create an instance of I18n for the library\n   */\n  static createInstance() {\n    logger.debug('create I18n instance');\n    if (_i18n) {\n      return;\n    }\n    _i18n = new I18n$1();\n  }\n  /**\n   * @static @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n  static setLanguage(lang) {\n    I18n.checkConfig();\n    assert(!!_i18n, I18nErrorCode.NotConfigured);\n    _i18n.setLanguage(lang);\n  }\n  /**\n   * @static @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n  static get(key, defVal) {\n    if (!I18n.checkConfig()) {\n      return typeof defVal === 'undefined' ? key : defVal;\n    }\n    assert(!!_i18n, I18nErrorCode.NotConfigured);\n    return _i18n.get(key, defVal);\n  }\n  /**\n   * @static\n   * @method\n   * Add vocabularies for one language\n   * @param {String} language - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n  static putVocabulariesForLanguage(language, vocabularies) {\n    I18n.checkConfig();\n    assert(!!_i18n, I18nErrorCode.NotConfigured);\n    _i18n.putVocabulariesForLanguage(language, vocabularies);\n  }\n  /**\n   * @static\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n  static putVocabularies(vocabularies) {\n    I18n.checkConfig();\n    assert(!!_i18n, I18nErrorCode.NotConfigured);\n    _i18n.putVocabularies(vocabularies);\n  }\n  static checkConfig() {\n    if (!_i18n) {\n      I18n.createInstance();\n    }\n    return true;\n  }\n}\n// Create an instance of I18n in the static class\nI18n.createInstance();\nexport { I18n };\n", "import { getDnsSuffix } from '../../clients/endpoints/getDnsSuffix.mjs';\nimport { jitteredBackoff } from '../../clients/middleware/retry/jitteredBackoff.mjs';\nimport { getRetryDecider } from '../../clients/middleware/retry/defaultRetryDecider.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '../../parseAWSExports.mjs';\nimport 'uuid';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\nimport '../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { getAmplifyUserAgent } from '../../Platform/index.mjs';\nimport '../../Platform/types.mjs';\nimport '../../BackgroundProcessManager/types.mjs';\nimport '../../Reachability/Reachability.mjs';\nimport '../../Hub/index.mjs';\nimport '../../utils/sessionListener/index.mjs';\nimport { parseJsonError } from '../../clients/serde/json.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'mobiletargeting';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({\n  region\n}) => ({\n  url: new AmplifyUrl(`https://pinpoint.${region}.${getDnsSuffix(region)}`)\n});\n/**\n * @internal\n */\nconst defaultConfig = {\n  service: SERVICE_NAME,\n  endpointResolver,\n  retryDecider: getRetryDecider(parseJsonError),\n  computeDelay: jitteredBackoff,\n  userAgentValue: getAmplifyUserAgent()\n};\n/**\n * @internal\n */\nconst getSharedHeaders = () => ({\n  'content-type': 'application/json'\n});\nexport { defaultConfig, getSharedHeaders };\n", "import { createAssertionFunction } from '../../errors/createAssertionFunction.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar PinpointValidationErrorCode;\n(function (PinpointValidationErrorCode) {\n  PinpointValidationErrorCode[\"NoAppId\"] = \"NoAppId\";\n})(PinpointValidationErrorCode || (PinpointValidationErrorCode = {}));\nconst pinpointValidationErrorMap = {\n  [PinpointValidationErrorCode.NoAppId]: {\n    message: 'Missing application id.'\n  }\n};\nconst assert = createAssertionFunction(pinpointValidationErrorMap);\nexport { PinpointValidationErrorCode, assert };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns signed headers.\n *\n * @param headers `headers` from the request.\n * @returns List of headers included in canonical headers, separated by semicolons (;). This indicates which headers\n * are part of the signing process. Header names must use lowercase characters and must appear in alphabetical order.\n *\n * @internal\n */\nconst getSignedHeaders = headers => Object.keys(headers).map(key => key.toLowerCase()).sort().join(';');\nexport { getSignedHeaders };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// query params\nconst ALGORITHM_QUERY_PARAM = 'X-Amz-Algorithm';\nconst AMZ_DATE_QUERY_PARAM = 'X-Amz-Date';\nconst CREDENTIAL_QUERY_PARAM = 'X-Amz-Credential';\nconst EXPIRES_QUERY_PARAM = 'X-Amz-Expires';\nconst REGION_SET_PARAM = 'X-Amz-Region-Set';\nconst SIGNATURE_QUERY_PARAM = 'X-Amz-Signature';\nconst SIGNED_HEADERS_QUERY_PARAM = 'X-Amz-SignedHeaders';\nconst TOKEN_QUERY_PARAM = 'X-Amz-Security-Token';\n// headers\nconst AUTH_HEADER = 'authorization';\nconst HOST_HEADER = 'host';\nconst AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nconst TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\n// identifiers\nconst KEY_TYPE_IDENTIFIER = 'aws4_request';\nconst SHA256_ALGORITHM_IDENTIFIER = 'AWS4-HMAC-SHA256';\nconst SIGNATURE_IDENTIFIER = 'AWS4';\n// preset values\nconst EMPTY_HASH = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nconst UNSIGNED_PAYLOAD = 'UNSIGNED-PAYLOAD';\nexport { ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EMPTY_HASH, EXPIRES_QUERY_PARAM, HOST_HEADER, KEY_TYPE_IDENTIFIER, REGION_SET_PARAM, SHA256_ALGORITHM_IDENTIFIER, SIGNATURE_IDENTIFIER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, UNSIGNED_PAYLOAD };\n", "import { KEY_TYPE_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the credential scope which restricts the resulting signature to the specified region and service.\n *\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns  A string representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n *\n * @internal\n */\nconst getCredentialScope = (date, region, service) => `${date}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport { getCredentialScope };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns expected date strings to be used in signing.\n *\n * @param date JavaScript `Date` object.\n * @returns `FormattedDates` object containing the following:\n * - longDate: A date string in 'YYYYMMDDThhmmssZ' format\n * - shortDate: A date string in 'YYYYMMDD' format\n *\n * @internal\n */\nconst getFormattedDates = date => {\n  const longDate = date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n  return {\n    longDate,\n    shortDate: longDate.slice(0, 8)\n  };\n};\nexport { getFormattedDates };\n", "import { getCredentialScope } from './getCredentialScope.mjs';\nimport { getFormattedDates } from './getFormattedDates.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Extracts common values used for signing both requests and urls.\n *\n * @param options `SignRequestOptions` object containing values used to construct the signature.\n * @returns Common `SigningValues` used for signing.\n *\n * @internal\n */\nconst getSigningValues = ({\n  credentials,\n  signingDate = new Date(),\n  signingRegion,\n  signingService,\n  uriEscapePath = true\n}) => {\n  // get properties from credentials\n  const {\n    accessKeyId,\n    secretAccessKey,\n    sessionToken\n  } = credentials;\n  // get formatted dates for signing\n  const {\n    longDate,\n    shortDate\n  } = getFormattedDates(signingDate);\n  // copy header and set signing properties\n  const credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n  return {\n    accessKeyId,\n    credentialScope,\n    longDate,\n    secretAccessKey,\n    sessionToken,\n    shortDate,\n    signingRegion,\n    signingService,\n    uriEscapePath\n  };\n};\nexport { getSigningValues };\n", "import { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@smithy/util-hex-encoding';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nconst getHashedData = (key, data) => {\n  const sha256 = new Sha256(key ?? undefined);\n  sha256.update(data);\n  // TODO: V6 flip to async digest\n  const hashedData = sha256.digestSync();\n  return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nconst getHashedDataAsHex = (key, data) => {\n  const hashedData = getHashedData(key, data);\n  return toHex(hashedData);\n};\nexport { getHashedData, getHashedDataAsHex };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nconst getCanonicalHeaders = headers => Object.entries(headers).map(([key, value]) => ({\n  key: key.toLowerCase(),\n  value: value?.trim().replace(/\\s+/g, ' ') ?? ''\n})).sort((a, b) => a.key < b.key ? -1 : 1).map(entry => `${entry.key}:${entry.value}\\n`).join('');\nexport { getCanonicalHeaders };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nconst getCanonicalQueryString = searchParams => Array.from(searchParams).sort(([keyA, valA], [keyB, valB]) => {\n  if (keyA === keyB) {\n    return valA < valB ? -1 : 1;\n  }\n  return keyA < keyB ? -1 : 1;\n}).map(([key, val]) => `${escapeUri(key)}=${escapeUri(val)}`).join('&');\nconst escapeUri = uri => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\nexport { getCanonicalQueryString };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nconst getCanonicalUri = (pathname, uriEscapePath = true) => pathname ? uriEscapePath ? encodeURIComponent(pathname).replace(/%2F/g, '/') : pathname : '/';\nexport { getCanonicalUri };\n", "import { EMPTY_HASH, UNSIGNED_PAYLOAD } from '../constants.mjs';\nimport { getHashedDataAsHex } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the hashed payload.\n *\n * @param body `body` (payload) from the request.\n * @returns String created using the payload in the body of the HTTP request as input to a hash function. This string\n * uses lowercase hexadecimal characters. If the payload is empty, return precalculated result of an empty hash.\n *\n * @internal\n */\nconst getHashedPayload = body => {\n  // return precalculated empty hash if body is undefined or null\n  if (body == null) {\n    return EMPTY_HASH;\n  }\n  if (isSourceData(body)) {\n    const hashedData = getHashedDataAsHex(null, body);\n    return hashedData;\n  }\n  // Defined body is not signable. Return unsigned payload which may or may not be accepted by the service.\n  return UNSIGNED_PAYLOAD;\n};\nconst isSourceData = body => typeof body === 'string' || ArrayBuffer.isView(body) || isArrayBuffer(body);\nconst isArrayBuffer = arg => typeof ArrayBuffer === 'function' && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === '[object ArrayBuffer]';\nexport { getHashedPayload };\n", "import { getCanonicalHeaders } from './getCanonicalHeaders.mjs';\nimport { getCanonicalQueryString } from './getCanonicalQueryString.mjs';\nimport { getCanonicalUri } from './getCanonicalUri.mjs';\nimport { getHashedPayload } from './getHashedPayload.mjs';\nimport { getSignedHeaders } from './getSignedHeaders.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nconst getCanonicalRequest = ({\n  body,\n  headers,\n  method,\n  url\n}, uriEscapePath = true) => [method, getCanonicalUri(url.pathname, uriEscapePath), getCanonicalQueryString(url.searchParams), getCanonicalHeaders(headers), getSignedHeaders(headers), getHashedPayload(body)].join('\\n');\nexport { getCanonicalRequest };\n", "import { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants.mjs';\nimport { getHashedData } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nconst getSigningKey = (secretAccessKey, date, region, service) => {\n  const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n  const dateKey = getHashedData(key, date);\n  const regionKey = getHashedData(dateKey, region);\n  const serviceKey = getHashedData(regionKey, service);\n  const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n  return signingKey;\n};\nexport { getSigningKey };\n", "import { SHA256_ALGORITHM_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nconst getStringToSign = (date, credentialScope, hashedRequest) => [SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\nexport { getStringToSign };\n", "import { getHashedDataAsHex } from './dataHashHelpers.mjs';\nimport { getCanonicalRequest } from './getCanonicalRequest.mjs';\nimport { getSigningKey } from './getSigningKey.mjs';\nimport { getStringToSign } from './getStringToSign.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nconst getSignature = (request, {\n  credentialScope,\n  longDate,\n  secretAccessKey,\n  shortDate,\n  signingRegion,\n  signingService,\n  uriEscapePath\n}) => {\n  // step 1: create a canonical request\n  const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n  // step 2: create a hash of the canonical request\n  const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n  // step 3: create a string to sign\n  const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n  // step 4: calculate the signature\n  const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n  return signature;\n};\nexport { getSignature };\n", "import { getSignedHeaders } from './utils/getSignedHeaders.mjs';\nimport { getSigningValues } from './utils/getSigningValues.mjs';\nimport { HOST_HEADER, AMZ_DATE_HEADER, TOKEN_HEADER, SHA256_ALGORITHM_IDENTIFIER, AUTH_HEADER } from './constants.mjs';\nimport { getSignature } from './utils/getSignature.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.\n */\nconst signRequest = (request, options) => {\n  const signingValues = getSigningValues(options);\n  const {\n    accessKeyId,\n    credentialScope,\n    longDate,\n    sessionToken\n  } = signingValues;\n  // create the request to sign\n  const headers = {\n    ...request.headers\n  };\n  headers[HOST_HEADER] = request.url.host;\n  headers[AMZ_DATE_HEADER] = longDate;\n  if (sessionToken) {\n    headers[TOKEN_HEADER] = sessionToken;\n  }\n  const requestToSign = {\n    ...request,\n    headers\n  };\n  // calculate and add the signature to the request\n  const signature = getSignature(requestToSign, signingValues);\n  const credentialEntry = `Credential=${accessKeyId}/${credentialScope}`;\n  const signedHeadersEntry = `SignedHeaders=${getSignedHeaders(headers)}`;\n  const signatureEntry = `Signature=${signature}`;\n  headers[AUTH_HEADER] = `${SHA256_ALGORITHM_IDENTIFIER} ${credentialEntry}, ${signedHeadersEntry}, ${signatureEntry}`;\n  return requestToSign;\n};\nexport { signRequest };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a `Date` that is corrected for clock skew.\n *\n * @param systemClockOffset The offset of the system clock in milliseconds.\n *\n * @returns `Date` representing the current time adjusted by the system clock offset.\n *\n * @internal\n */\nconst getSkewCorrectedDate = systemClockOffset => new Date(Date.now() + systemClockOffset);\nexport { getSkewCorrectedDate };\n", "import { getSkewCorrectedDate } from './getSkewCorrectedDate.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// 5 mins in milliseconds. Ref: https://github.com/aws/aws-sdk-js-v3/blob/6c0f44fab30a1bb2134af47362a31332abc3666b/packages/middleware-signing/src/utils/isClockSkewed.ts#L10\nconst SKEW_WINDOW = 5 * 60 * 1000;\n/**\n * Checks if the provided date is within the skew window of 5 minutes.\n *\n * @param clockTimeInMilliseconds Time to check for skew in milliseconds.\n * @param clockOffsetInMilliseconds Offset to check clock against in milliseconds.\n *\n * @returns True if skewed. False otherwise.\n *\n * @internal\n */\nconst isClockSkewed = (clockTimeInMilliseconds, clockOffsetInMilliseconds) => Math.abs(getSkewCorrectedDate(clockOffsetInMilliseconds).getTime() - clockTimeInMilliseconds) >= SKEW_WINDOW;\nexport { isClockSkewed };\n", "import { isClockSkewed } from './isClockSkewed.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the difference between clock time and the current system time if clock is skewed.\n *\n * @param clockTimeInMilliseconds Clock time in milliseconds.\n * @param currentSystemClockOffset Current system clock offset in milliseconds.\n *\n * @internal\n */\nconst getUpdatedSystemClockOffset = (clockTimeInMilliseconds, currentSystemClockOffset) => {\n  if (isClockSkewed(clockTimeInMilliseconds, currentSystemClockOffset)) {\n    return clockTimeInMilliseconds - Date.now();\n  }\n  return currentSystemClockOffset;\n};\nexport { getUpdatedSystemClockOffset };\n", "import { signRequest } from './signer/signatureV4/signRequest.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { getSkewCorrectedDate } from './utils/getSkewCorrectedDate.mjs';\nimport { getUpdatedSystemClockOffset } from './utils/getUpdatedSystemClockOffset.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware that SigV4 signs request with AWS credentials, and correct system clock offset.\n * This middleware is expected to be placed after retry middleware.\n */\nconst signingMiddlewareFactory = ({\n  credentials,\n  region,\n  service,\n  uriEscapePath = true\n}) => {\n  let currentSystemClockOffset;\n  return (next, context) => async function signingMiddleware(request) {\n    currentSystemClockOffset = currentSystemClockOffset ?? 0;\n    const signRequestOptions = {\n      credentials: typeof credentials === 'function' ? await credentials({\n        forceRefresh: !!context?.isCredentialsExpired\n      }) : credentials,\n      signingDate: getSkewCorrectedDate(currentSystemClockOffset),\n      signingRegion: region,\n      signingService: service,\n      uriEscapePath\n    };\n    const signedRequest = await signRequest(request, signRequestOptions);\n    const response = await next(signedRequest);\n    // Update system clock offset if response contains date header, regardless of the status code.\n    // non-2xx response will still be returned from next handler instead of thrown, because it's\n    // only thrown by the retry middleware.\n    const dateString = getDateHeader(response);\n    if (dateString) {\n      currentSystemClockOffset = getUpdatedSystemClockOffset(Date.parse(dateString), currentSystemClockOffset);\n    }\n    return response;\n  };\n};\nconst getDateHeader = ({\n  headers\n} = {}) => headers?.date ?? headers?.Date ?? headers?.['x-amz-date'];\nexport { signingMiddlewareFactory };\n", "import { retryMiddlewareFactory } from '../../middleware/retry/retryMiddleware.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport { amzSdkInvocationIdHeaderMiddlewareFactory } from '../../middleware/retry/amzSdkInvocationIdHeaderMiddleware.mjs';\nimport { amzSdkRequestHeaderMiddlewareFactory } from '../../middleware/retry/amzSdkRequestHeaderMiddleware.mjs';\nimport { signingMiddlewareFactory } from '../../middleware/signing/middleware.mjs';\nimport { userAgentMiddlewareFactory } from '../../middleware/userAgent/middleware.mjs';\nimport { composeTransferHandler } from '../../internal/composeTransferHandler.mjs';\nimport { fetchTransferHandler } from '../fetch.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst authenticatedHandler = composeTransferHandler(fetchTransferHandler, [userAgentMiddlewareFactory, amzSdkInvocationIdHeaderMiddlewareFactory, retryMiddlewareFactory, amzSdkRequestHeaderMiddlewareFactory, signingMiddlewareFactory]);\nexport { authenticatedHandler };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Wraps encodeURIComponent to encode additional characters to fully adhere to RFC 3986.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/86b432c464150069678b25ff88d57c2ca26e75a2/packages/smithy-client/src/extended-encode-uri-component.ts#L7\n *\n * @param uri URI string to encode\n * @returns RFC 3986 encoded string\n *\n * @internal\n */\nconst extendedEncodeURIComponent = uri => {\n  // Match characters normally not encoded by `encodeURIComponent`\n  const extendedCharacters = /[!'()*]/g;\n  return encodeURIComponent(uri).replace(extendedCharacters, hexEncode);\n};\nconst hexEncode = c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\nexport { extendedEncodeURIComponent };\n", "import { authenticatedHandler } from '../../clients/handlers/aws/authenticated.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { extendedEncodeURIComponent } from '../../clients/middleware/signing/utils/extendedEncodeURIComponent.mjs';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\nimport { defaultConfig, getSharedHeaders } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst updateEndpointSerializer = ({\n  ApplicationId = '',\n  EndpointId = '',\n  EndpointRequest\n}, endpoint) => {\n  const headers = getSharedHeaders();\n  const url = new AmplifyUrl(endpoint.url);\n  url.pathname = `v1/apps/${extendedEncodeURIComponent(ApplicationId)}/endpoints/${extendedEncodeURIComponent(EndpointId)}`;\n  const body = JSON.stringify(EndpointRequest);\n  return {\n    method: 'PUT',\n    headers,\n    url,\n    body\n  };\n};\nconst updateEndpointDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseJsonError(response);\n    throw error;\n  } else {\n    const {\n      Message,\n      RequestID\n    } = await parseJsonBody(response);\n    return {\n      MessageBody: {\n        Message,\n        RequestID\n      },\n      $metadata: parseMetadata(response)\n    };\n  }\n};\n/**\n * @internal\n */\nconst updateEndpoint = composeServiceApi(authenticatedHandler, updateEndpointSerializer, updateEndpointDeserializer, defaultConfig);\nexport { updateEndpoint };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Default buffer constants\nconst BUFFER_SIZE = 1000;\nconst FLUSH_SIZE = 100;\nconst FLUSH_INTERVAL = 5 * 1000; // 5s\nconst RESEND_LIMIT = 5;\nexport { BUFFER_SIZE, FLUSH_INTERVAL, FLUSH_SIZE, RESEND_LIMIT };\n", "import { authenticatedHandler } from '../../clients/handlers/aws/authenticated.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { extendedEncodeURIComponent } from '../../clients/middleware/signing/utils/extendedEncodeURIComponent.mjs';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\nimport { defaultConfig, getSharedHeaders } from './base.mjs';\nimport { assert, PinpointValidationErrorCode } from './errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst putEventsSerializer = ({\n  ApplicationId,\n  EventsRequest\n}, endpoint) => {\n  assert(!!ApplicationId, PinpointValidationErrorCode.NoAppId);\n  const headers = getSharedHeaders();\n  const url = new AmplifyUrl(endpoint.url);\n  url.pathname = `v1/apps/${extendedEncodeURIComponent(ApplicationId)}/events`;\n  const body = JSON.stringify(EventsRequest ?? {});\n  return {\n    method: 'POST',\n    headers,\n    url,\n    body\n  };\n};\nconst putEventsDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseJsonError(response);\n    throw error;\n  } else {\n    const {\n      Results\n    } = await parseJsonBody(response);\n    return {\n      EventsResponse: {\n        Results\n      },\n      $metadata: parseMetadata(response)\n    };\n  }\n};\n/**\n * @internal\n */\nconst putEvents = composeServiceApi(authenticatedHandler, putEventsSerializer, putEventsDeserializer, defaultConfig);\nexport { putEvents };\n", "import { ConsoleLogger } from '../../../Logger/ConsoleLogger.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport '../../../parseAWSExports.mjs';\nimport 'uuid';\nimport '../../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../../Platform/index.mjs';\nimport '../../../Platform/types.mjs';\nimport '../../../BackgroundProcessManager/types.mjs';\nimport '../../../Reachability/Reachability.mjs';\nimport '../../../Hub/index.mjs';\nimport '../../../utils/sessionListener/index.mjs';\nimport '../../../awsClients/pinpoint/base.mjs';\nimport { putEvents } from '../../../awsClients/pinpoint/putEvents.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('PinpointEventBuffer');\nconst RETRYABLE_CODES = [429, 500];\nconst ACCEPTED_CODES = [202];\nclass PinpointEventBuffer {\n  constructor(config) {\n    this._interval = undefined;\n    this._pause = false;\n    this._flush = false;\n    this._buffer = [];\n    this._config = config;\n    this._sendBatch = this._sendBatch.bind(this);\n    this._startLoop();\n  }\n  push(event) {\n    if (this._buffer.length >= this._config.bufferSize) {\n      logger.debug('Exceeded Pinpoint event buffer limits, event dropped.', {\n        eventId: event.eventId\n      });\n      return;\n    }\n    this._buffer.push({\n      [event.eventId]: event\n    });\n  }\n  pause() {\n    this._pause = true;\n  }\n  resume() {\n    this._pause = false;\n  }\n  flush() {\n    this._flush = true;\n  }\n  identityHasChanged(identityId) {\n    return this._config.identityId !== identityId;\n  }\n  flushAll() {\n    this._putEvents(this._buffer.splice(0, this._buffer.length));\n  }\n  _startLoop() {\n    if (this._interval) {\n      clearInterval(this._interval);\n    }\n    const {\n      flushInterval\n    } = this._config;\n    this._interval = setInterval(this._sendBatch, flushInterval);\n  }\n  _sendBatch() {\n    const bufferLength = this._buffer.length;\n    if (this._flush && !bufferLength && this._interval) {\n      clearInterval(this._interval);\n    }\n    if (this._pause || !bufferLength || false) {\n      return;\n    }\n    const {\n      flushSize\n    } = this._config;\n    const batchSize = Math.min(flushSize, bufferLength);\n    const bufferSubset = this._buffer.splice(0, batchSize);\n    this._putEvents(bufferSubset);\n  }\n  async _putEvents(buffer) {\n    const eventMap = this._bufferToMap(buffer);\n    const batchEventParams = this._generateBatchEventParams(eventMap);\n    try {\n      const {\n        credentials,\n        region,\n        userAgentValue\n      } = this._config;\n      const data = await putEvents({\n        credentials,\n        region,\n        userAgentValue\n      }, batchEventParams);\n      this._processPutEventsSuccessResponse(data, eventMap);\n    } catch (err) {\n      this._handlePutEventsFailure(err, eventMap);\n    }\n  }\n  _generateBatchEventParams(eventMap) {\n    const batchItem = {};\n    Object.values(eventMap).forEach(item => {\n      const {\n        event,\n        timestamp,\n        endpointId,\n        eventId,\n        session\n      } = item;\n      const {\n        name,\n        attributes,\n        metrics\n      } = event;\n      batchItem[endpointId] = {\n        Endpoint: {\n          ...batchItem[endpointId]?.Endpoint\n        },\n        Events: {\n          ...batchItem[endpointId]?.Events,\n          [eventId]: {\n            EventType: name,\n            Timestamp: new Date(timestamp).toISOString(),\n            Attributes: attributes,\n            Metrics: metrics,\n            Session: session\n          }\n        }\n      };\n    });\n    return {\n      ApplicationId: this._config.appId,\n      EventsRequest: {\n        BatchItem: batchItem\n      }\n    };\n  }\n  _handlePutEventsFailure(err, eventMap) {\n    logger.debug('putEvents call to Pinpoint failed.', err);\n    const statusCode = err.$metadata && err.$metadata.httpStatusCode;\n    if (RETRYABLE_CODES.includes(statusCode)) {\n      const retryableEvents = Object.values(eventMap);\n      this._retry(retryableEvents);\n    }\n  }\n  _processPutEventsSuccessResponse(data, eventMap) {\n    const {\n      Results = {}\n    } = data.EventsResponse ?? {};\n    const retryableEvents = [];\n    Object.entries(Results).forEach(([_, endpointValues]) => {\n      const responses = endpointValues.EventsItemResponse ?? {};\n      Object.entries(responses).forEach(([eventId, eventValues]) => {\n        const eventObject = eventMap[eventId];\n        if (!eventObject) {\n          return;\n        }\n        const {\n          StatusCode,\n          Message\n        } = eventValues ?? {};\n        if (StatusCode && ACCEPTED_CODES.includes(StatusCode)) {\n          return;\n        }\n        if (StatusCode && RETRYABLE_CODES.includes(StatusCode)) {\n          retryableEvents.push(eventObject);\n          return;\n        }\n        const {\n          name\n        } = eventObject.event;\n        logger.warn('Pinpoint event failed to send.', {\n          eventId,\n          name,\n          message: Message\n        });\n      });\n    });\n    if (retryableEvents.length) {\n      this._retry(retryableEvents);\n    }\n  }\n  _retry(retryableEvents) {\n    // retryable events that haven't reached the resendLimit\n    const eligibleEvents = [];\n    retryableEvents.forEach(bufferedEvent => {\n      const {\n        eventId\n      } = bufferedEvent;\n      const {\n        name\n      } = bufferedEvent.event;\n      if (bufferedEvent.resendLimit-- > 0) {\n        logger.debug('Resending event.', {\n          eventId,\n          name,\n          remainingAttempts: bufferedEvent.resendLimit\n        });\n        eligibleEvents.push({\n          [eventId]: bufferedEvent\n        });\n        return;\n      }\n      logger.debug('No retry attempts remaining for event.', {\n        eventId,\n        name\n      });\n    });\n    // add the events to the front of the buffer\n    this._buffer.unshift(...eligibleEvents);\n  }\n  _bufferToMap(buffer) {\n    return buffer.reduce((acc, curVal) => {\n      const [[key, value]] = Object.entries(curVal);\n      acc[key] = value;\n      return acc;\n    }, {});\n  }\n}\nexport { PinpointEventBuffer };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar UpdateEndpointException;\n(function (UpdateEndpointException) {\n  UpdateEndpointException[\"BadRequestException\"] = \"BadRequestException\";\n  UpdateEndpointException[\"ForbiddenException\"] = \"ForbiddenException\";\n  UpdateEndpointException[\"InternalServerErrorException\"] = \"InternalServerErrorException\";\n  UpdateEndpointException[\"MethodNotAllowedException\"] = \"MethodNotAllowedException\";\n  UpdateEndpointException[\"NotFoundException\"] = \"NotFoundException\";\n  UpdateEndpointException[\"PayloadTooLargeException\"] = \"PayloadTooLargeException\";\n  UpdateEndpointException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(UpdateEndpointException || (UpdateEndpointException = {}));\nexport { UpdateEndpointException };\n", "import { createAssertionFunction } from '../errors/createAssertionFunction.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar ServiceWorkerErrorCode;\n(function (ServiceWorkerErrorCode) {\n  ServiceWorkerErrorCode[\"UndefinedInstance\"] = \"UndefinedInstance\";\n  ServiceWorkerErrorCode[\"UndefinedRegistration\"] = \"UndefinedRegistration\";\n  ServiceWorkerErrorCode[\"Unavailable\"] = \"Unavailable\";\n})(ServiceWorkerErrorCode || (ServiceWorkerErrorCode = {}));\nconst serviceWorkerErrorMap = {\n  [ServiceWorkerErrorCode.UndefinedInstance]: {\n    message: 'Service Worker instance is undefined.'\n  },\n  [ServiceWorkerErrorCode.UndefinedRegistration]: {\n    message: 'Service Worker registration is undefined.'\n  },\n  [ServiceWorkerErrorCode.Unavailable]: {\n    message: 'Service Worker not available.'\n  }\n};\nconst assert = createAssertionFunction(serviceWorkerErrorMap);\nexport { ServiceWorkerErrorCode, assert };\n", "import { getCrypto } from './globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateRandomString = length => {\n  const STATE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const result = [];\n  const randomNums = new Uint8Array(length);\n  getCrypto().getRandomValues(randomNums);\n  for (const num of randomNums) {\n    result.push(STATE_CHARSET[num % STATE_CHARSET.length]);\n  }\n  return result.join('');\n};\nexport { generateRandomString };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeDecode(hex) {\n  const matchArr = hex.match(/.{2}/g) || [];\n  return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n}\nexport { urlSafeDecode };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeEncode(str) {\n  return str.split('').map(char => char.charCodeAt(0).toString(16).padStart(2, '0')).join('');\n}\nexport { urlSafeEncode };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nconst deDupeAsyncFunction = asyncFunction => {\n  let inflightPromise;\n  return async (...args) => {\n    if (inflightPromise) return inflightPromise;\n    inflightPromise = new Promise((resolve, reject) => {\n      asyncFunction(...args).then(result => {\n        resolve(result);\n      }).catch(error => {\n        reject(error);\n      }).finally(() => {\n        inflightPromise = undefined;\n      });\n    });\n    return inflightPromise;\n  };\n};\nexport { deDupeAsyncFunction };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTokenExpired({\n  expiresAt,\n  clockDrift,\n  tolerance = 5000\n}) {\n  const currentTime = Date.now();\n  return currentTime + clockDrift + tolerance > expiresAt;\n}\nexport { isTokenExpired };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Retrieves the device name using the User-Agent Client Hints API if available,\n * falling back to the traditional userAgent string if not.\n *\n * @returns {Promise<string>} A promise that resolves with a string representing the device name.\n *\n * Example Output:\n * navigator.userAgentData:\n *   'macOS 14.2.1 arm macOS Not A(Brand/99.0.0.0;Google Chrome/121.0.6167.160;Chromium/121.0.6167.160'\n * navigator.userAgent:\n *   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0'\n */\nconst getDeviceName = async () => {\n  const {\n    userAgentData\n  } = navigator;\n  if (!userAgentData) return navigator.userAgent;\n  const {\n    platform = '',\n    platformVersion = '',\n    model = '',\n    architecture = '',\n    fullVersionList = []\n  } = await userAgentData.getHighEntropyValues(['platform', 'platformVersion', 'architecture', 'model', 'fullVersionList']);\n  const versionList = fullVersionList.map(v => `${v.brand}/${v.version}`).join(';');\n  const deviceName = [platform, platformVersion, architecture, model, platform, versionList].filter(value => value).join(' ');\n  return deviceName || navigator.userAgent;\n};\nexport { getDeviceName };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nconst FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n/**\n * This utility is intended to be deprecated and replaced by `signRequest` and `presignUrl` functions from\n * `clients/middleware/signing/signer/signatureV4`.\n *\n * TODO: refactor the logics here into `signRequest` and `presignUrl` functions and remove this class.\n *\n * @internal\n * @deprecated\n */\nconst DateUtils = {\n  /**\n   * Milliseconds to offset the date to compensate for clock skew between device & services\n   */\n  clockOffset: 0,\n  getDateWithClockOffset() {\n    if (DateUtils.clockOffset) {\n      return new Date(new Date().getTime() + DateUtils.clockOffset);\n    } else {\n      return new Date();\n    }\n  },\n  /**\n   * @returns {number} Clock offset in milliseconds\n   */\n  getClockOffset() {\n    return DateUtils.clockOffset;\n  },\n  getHeaderStringFromDate(date = DateUtils.getDateWithClockOffset()) {\n    return date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n  },\n  getDateFromHeaderString(header) {\n    const [, year, month, day, hour, minute, second] = header.match(/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/);\n    return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));\n  },\n  isClockSkewed(serverDate) {\n    // API gateway permits client calls that are off by no more than ±5 minutes\n    return Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS;\n  },\n  isClockSkewError(error) {\n    if (!error.response || !error.response.headers) {\n      return false;\n    }\n    const {\n      headers\n    } = error.response;\n    return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) && (headers.date || headers.Date));\n  },\n  /**\n   * @param {number} offset Clock offset in milliseconds\n   */\n  setClockOffset(offset) {\n    DateUtils.clockOffset = offset;\n  }\n};\nexport { DateUtils };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction bytesToString(input) {\n  return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n}\nexport { bytesToString };\n", "import { getBtoa } from '../../globalHelpers/index.mjs';\nimport { bytesToString } from './bytesToString.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Encoder = {\n  /**\n   * Convert input to base64-encoded string\n   * @param input - string to convert to base64\n   * @param options - encoding options that can optionally produce a base64url string\n   * @returns base64-encoded string\n   */\n  convert(input, options = {\n    urlSafe: false,\n    skipPadding: false\n  }) {\n    const inputStr = typeof input === 'string' ? input : bytesToString(input);\n    let encodedStr = getBtoa()(inputStr);\n    // urlSafe char replacement and skipPadding options conform to the base64url spec\n    // https://datatracker.ietf.org/doc/html/rfc4648#section-5\n    if (options.urlSafe) {\n      encodedStr = encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n    if (options.skipPadding) {\n      encodedStr = encodedStr.replace(/=/g, '');\n    }\n    return encodedStr;\n  }\n};\nexport { base64Encoder };\n", "import { getCrypto } from './globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nfunction cryptoSecureRandomInt() {\n  const crypto = getCrypto();\n  const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n  return randomResult;\n}\nexport { cryptoSecureRandomInt };\n", "import { cryptoSecureRandomInt } from './cryptoSecureRandomInt.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n  // Shortcuts\n  const {\n    words\n  } = wordArray;\n  const {\n    sigBytes\n  } = wordArray;\n  // Convert\n  const hexChars = [];\n  for (let i = 0; i < sigBytes; i++) {\n    const bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n    hexChars.push((bite >>> 4).toString(16));\n    hexChars.push((bite & 0x0f).toString(16));\n  }\n  return hexChars.join('');\n}\nclass WordArray {\n  constructor(words, sigBytes) {\n    this.words = [];\n    let Words = words;\n    Words = this.words = Words || [];\n    if (sigBytes !== undefined) {\n      this.sigBytes = sigBytes;\n    } else {\n      this.sigBytes = Words.length * 4;\n    }\n  }\n  random(nBytes) {\n    const words = [];\n    for (let i = 0; i < nBytes; i += 4) {\n      words.push(cryptoSecureRandomInt());\n    }\n    return new WordArray(words, nBytes);\n  }\n  toString() {\n    return hexStringify(this);\n  }\n}\nexport { WordArray };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthValidationErrorCode;\n(function (AuthValidationErrorCode) {\n  AuthValidationErrorCode[\"EmptySignInUsername\"] = \"EmptySignInUsername\";\n  AuthValidationErrorCode[\"EmptySignInPassword\"] = \"EmptySignInPassword\";\n  AuthValidationErrorCode[\"CustomAuthSignInPassword\"] = \"CustomAuthSignInPassword\";\n  AuthValidationErrorCode[\"EmptySignUpUsername\"] = \"EmptySignUpUsername\";\n  AuthValidationErrorCode[\"EmptySignUpPassword\"] = \"EmptySignUpPassword\";\n  AuthValidationErrorCode[\"EmptyConfirmSignUpUsername\"] = \"EmptyConfirmSignUpUsername\";\n  AuthValidationErrorCode[\"EmptyConfirmSignUpCode\"] = \"EmptyConfirmSignUpCode\";\n  AuthValidationErrorCode[\"EmptyResendSignUpCodeUsername\"] = \"EmptyresendSignUpCodeUsername\";\n  AuthValidationErrorCode[\"EmptyChallengeResponse\"] = \"EmptyChallengeResponse\";\n  AuthValidationErrorCode[\"EmptyConfirmResetPasswordUsername\"] = \"EmptyConfirmResetPasswordUsername\";\n  AuthValidationErrorCode[\"EmptyConfirmResetPasswordNewPassword\"] = \"EmptyConfirmResetPasswordNewPassword\";\n  AuthValidationErrorCode[\"EmptyConfirmResetPasswordConfirmationCode\"] = \"EmptyConfirmResetPasswordConfirmationCode\";\n  AuthValidationErrorCode[\"EmptyResetPasswordUsername\"] = \"EmptyResetPasswordUsername\";\n  AuthValidationErrorCode[\"EmptyVerifyTOTPSetupCode\"] = \"EmptyVerifyTOTPSetupCode\";\n  AuthValidationErrorCode[\"EmptyConfirmUserAttributeCode\"] = \"EmptyConfirmUserAttributeCode\";\n  AuthValidationErrorCode[\"IncorrectMFAMethod\"] = \"IncorrectMFAMethod\";\n  AuthValidationErrorCode[\"EmptyUpdatePassword\"] = \"EmptyUpdatePassword\";\n})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\nexport { AuthValidationErrorCode };\n", "import { AuthValidationErrorCode } from '../errors/types/validation.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst validationErrorMap = {\n  [AuthValidationErrorCode.EmptyChallengeResponse]: {\n    message: 'challengeResponse is required to confirmSignIn'\n  },\n  [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n    message: 'username is required to confirmResetPassword'\n  },\n  [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n    message: 'code is required to confirmSignUp'\n  },\n  [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n    message: 'username is required to confirmSignUp'\n  },\n  [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n    message: 'confirmationCode is required to confirmResetPassword'\n  },\n  [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n    message: 'newPassword is required to confirmResetPassword'\n  },\n  [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n    message: 'username is required to confirmSignUp'\n  },\n  [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n    message: 'username is required to resetPassword'\n  },\n  [AuthValidationErrorCode.EmptySignInPassword]: {\n    message: 'password is required to signIn'\n  },\n  [AuthValidationErrorCode.EmptySignInUsername]: {\n    message: 'username is required to signIn'\n  },\n  [AuthValidationErrorCode.EmptySignUpPassword]: {\n    message: 'password is required to signUp'\n  },\n  [AuthValidationErrorCode.EmptySignUpUsername]: {\n    message: 'username is required to signUp'\n  },\n  [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n    message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n    recoverySuggestion: 'Do not include a password in your signIn call.'\n  },\n  [AuthValidationErrorCode.IncorrectMFAMethod]: {\n    message: 'Incorrect MFA method was chosen. It should be either SMS, TOTP, or EMAIL',\n    recoverySuggestion: 'Try to pass SMS, TOTP, or EMAIL as the challengeResponse'\n  },\n  [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n    message: 'code is required to verifyTotpSetup'\n  },\n  [AuthValidationErrorCode.EmptyUpdatePassword]: {\n    message: 'oldPassword and newPassword are required to changePassword'\n  },\n  [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n    message: 'confirmation code is required to confirmUserAttribute'\n  }\n};\n// TODO: delete this code when the Auth class is removed.\nvar AuthErrorStrings;\n(function (AuthErrorStrings) {\n  AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n  AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n  AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n  AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n  AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n  AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n  AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n  AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n  AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n  AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n  AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n  AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n  AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n  AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n  AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n  AuthErrorStrings[\"OAUTH_ERROR\"] = \"Couldn't finish OAuth flow, check your User Pool HostedUI settings\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\nvar AuthErrorCodes;\n(function (AuthErrorCodes) {\n  AuthErrorCodes[\"SignInException\"] = \"SignInException\";\n  AuthErrorCodes[\"OAuthSignInError\"] = \"OAuthSignInException\";\n})(AuthErrorCodes || (AuthErrorCodes = {}));\nexport { AuthErrorCodes, AuthErrorStrings, validationErrorMap };\n", "import { AmplifyError } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AuthError extends AmplifyError {\n  constructor(params) {\n    super(params);\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    this.constructor = AuthError;\n    Object.setPrototypeOf(this, AuthError.prototype);\n  }\n}\nexport { AuthError };\n", "import { AuthError } from './AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nconst USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nconst DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nconst AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nconst INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nconst INVALID_APP_SCHEME_EXCEPTION = 'InvalidAppSchemeException';\nconst INVALID_PREFERRED_REDIRECT_EXCEPTION = 'InvalidPreferredRedirectUrlException';\nconst invalidRedirectException = new AuthError({\n  name: INVALID_REDIRECT_EXCEPTION,\n  message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n  recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.'\n});\nconst invalidAppSchemeException = new AuthError({\n  name: INVALID_APP_SCHEME_EXCEPTION,\n  message: 'A valid non-http app scheme was not found in the config.',\n  recoverySuggestion: 'Please make sure a valid custom app scheme is present in the config.'\n});\nconst invalidPreferredRedirectUrlException = new AuthError({\n  name: INVALID_PREFERRED_REDIRECT_EXCEPTION,\n  message: 'The given preferredRedirectUrl does not match any items in the redirectSignOutUrls array from the config.',\n  recoverySuggestion: 'Please make sure a matching preferredRedirectUrl is provided.'\n});\nconst INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nconst invalidOriginException = new AuthError({\n  name: INVALID_ORIGIN_EXCEPTION,\n  message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n  recoverySuggestion: 'Please call signInWithRedirect from the same origin.'\n});\nconst OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nconst TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nconst UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\nexport { AUTO_SIGN_IN_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION, INVALID_APP_SCHEME_EXCEPTION, INVALID_ORIGIN_EXCEPTION, INVALID_PREFERRED_REDIRECT_EXCEPTION, INVALID_REDIRECT_EXCEPTION, OAUTH_SIGNOUT_EXCEPTION, TOKEN_REFRESH_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_ALREADY_AUTHENTICATED_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, invalidAppSchemeException, invalidOriginException, invalidPreferredRedirectUrlException, invalidRedirectException };\n", "import { AuthError } from '../../../errors/AuthError.mjs';\nimport { TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTypeUserPoolConfig(authConfig) {\n  if (authConfig && authConfig.Cognito.userPoolId && authConfig.Cognito.userPoolClientId) {\n    return true;\n  }\n  return false;\n}\nfunction assertAuthTokens(tokens) {\n  if (!tokens || !tokens.accessToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nfunction assertIdTokenInAuthTokens(tokens) {\n  if (!tokens || !tokens.idToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nconst oAuthTokenRefreshException = new AuthError({\n  name: TOKEN_REFRESH_EXCEPTION,\n  message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n  recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`\n});\nconst tokenRefreshException = new AuthError({\n  name: USER_UNAUTHENTICATED_EXCEPTION,\n  message: 'User needs to be authenticated to call this API.',\n  recoverySuggestion: 'Sign in before calling this API again.'\n});\nfunction assertAuthTokensWithRefreshToken(tokens) {\n  if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n    throw oAuthTokenRefreshException;\n  }\n  if (!isAuthenticatedWithRefreshToken(tokens)) {\n    throw tokenRefreshException;\n  }\n}\nfunction assertDeviceMetadata(deviceMetadata) {\n  if (!deviceMetadata || !deviceMetadata.deviceKey || !deviceMetadata.deviceGroupKey || !deviceMetadata.randomPassword) {\n    throw new AuthError({\n      name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n      message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n      recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.'\n    });\n  }\n}\nconst OAuthStorageKeys = {\n  inflightOAuth: 'inflightOAuth',\n  oauthSignIn: 'oauthSignIn',\n  oauthPKCE: 'oauthPKCE',\n  oauthState: 'oauthState'\n};\nfunction isAuthenticated(tokens) {\n  return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n  return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n  return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\nexport { OAuthStorageKeys, assertAuthTokens, assertAuthTokensWithRefreshToken, assertDeviceMetadata, assertIdTokenInAuthTokens, isTypeUserPoolConfig, oAuthTokenRefreshException, tokenRefreshException };\n", "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCurrentUser = async amplify => {\n  const authConfig = amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const tokens = await amplify.Auth.getTokens({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const {\n    'cognito:username': username,\n    sub\n  } = tokens.idToken?.payload ?? {};\n  const authUser = {\n    username: username,\n    userId: sub\n  };\n  const signInDetails = getSignInDetailsFromTokens(tokens);\n  if (signInDetails) {\n    authUser.signInDetails = signInDetails;\n  }\n  return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n  return tokens?.signInDetails;\n}\nexport { getCurrentUser };\n", "import { Amplify } from '@aws-amplify/core';\nimport { getCurrentUser as getCurrentUser$1 } from './internal/getCurrentUser.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Gets the current user from the idToken.\n *\n * @param input -  The GetCurrentUserInput object.\n * @returns GetCurrentUserOutput\n * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst getCurrentUser = async () => {\n  return getCurrentUser$1(Amplify);\n};\nexport { getCurrentUser };\n", "import { AuthError } from '../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getRegionFromUserPoolId(userPoolId) {\n  const region = userPoolId?.split('_')[0];\n  if (!userPoolId || userPoolId.indexOf('_') < 0 || !region || typeof region !== 'string') throw new AuthError({\n    name: 'InvalidUserPoolId',\n    message: 'Invalid user pool id provided.'\n  });\n  return region;\n}\nfunction getRegionFromIdentityPoolId(identityPoolId) {\n  if (!identityPoolId || !identityPoolId.includes(':')) {\n    throw new AuthError({\n      name: 'InvalidIdentityPoolIdException',\n      message: 'Invalid identity pool id provided.',\n      recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.'\n    });\n  }\n  return identityPoolId.split(':')[0];\n}\nexport { getRegionFromIdentityPoolId, getRegionFromUserPoolId };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUserPoolSerializer = operation => (input, endpoint) => {\n  const headers = getSharedHeaders(operation);\n  const body = JSON.stringify(input);\n  return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getSharedHeaders = operation => ({\n  'content-type': 'application/x-amz-json-1.1',\n  'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`\n});\nconst buildHttpRpcRequest = ({\n  url\n}, headers, body) => ({\n  headers,\n  url,\n  body,\n  method: 'POST'\n});\nexport { createUserPoolSerializer };\n", "import { AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertServiceError(error) {\n  if (!error || error.name === 'Error' || error instanceof TypeError) {\n    throw new AuthError({\n      name: AmplifyErrorCode.Unknown,\n      message: 'An unknown error has occurred.',\n      underlyingError: error\n    });\n  }\n}\nexport { assertServiceError };\n", "import { parseJsonError, parseJsonBody } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUserPoolDeserializer = () => async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseJsonError(response);\n    assertServiceError(error);\n    throw new AuthError({\n      name: error.name,\n      message: error.message,\n      metadata: error.$metadata\n    });\n  }\n  return parseJsonBody(response);\n};\nexport { createUserPoolDeserializer };\n", "import { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { unauthenticatedHandler } from '@aws-amplify/core/internals/aws-client-utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n  request.headers['cache-control'] = 'no-store';\n  return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\nexport { cognitoUserPoolTransferHandler };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst COGNITO_IDP_SERVICE_NAME = 'cognito-idp';\nexport { COGNITO_IDP_SERVICE_NAME };\n", "import { getRetryDecider, parseJsonError, jitteredBackoff } from '@aws-amplify/core/internals/aws-client-utils';\nimport { getAmplifyUserAgent } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from '../../../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_SERVICE_CLIENT_API_CONFIG = {\n  service: COGNITO_IDP_SERVICE_NAME,\n  retryDecider: getRetryDecider(parseJsonError),\n  computeDelay: jitteredBackoff,\n  userAgentValue: getAmplifyUserAgent(),\n  cache: 'no-store'\n};\nexport { DEFAULT_SERVICE_CLIENT_API_CONFIG };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createInitiateAuthClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('InitiateAuth'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createInitiateAuthClient };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AssociateSoftwareTokenException;\n(function (AssociateSoftwareTokenException) {\n  AssociateSoftwareTokenException[\"ConcurrentModificationException\"] = \"ConcurrentModificationException\";\n  AssociateSoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n  AssociateSoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n  AssociateSoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  AssociateSoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  AssociateSoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  AssociateSoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n})(AssociateSoftwareTokenException || (AssociateSoftwareTokenException = {}));\nvar ChangePasswordException;\n(function (ChangePasswordException) {\n  ChangePasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n  ChangePasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n  ChangePasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  ChangePasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n  ChangePasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n  ChangePasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  ChangePasswordException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  ChangePasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  ChangePasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  ChangePasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  ChangePasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ChangePasswordException || (ChangePasswordException = {}));\nvar ConfirmDeviceException;\n(function (ConfirmDeviceException) {\n  ConfirmDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n  ConfirmDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n  ConfirmDeviceException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  ConfirmDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  ConfirmDeviceException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n  ConfirmDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n  ConfirmDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  ConfirmDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  ConfirmDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  ConfirmDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  ConfirmDeviceException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n  ConfirmDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  ConfirmDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmDeviceException || (ConfirmDeviceException = {}));\nvar ConfirmForgotPasswordException;\n(function (ConfirmForgotPasswordException) {\n  ConfirmForgotPasswordException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n  ConfirmForgotPasswordException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n  ConfirmForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n  ConfirmForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n  ConfirmForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  ConfirmForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  ConfirmForgotPasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n  ConfirmForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n  ConfirmForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  ConfirmForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  ConfirmForgotPasswordException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n  ConfirmForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  ConfirmForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  ConfirmForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  ConfirmForgotPasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  ConfirmForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmForgotPasswordException || (ConfirmForgotPasswordException = {}));\nvar ConfirmSignUpException;\n(function (ConfirmSignUpException) {\n  ConfirmSignUpException[\"AliasExistsException\"] = \"AliasExistsException\";\n  ConfirmSignUpException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n  ConfirmSignUpException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n  ConfirmSignUpException[\"ForbiddenException\"] = \"ForbiddenException\";\n  ConfirmSignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n  ConfirmSignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  ConfirmSignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  ConfirmSignUpException[\"LimitExceededException\"] = \"LimitExceededException\";\n  ConfirmSignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  ConfirmSignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  ConfirmSignUpException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n  ConfirmSignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  ConfirmSignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  ConfirmSignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  ConfirmSignUpException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmSignUpException || (ConfirmSignUpException = {}));\nvar DeleteUserAttributesException;\n(function (DeleteUserAttributesException) {\n  DeleteUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n  DeleteUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n  DeleteUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  DeleteUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  DeleteUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  DeleteUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  DeleteUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  DeleteUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  DeleteUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserAttributesException || (DeleteUserAttributesException = {}));\nvar DeleteUserException;\n(function (DeleteUserException) {\n  DeleteUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n  DeleteUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n  DeleteUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  DeleteUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  DeleteUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  DeleteUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  DeleteUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  DeleteUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  DeleteUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserException || (DeleteUserException = {}));\nvar ForgetDeviceException;\n(function (ForgetDeviceException) {\n  ForgetDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n  ForgetDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n  ForgetDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  ForgetDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n  ForgetDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  ForgetDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  ForgetDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  ForgetDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  ForgetDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  ForgetDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgetDeviceException || (ForgetDeviceException = {}));\nvar ForgotPasswordException;\n(function (ForgotPasswordException) {\n  ForgotPasswordException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n  ForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n  ForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n  ForgotPasswordException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n  ForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  ForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  ForgotPasswordException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n  ForgotPasswordException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n  ForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n  ForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  ForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  ForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  ForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  ForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  ForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgotPasswordException || (ForgotPasswordException = {}));\nvar GetUserException;\n(function (GetUserException) {\n  GetUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n  GetUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n  GetUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  GetUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  GetUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  GetUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  GetUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  GetUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  GetUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserException || (GetUserException = {}));\nvar GetIdException;\n(function (GetIdException) {\n  GetIdException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n  GetIdException[\"InternalErrorException\"] = \"InternalErrorException\";\n  GetIdException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  GetIdException[\"LimitExceededException\"] = \"LimitExceededException\";\n  GetIdException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  GetIdException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n  GetIdException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  GetIdException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetIdException || (GetIdException = {}));\nvar GetCredentialsForIdentityException;\n(function (GetCredentialsForIdentityException) {\n  GetCredentialsForIdentityException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n  GetCredentialsForIdentityException[\"InternalErrorException\"] = \"InternalErrorException\";\n  GetCredentialsForIdentityException[\"InvalidIdentityPoolConfigurationException\"] = \"InvalidIdentityPoolConfigurationException\";\n  GetCredentialsForIdentityException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  GetCredentialsForIdentityException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  GetCredentialsForIdentityException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n  GetCredentialsForIdentityException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  GetCredentialsForIdentityException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetCredentialsForIdentityException || (GetCredentialsForIdentityException = {}));\nvar GetUserAttributeVerificationException;\n(function (GetUserAttributeVerificationException) {\n  GetUserAttributeVerificationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n  GetUserAttributeVerificationException[\"ForbiddenException\"] = \"ForbiddenException\";\n  GetUserAttributeVerificationException[\"InternalErrorException\"] = \"InternalErrorException\";\n  GetUserAttributeVerificationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n  GetUserAttributeVerificationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  GetUserAttributeVerificationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  GetUserAttributeVerificationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n  GetUserAttributeVerificationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n  GetUserAttributeVerificationException[\"LimitExceededException\"] = \"LimitExceededException\";\n  GetUserAttributeVerificationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  GetUserAttributeVerificationException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  GetUserAttributeVerificationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  GetUserAttributeVerificationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  GetUserAttributeVerificationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  GetUserAttributeVerificationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  GetUserAttributeVerificationException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  GetUserAttributeVerificationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserAttributeVerificationException || (GetUserAttributeVerificationException = {}));\nvar GlobalSignOutException;\n(function (GlobalSignOutException) {\n  GlobalSignOutException[\"ForbiddenException\"] = \"ForbiddenException\";\n  GlobalSignOutException[\"InternalErrorException\"] = \"InternalErrorException\";\n  GlobalSignOutException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  GlobalSignOutException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  GlobalSignOutException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  GlobalSignOutException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  GlobalSignOutException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  GlobalSignOutException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n})(GlobalSignOutException || (GlobalSignOutException = {}));\nvar InitiateAuthException;\n(function (InitiateAuthException) {\n  InitiateAuthException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  InitiateAuthException[\"ForbiddenException\"] = \"ForbiddenException\";\n  InitiateAuthException[\"InternalErrorException\"] = \"InternalErrorException\";\n  InitiateAuthException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  InitiateAuthException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  InitiateAuthException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n  InitiateAuthException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n  InitiateAuthException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n  InitiateAuthException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  InitiateAuthException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  InitiateAuthException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  InitiateAuthException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  InitiateAuthException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  InitiateAuthException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  InitiateAuthException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(InitiateAuthException || (InitiateAuthException = {}));\nvar ResendConfirmationException;\n(function (ResendConfirmationException) {\n  ResendConfirmationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n  ResendConfirmationException[\"ForbiddenException\"] = \"ForbiddenException\";\n  ResendConfirmationException[\"InternalErrorException\"] = \"InternalErrorException\";\n  ResendConfirmationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n  ResendConfirmationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  ResendConfirmationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  ResendConfirmationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n  ResendConfirmationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n  ResendConfirmationException[\"LimitExceededException\"] = \"LimitExceededException\";\n  ResendConfirmationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  ResendConfirmationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  ResendConfirmationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  ResendConfirmationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  ResendConfirmationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  ResendConfirmationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ResendConfirmationException || (ResendConfirmationException = {}));\nvar RespondToAuthChallengeException;\n(function (RespondToAuthChallengeException) {\n  RespondToAuthChallengeException[\"AliasExistsException\"] = \"AliasExistsException\";\n  RespondToAuthChallengeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n  RespondToAuthChallengeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n  RespondToAuthChallengeException[\"ForbiddenException\"] = \"ForbiddenException\";\n  RespondToAuthChallengeException[\"InternalErrorException\"] = \"InternalErrorException\";\n  RespondToAuthChallengeException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  RespondToAuthChallengeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  RespondToAuthChallengeException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n  RespondToAuthChallengeException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n  RespondToAuthChallengeException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n  RespondToAuthChallengeException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n  RespondToAuthChallengeException[\"MFAMethodNotFoundException\"] = \"MFAMethodNotFoundException\";\n  RespondToAuthChallengeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  RespondToAuthChallengeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  RespondToAuthChallengeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  RespondToAuthChallengeException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n  RespondToAuthChallengeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  RespondToAuthChallengeException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  RespondToAuthChallengeException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  RespondToAuthChallengeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  RespondToAuthChallengeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(RespondToAuthChallengeException || (RespondToAuthChallengeException = {}));\nvar SetUserMFAPreferenceException;\n(function (SetUserMFAPreferenceException) {\n  SetUserMFAPreferenceException[\"ForbiddenException\"] = \"ForbiddenException\";\n  SetUserMFAPreferenceException[\"InternalErrorException\"] = \"InternalErrorException\";\n  SetUserMFAPreferenceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  SetUserMFAPreferenceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  SetUserMFAPreferenceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  SetUserMFAPreferenceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  SetUserMFAPreferenceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  SetUserMFAPreferenceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(SetUserMFAPreferenceException || (SetUserMFAPreferenceException = {}));\nvar SignUpException;\n(function (SignUpException) {\n  SignUpException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n  SignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n  SignUpException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n  SignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  SignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  SignUpException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n  SignUpException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n  SignUpException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n  SignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  SignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  SignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  SignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  SignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  SignUpException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n})(SignUpException || (SignUpException = {}));\nvar UpdateUserAttributesException;\n(function (UpdateUserAttributesException) {\n  UpdateUserAttributesException[\"AliasExistsException\"] = \"AliasExistsException\";\n  UpdateUserAttributesException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n  UpdateUserAttributesException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n  UpdateUserAttributesException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n  UpdateUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n  UpdateUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n  UpdateUserAttributesException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n  UpdateUserAttributesException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n  UpdateUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  UpdateUserAttributesException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n  UpdateUserAttributesException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n  UpdateUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  UpdateUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  UpdateUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  UpdateUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  UpdateUserAttributesException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n  UpdateUserAttributesException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n  UpdateUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  UpdateUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateUserAttributesException || (UpdateUserAttributesException = {}));\nvar VerifySoftwareTokenException;\n(function (VerifySoftwareTokenException) {\n  VerifySoftwareTokenException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n  VerifySoftwareTokenException[\"EnableSoftwareTokenMFAException\"] = \"EnableSoftwareTokenMFAException\";\n  VerifySoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n  VerifySoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n  VerifySoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  VerifySoftwareTokenException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n  VerifySoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  VerifySoftwareTokenException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  VerifySoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  VerifySoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n  VerifySoftwareTokenException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  VerifySoftwareTokenException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  VerifySoftwareTokenException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifySoftwareTokenException || (VerifySoftwareTokenException = {}));\nvar VerifyUserAttributeException;\n(function (VerifyUserAttributeException) {\n  VerifyUserAttributeException[\"AliasExistsException\"] = \"AliasExistsException\";\n  VerifyUserAttributeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n  VerifyUserAttributeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n  VerifyUserAttributeException[\"ForbiddenException\"] = \"ForbiddenException\";\n  VerifyUserAttributeException[\"InternalErrorException\"] = \"InternalErrorException\";\n  VerifyUserAttributeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  VerifyUserAttributeException[\"LimitExceededException\"] = \"LimitExceededException\";\n  VerifyUserAttributeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  VerifyUserAttributeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  VerifyUserAttributeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  VerifyUserAttributeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  VerifyUserAttributeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  VerifyUserAttributeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifyUserAttributeException || (VerifyUserAttributeException = {}));\nvar UpdateDeviceStatusException;\n(function (UpdateDeviceStatusException) {\n  UpdateDeviceStatusException[\"ForbiddenException\"] = \"ForbiddenException\";\n  UpdateDeviceStatusException[\"InternalErrorException\"] = \"InternalErrorException\";\n  UpdateDeviceStatusException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  UpdateDeviceStatusException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n  UpdateDeviceStatusException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  UpdateDeviceStatusException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  UpdateDeviceStatusException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  UpdateDeviceStatusException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  UpdateDeviceStatusException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  UpdateDeviceStatusException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateDeviceStatusException || (UpdateDeviceStatusException = {}));\nvar ListDevicesException;\n(function (ListDevicesException) {\n  ListDevicesException[\"ForbiddenException\"] = \"ForbiddenException\";\n  ListDevicesException[\"InternalErrorException\"] = \"InternalErrorException\";\n  ListDevicesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n  ListDevicesException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n  ListDevicesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n  ListDevicesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n  ListDevicesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n  ListDevicesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n  ListDevicesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n  ListDevicesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ListDevicesException || (ListDevicesException = {}));\nconst SETUP_TOTP_EXCEPTION = 'SetUpTOTPException';\nexport { AssociateSoftwareTokenException, ChangePasswordException, ConfirmDeviceException, ConfirmForgotPasswordException, ConfirmSignUpException, DeleteUserAttributesException, DeleteUserException, ForgetDeviceException, ForgotPasswordException, GetCredentialsForIdentityException, GetIdException, GetUserAttributeVerificationException, GetUserException, GlobalSignOutException, InitiateAuthException, ListDevicesException, ResendConfirmationException, RespondToAuthChallengeException, SETUP_TOTP_EXCEPTION, SetUserMFAPreferenceException, SignUpException, UpdateDeviceStatusException, UpdateUserAttributesException, VerifySoftwareTokenException, VerifyUserAttributeException };\n", "import { getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst cognitoUserPoolEndpointResolver = ({\n  region\n}) => ({\n  url: new AmplifyUrl(`https://${COGNITO_IDP_SERVICE_NAME}.${region}.${getDnsSuffix(region)}`)\n});\nexport { cognitoUserPoolEndpointResolver };\n", "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolEndpointResolver } from '../../../foundation/cognitoUserPoolEndpointResolver.mjs';\nconst createCognitoUserPoolEndpointResolver = ({\n  endpointOverride\n}) => input => {\n  if (endpointOverride) {\n    return {\n      url: new AmplifyUrl(endpointOverride)\n    };\n  }\n  return cognitoUserPoolEndpointResolver(input);\n};\nexport { createCognitoUserPoolEndpointResolver };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getUserContextData({\n  username,\n  userPoolId,\n  userPoolClientId\n}) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  const amazonCognitoAdvancedSecurityData = window.AmazonCognitoAdvancedSecurityData;\n  if (typeof amazonCognitoAdvancedSecurityData === 'undefined') {\n    return undefined;\n  }\n  const advancedSecurityData = amazonCognitoAdvancedSecurityData.getData(username, userPoolId, userPoolClientId);\n  if (advancedSecurityData) {\n    const userContextData = {\n      EncodedData: advancedSecurityData\n    };\n    return userContextData;\n  }\n  return {};\n}\nexport { getUserContextData };\n", "import { deDupeAsyncFunction, assertTokenProviderConfig, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokensWithRefreshToken } from './types.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getUserContextData } from './userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst refreshAuthTokensFunction = async ({\n  tokens,\n  authConfig,\n  username\n}) => {\n  assertTokenProviderConfig(authConfig?.Cognito);\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = authConfig.Cognito;\n  const region = getRegionFromUserPoolId(userPoolId);\n  assertAuthTokensWithRefreshToken(tokens);\n  const refreshTokenString = tokens.refreshToken;\n  const AuthParameters = {\n    REFRESH_TOKEN: refreshTokenString\n  };\n  if (tokens.deviceMetadata?.deviceKey) {\n    AuthParameters.DEVICE_KEY = tokens.deviceMetadata.deviceKey;\n  }\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const initiateAuth = createInitiateAuthClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    AuthenticationResult\n  } = await initiateAuth({\n    region\n  }, {\n    ClientId: userPoolClientId,\n    AuthFlow: 'REFRESH_TOKEN_AUTH',\n    AuthParameters,\n    UserContextData\n  });\n  const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n  const idToken = AuthenticationResult?.IdToken ? decodeJWT(AuthenticationResult.IdToken) : undefined;\n  const {\n    iat\n  } = accessToken.payload;\n  // This should never happen. If it does, it's a bug from the service.\n  if (!iat) {\n    throw new AuthError({\n      name: 'iatNotFoundException',\n      message: 'iat not found in access token'\n    });\n  }\n  const clockDrift = iat * 1000 - new Date().getTime();\n  return {\n    accessToken,\n    idToken,\n    clockDrift,\n    refreshToken: refreshTokenString,\n    username\n  };\n};\nconst refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nconst refreshAuthTokensWithoutDedupe = refreshAuthTokensFunction;\nexport { refreshAuthTokens, refreshAuthTokensWithoutDedupe };\n", "import { createAssertionFunction } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n  TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n  [TokenProviderErrorCode.InvalidAuthTokens]: {\n    message: 'Invalid tokens.',\n    recoverySuggestion: 'Make sure the tokens are valid.'\n  }\n};\nconst assert = createAssertionFunction(tokenValidationErrorMap);\nexport { TokenProviderErrorCode, assert };\n", "const AuthTokenStorageKeys = {\n  accessToken: 'accessToken',\n  idToken: 'idToken',\n  oidcProvider: 'oidcProvider',\n  clockDrift: 'clockDrift',\n  refreshToken: 'refreshToken',\n  deviceKey: 'deviceKey',\n  randomPasswordKey: 'randomPasswordKey',\n  deviceGroupKey: 'deviceGroupKey',\n  signInDetails: 'signInDetails',\n  oauthMetadata: 'oauthMetadata'\n};\nexport { AuthTokenStorageKeys };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AUTH_KEY_PREFIX = 'CognitoIdentityServiceProvider';\nexport { AUTH_KEY_PREFIX };\n", "import { decodeJWT, assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { AuthTokenStorageKeys } from './types.mjs';\nimport { assert, TokenProviderErrorCode } from './errorHelpers.mjs';\nimport { AUTH_KEY_PREFIX } from './constants.mjs';\nclass DefaultTokenStore {\n  getKeyValueStorage() {\n    if (!this.keyValueStorage) {\n      throw new AuthError({\n        name: 'KeyValueStorageNotFoundException',\n        message: 'KeyValueStorage was not found in TokenStore'\n      });\n    }\n    return this.keyValueStorage;\n  }\n  setKeyValueStorage(keyValueStorage) {\n    this.keyValueStorage = keyValueStorage;\n  }\n  setAuthConfig(authConfig) {\n    this.authConfig = authConfig;\n  }\n  async loadTokens() {\n    // TODO(v6): migration logic should be here\n    // Reading V5 tokens old format\n    try {\n      const authKeys = await this.getAuthKeys();\n      const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n      if (!accessTokenString) {\n        throw new AuthError({\n          name: 'NoSessionFoundException',\n          message: 'Auth session was not found. Make sure to call signIn.'\n        });\n      }\n      const accessToken = decodeJWT(accessTokenString);\n      const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n      const idToken = itString ? decodeJWT(itString) : undefined;\n      const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ?? undefined;\n      const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n      const clockDrift = Number.parseInt(clockDriftString);\n      const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n      const tokens = {\n        accessToken,\n        idToken,\n        refreshToken,\n        deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n        clockDrift,\n        username: await this.getLastAuthUser()\n      };\n      if (signInDetails) {\n        tokens.signInDetails = JSON.parse(signInDetails);\n      }\n      return tokens;\n    } catch (err) {\n      return null;\n    }\n  }\n  async storeTokens(tokens) {\n    assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n    const lastAuthUser = tokens.username;\n    await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n    const authKeys = await this.getAuthKeys();\n    await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n    if (tokens.idToken) {\n      await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n    } else {\n      await this.getKeyValueStorage().removeItem(authKeys.idToken);\n    }\n    if (tokens.refreshToken) {\n      await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n    } else {\n      await this.getKeyValueStorage().removeItem(authKeys.refreshToken);\n    }\n    if (tokens.deviceMetadata) {\n      if (tokens.deviceMetadata.deviceKey) {\n        await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n      }\n      if (tokens.deviceMetadata.deviceGroupKey) {\n        await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n      }\n      await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n    }\n    if (tokens.signInDetails) {\n      await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n    } else {\n      await this.getKeyValueStorage().removeItem(authKeys.signInDetails);\n    }\n    await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n  }\n  async clearTokens() {\n    const authKeys = await this.getAuthKeys();\n    // Not calling clear because it can remove data that is not managed by AuthTokenStore\n    await Promise.all([this.getKeyValueStorage().removeItem(authKeys.accessToken), this.getKeyValueStorage().removeItem(authKeys.idToken), this.getKeyValueStorage().removeItem(authKeys.clockDrift), this.getKeyValueStorage().removeItem(authKeys.refreshToken), this.getKeyValueStorage().removeItem(authKeys.signInDetails), this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()), this.getKeyValueStorage().removeItem(authKeys.oauthMetadata)]);\n  }\n  async getDeviceMetadata(username) {\n    const authKeys = await this.getAuthKeys(username);\n    const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n    const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n    const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n    return randomPassword && deviceGroupKey && deviceKey ? {\n      deviceKey,\n      deviceGroupKey,\n      randomPassword\n    } : null;\n  }\n  async clearDeviceMetadata(username) {\n    const authKeys = await this.getAuthKeys(username);\n    await Promise.all([this.getKeyValueStorage().removeItem(authKeys.deviceKey), this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey), this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey)]);\n  }\n  async getAuthKeys(username) {\n    assertTokenProviderConfig(this.authConfig?.Cognito);\n    const lastAuthUser = username ?? (await this.getLastAuthUser());\n    return createKeysForAuthStorage(AUTH_KEY_PREFIX, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n  }\n  getLastAuthUserKey() {\n    assertTokenProviderConfig(this.authConfig?.Cognito);\n    const identifier = this.authConfig.Cognito.userPoolClientId;\n    return `${AUTH_KEY_PREFIX}.${identifier}.LastAuthUser`;\n  }\n  async getLastAuthUser() {\n    const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ?? 'username';\n    return lastAuthUser;\n  }\n  async setOAuthMetadata(metadata) {\n    const {\n      oauthMetadata: oauthMetadataKey\n    } = await this.getAuthKeys();\n    await this.getKeyValueStorage().setItem(oauthMetadataKey, JSON.stringify(metadata));\n  }\n  async getOAuthMetadata() {\n    const {\n      oauthMetadata: oauthMetadataKey\n    } = await this.getAuthKeys();\n    const oauthMetadata = await this.getKeyValueStorage().getItem(oauthMetadataKey);\n    return oauthMetadata && JSON.parse(oauthMetadata);\n  }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n  return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nfunction getAuthStorageKeys(authKeys) {\n  const keys = Object.values({\n    ...authKeys\n  });\n  return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n    ...acc,\n    [authKey]: `${prefix}.${identifier}.${authKey}`\n  }), {});\n}\nexport { DefaultTokenStore, createKeysForAuthStorage, getAuthStorageKeys };\n", "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\nimport { OAuthStorageKeys } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nclass DefaultOAuthStore {\n  constructor(keyValueStorage) {\n    this.keyValueStorage = keyValueStorage;\n  }\n  async clearOAuthInflightData() {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    await Promise.all([this.keyValueStorage.removeItem(authKeys.inflightOAuth), this.keyValueStorage.removeItem(authKeys.oauthPKCE), this.keyValueStorage.removeItem(authKeys.oauthState)]);\n  }\n  async clearOAuthData() {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    await this.clearOAuthInflightData();\n    await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n    return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n  }\n  loadOAuthState() {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    return this.keyValueStorage.getItem(authKeys.oauthState);\n  }\n  storeOAuthState(state) {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    return this.keyValueStorage.setItem(authKeys.oauthState, state);\n  }\n  loadPKCE() {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n  }\n  storePKCE(pkce) {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n  }\n  setAuthConfig(authConfigParam) {\n    this.cognitoConfig = authConfigParam;\n  }\n  async loadOAuthInFlight() {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    return (await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true';\n  }\n  async storeOAuthInFlight(inflight) {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n  }\n  async loadOAuthSignIn() {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n    const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ?? [];\n    return {\n      isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n      preferPrivateSession: preferPrivateSession === 'true'\n    };\n  }\n  async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n    assertTokenProviderConfig(this.cognitoConfig);\n    const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n    await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n  }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n  return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\nexport { DefaultOAuthStore };\n", "import { defaultStorage } from '@aws-amplify/core';\nimport { DefaultOAuthStore } from '../signInWithRedirectStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst oAuthStore = new DefaultOAuthStore(defaultStorage);\nexport { oAuthStore };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst inflightPromises = [];\nconst addInflightPromise = resolver => {\n  inflightPromises.push(resolver);\n};\nconst resolveAndClearInflightPromises = () => {\n  while (inflightPromises.length) {\n    inflightPromises.pop()?.();\n  }\n};\nexport { addInflightPromise, resolveAndClearInflightPromises };\n", "import { Hub } from '@aws-amplify/core';\nimport { isBrowser, assertTokenProviderConfig, isTokenExpired, AMPLIFY_SYMBOL, AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { oAuthStore } from '../utils/oauth/oAuthStore.mjs';\nimport { addInflightPromise } from '../utils/oauth/inflightPromise.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass TokenOrchestrator {\n  constructor() {\n    this.waitForInflightOAuth = isBrowser() ? async () => {\n      if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n      }\n      if (this.inflightPromise) {\n        return this.inflightPromise;\n      }\n      // when there is valid oauth config and there is an inflight oauth flow, try\n      // to block async calls that require fetching tokens before the oauth flow completes\n      // e.g. getCurrentUser, fetchAuthSession etc.\n      this.inflightPromise = new Promise((resolve, _reject) => {\n        addInflightPromise(resolve);\n      });\n      return this.inflightPromise;\n    } : async () => {\n      // no-op for non-browser environments\n    };\n  }\n  setAuthConfig(authConfig) {\n    oAuthStore.setAuthConfig(authConfig.Cognito);\n    this.authConfig = authConfig;\n  }\n  setTokenRefresher(tokenRefresher) {\n    this.tokenRefresher = tokenRefresher;\n  }\n  setAuthTokenStore(tokenStore) {\n    this.tokenStore = tokenStore;\n  }\n  getTokenStore() {\n    if (!this.tokenStore) {\n      throw new AuthError({\n        name: 'EmptyTokenStoreException',\n        message: 'TokenStore not set'\n      });\n    }\n    return this.tokenStore;\n  }\n  getTokenRefresher() {\n    if (!this.tokenRefresher) {\n      throw new AuthError({\n        name: 'EmptyTokenRefresherException',\n        message: 'TokenRefresher not set'\n      });\n    }\n    return this.tokenRefresher;\n  }\n  async getTokens(options) {\n    let tokens;\n    try {\n      assertTokenProviderConfig(this.authConfig?.Cognito);\n    } catch (_err) {\n      // Token provider not configured\n      return null;\n    }\n    await this.waitForInflightOAuth();\n    this.inflightPromise = undefined;\n    tokens = await this.getTokenStore().loadTokens();\n    const username = await this.getTokenStore().getLastAuthUser();\n    if (tokens === null) {\n      return null;\n    }\n    const idTokenExpired = !!tokens?.idToken && isTokenExpired({\n      expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n      clockDrift: tokens.clockDrift ?? 0\n    });\n    const accessTokenExpired = isTokenExpired({\n      expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n      clockDrift: tokens.clockDrift ?? 0\n    });\n    if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n      tokens = await this.refreshTokens({\n        tokens,\n        username\n      });\n      if (tokens === null) {\n        return null;\n      }\n    }\n    return {\n      accessToken: tokens?.accessToken,\n      idToken: tokens?.idToken,\n      signInDetails: tokens?.signInDetails\n    };\n  }\n  async refreshTokens({\n    tokens,\n    username\n  }) {\n    try {\n      const {\n        signInDetails\n      } = tokens;\n      const newTokens = await this.getTokenRefresher()({\n        tokens,\n        authConfig: this.authConfig,\n        username\n      });\n      newTokens.signInDetails = signInDetails;\n      await this.setTokens({\n        tokens: newTokens\n      });\n      Hub.dispatch('auth', {\n        event: 'tokenRefresh'\n      }, 'Auth', AMPLIFY_SYMBOL);\n      return newTokens;\n    } catch (err) {\n      return this.handleErrors(err);\n    }\n  }\n  handleErrors(err) {\n    assertServiceError(err);\n    if (err.name !== AmplifyErrorCode.NetworkError) {\n      // TODO(v6): Check errors on client\n      this.clearTokens();\n    }\n    Hub.dispatch('auth', {\n      event: 'tokenRefresh_failure',\n      data: {\n        error: err\n      }\n    }, 'Auth', AMPLIFY_SYMBOL);\n    if (err.name.startsWith('NotAuthorizedException')) {\n      return null;\n    }\n    throw err;\n  }\n  async setTokens({\n    tokens\n  }) {\n    return this.getTokenStore().storeTokens(tokens);\n  }\n  async clearTokens() {\n    return this.getTokenStore().clearTokens();\n  }\n  getDeviceMetadata(username) {\n    return this.getTokenStore().getDeviceMetadata(username);\n  }\n  clearDeviceMetadata(username) {\n    return this.getTokenStore().clearDeviceMetadata(username);\n  }\n  setOAuthMetadata(metadata) {\n    return this.getTokenStore().setOAuthMetadata(metadata);\n  }\n  getOAuthMetadata() {\n    return this.getTokenStore().getOAuthMetadata();\n  }\n}\nexport { TokenOrchestrator };\n", "import { defaultStorage } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens.mjs';\nimport { DefaultTokenStore } from './TokenStore.mjs';\nimport { TokenOrchestrator } from './TokenOrchestrator.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass CognitoUserPoolsTokenProvider {\n  constructor() {\n    this.authTokenStore = new DefaultTokenStore();\n    this.authTokenStore.setKeyValueStorage(defaultStorage);\n    this.tokenOrchestrator = new TokenOrchestrator();\n    this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n    this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n  }\n  getTokens({\n    forceRefresh\n  } = {\n    forceRefresh: false\n  }) {\n    return this.tokenOrchestrator.getTokens({\n      forceRefresh\n    });\n  }\n  setKeyValueStorage(keyValueStorage) {\n    this.authTokenStore.setKeyValueStorage(keyValueStorage);\n  }\n  setAuthConfig(authConfig) {\n    this.authTokenStore.setAuthConfig(authConfig);\n    this.tokenOrchestrator.setAuthConfig(authConfig);\n  }\n}\nexport { CognitoUserPoolsTokenProvider };\n", "import { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nconst cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nconst {\n  tokenOrchestrator\n} = cognitoUserPoolsTokenProvider;\nexport { cognitoUserPoolsTokenProvider, tokenOrchestrator };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction defaultState() {\n  return {\n    active: false\n  };\n}\nconst autoSignInReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USERNAME':\n      return {\n        ...state,\n        username: action.value\n      };\n    case 'SET_SESSION':\n      return {\n        ...state,\n        session: action.value\n      };\n    case 'START':\n      return {\n        ...state,\n        active: true\n      };\n    case 'RESET':\n      return defaultState();\n    default:\n      return state;\n  }\n};\nconst createAutoSignInStore = reducer => {\n  let currentState = reducer(defaultState(), {\n    type: 'RESET'\n  });\n  return {\n    getState: () => currentState,\n    dispatch: action => {\n      currentState = reducer(currentState, action);\n    }\n  };\n};\nconst autoSignInStore = createAutoSignInStore(autoSignInReducer);\nexport { autoSignInStore };\n", "import { syncSessionStorage } from '@aws-amplify/core';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Minutes until stored session invalidates is defaulted to 3 minutes\n// to maintain parity with Amazon Cognito user pools API behavior\nconst MS_TO_EXPIRY = 3 * 60 * 1000;\nconst TGT_STATE = 'CognitoSignInState';\nconst SIGN_IN_STATE_KEYS = {\n  username: `${TGT_STATE}.username`,\n  challengeName: `${TGT_STATE}.challengeName`,\n  signInSession: `${TGT_STATE}.signInSession`,\n  expiry: `${TGT_STATE}.expiry`\n};\nconst signInReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_SIGN_IN_SESSION':\n      persistSignInState({\n        signInSession: action.value\n      });\n      return {\n        ...state,\n        signInSession: action.value\n      };\n    case 'SET_SIGN_IN_STATE':\n      persistSignInState(action.value);\n      return {\n        ...action.value\n      };\n    case 'SET_CHALLENGE_NAME':\n      persistSignInState({\n        challengeName: action.value\n      });\n      return {\n        ...state,\n        challengeName: action.value\n      };\n    case 'SET_USERNAME':\n      persistSignInState({\n        username: action.value\n      });\n      return {\n        ...state,\n        username: action.value\n      };\n    case 'SET_INITIAL_STATE':\n      return getInitialState();\n    case 'RESET_STATE':\n      clearPersistedSignInState();\n      return getDefaultState();\n    // this state is never reachable\n    default:\n      return state;\n  }\n};\nconst isExpired = expiryDate => {\n  const expiryTimestamp = Number(expiryDate);\n  const currentTimestamp = Date.now();\n  return expiryTimestamp <= currentTimestamp;\n};\nconst resetActiveSignInState = () => {\n  signInStore.dispatch({\n    type: 'RESET_STATE'\n  });\n};\nconst clearPersistedSignInState = () => {\n  for (const stateKey of Object.values(SIGN_IN_STATE_KEYS)) {\n    syncSessionStorage.removeItem(stateKey);\n  }\n};\nconst getDefaultState = () => ({\n  username: undefined,\n  challengeName: undefined,\n  signInSession: undefined\n});\n// Hydrate signInStore from syncSessionStorage if the session has not expired\nconst getInitialState = () => {\n  const expiry = syncSessionStorage.getItem(SIGN_IN_STATE_KEYS.expiry);\n  if (!expiry || isExpired(expiry)) {\n    clearPersistedSignInState();\n    return getDefaultState();\n  }\n  const username = syncSessionStorage.getItem(SIGN_IN_STATE_KEYS.username) ?? undefined;\n  const challengeName = syncSessionStorage.getItem(SIGN_IN_STATE_KEYS.challengeName) ?? undefined;\n  const signInSession = syncSessionStorage.getItem(SIGN_IN_STATE_KEYS.signInSession) ?? undefined;\n  return {\n    username,\n    challengeName,\n    signInSession\n  };\n};\nconst createStore = reducer => {\n  let currentState = reducer(getDefaultState(), {\n    type: 'SET_INITIAL_STATE'\n  });\n  return {\n    getState: () => currentState,\n    dispatch: action => {\n      currentState = reducer(currentState, action);\n    }\n  };\n};\nconst signInStore = createStore(signInReducer);\nfunction setActiveSignInState(state) {\n  signInStore.dispatch({\n    type: 'SET_SIGN_IN_STATE',\n    value: state\n  });\n}\n// Save local state into Session Storage\nconst persistSignInState = ({\n  challengeName,\n  signInSession,\n  username\n}) => {\n  username && syncSessionStorage.setItem(SIGN_IN_STATE_KEYS.username, username);\n  challengeName && syncSessionStorage.setItem(SIGN_IN_STATE_KEYS.challengeName, challengeName);\n  if (signInSession) {\n    syncSessionStorage.setItem(SIGN_IN_STATE_KEYS.signInSession, signInSession);\n    // Updates expiry when session is passed\n    syncSessionStorage.setItem(SIGN_IN_STATE_KEYS.expiry, String(Date.now() + MS_TO_EXPIRY));\n  }\n};\nexport { persistSignInState, resetActiveSignInState, setActiveSignInState, signInStore };\n", "import { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport '../../../client/utils/store/signInStore.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst initialAutoSignIn = async () => {\n  throw new AuthError({\n    name: AUTO_SIGN_IN_EXCEPTION,\n    message: 'The autoSignIn flow has not started, or has been cancelled/completed.',\n    recoverySuggestion: 'Please try to use the signIn API or log out before starting a new autoSignIn flow.'\n  });\n};\n/**\n * Signs a user in automatically after finishing the sign-up process.\n *\n * This API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n * - User confirmed their account with a verification code sent to their phone or email (default option).\n * - User confirmed their account with a verification link sent to their phone or email. In order to\n * enable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\n * look for your userpool, then go to the `Messaging` tab and enable `link` mode inside the `Verification message` option.\n * Finally you need to define the `signUpVerificationMethod` in your `Auth` config.\n *\n * @example\n * ```typescript\n *  Amplify.configure({\n *    Auth: {\n *     Cognito: {\n *    ...cognitoConfig,\n *    signUpVerificationMethod: \"link\" // the default value is \"code\"\n *   }\n *\t}});\n * ```\n *\n * @throws AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed.\n * @returns The signInOutput.\n *\n * @example\n * ```typescript\n *  // handleSignUp.ts\n * async function handleSignUp(\n *   username:string,\n *   password:string\n * ){\n *   try {\n *     const { nextStep } = await signUp({\n *       username,\n *       password,\n *       options: {\n *         userAttributes:{ email:'email@email.com'},\n *         autoSignIn: true // This enables the auto sign-in flow.\n *       },\n *     });\n *\n *     handleSignUpStep(nextStep);\n *\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // handleConfirmSignUp.ts\n * async function handleConfirmSignUp(username:string, confirmationCode:string) {\n *   try {\n *     const { nextStep } = await confirmSignUp({\n *       username,\n *       confirmationCode,\n *     });\n *\n *     handleSignUpStep(nextStep);\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // signUpUtils.ts\n * async function handleSignUpStep( step: SignUpOutput[\"nextStep\"]) {\n * switch (step.signUpStep) {\n *   case \"CONFIRM_SIGN_UP\":\n *\n *    // Redirect end-user to confirm-sign up screen.\n *\n *   case \"COMPLETE_AUTO_SIGN_IN\":\n *\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n *     if (codeDeliveryDetails) {\n *      // Redirect user to confirm-sign-up with link screen.\n *     }\n *     const signInOutput = await autoSignIn();\n *   // handle sign-in steps\n * }\n *\n * ```\n */\n// TODO(Eslint): can this be refactored not using `let` on exported member?\n// eslint-disable-next-line import/no-mutable-exports\nlet autoSignIn = initialAutoSignIn;\n/**\n * Sets the context of autoSignIn at run time.\n * @internal\n */\nfunction setAutoSignIn(callback) {\n  autoSignIn = callback;\n}\n/**\n * Resets the context\n *\n * @internal\n */\nfunction resetAutoSignIn(resetCallback = true) {\n  if (resetCallback) {\n    autoSignIn = initialAutoSignIn;\n  }\n  autoSignInStore.dispatch({\n    type: 'RESET'\n  });\n}\nexport { autoSignIn, resetAutoSignIn, setAutoSignIn };\n", "import { validationErrorMap } from '../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertValidationError(assertion, name) {\n  const {\n    message,\n    recoverySuggestion\n  } = validationErrorMap[name];\n  if (!assertion) {\n    throw new AuthError({\n      name,\n      message,\n      recoverySuggestion\n    });\n  }\n}\nexport { assertValidationError };\n", "import { getAmplifyUserAgent, Category } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getAuthUserAgentValue = (action, customUserAgentDetails) => getAmplifyUserAgent({\n  category: Category.Auth,\n  action,\n  ...customUserAgentDetails\n});\nexport { getAuthUserAgentValue };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createRespondToAuthChallengeClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('RespondToAuthChallenge'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createRespondToAuthChallengeClient };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createVerifySoftwareTokenClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('VerifySoftwareToken'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createVerifySoftwareTokenClient };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createAssociateSoftwareTokenClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('AssociateSoftwareToken'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createAssociateSoftwareTokenClient };\n", "import { decodeJWT, AmplifyError } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from './tokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function cacheCognitoTokens(AuthenticationResult) {\n  if (AuthenticationResult.AccessToken) {\n    const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n    const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n    const currentTime = new Date().getTime();\n    const clockDrift = accessTokenIssuedAtInMillis > 0 ? accessTokenIssuedAtInMillis - currentTime : 0;\n    let idToken;\n    let refreshToken;\n    let deviceMetadata;\n    if (AuthenticationResult.RefreshToken) {\n      refreshToken = AuthenticationResult.RefreshToken;\n    }\n    if (AuthenticationResult.IdToken) {\n      idToken = decodeJWT(AuthenticationResult.IdToken);\n    }\n    if (AuthenticationResult?.NewDeviceMetadata) {\n      deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n    }\n    const tokens = {\n      accessToken,\n      idToken,\n      refreshToken,\n      clockDrift,\n      deviceMetadata,\n      username: AuthenticationResult.username\n    };\n    if (AuthenticationResult?.signInDetails) {\n      tokens.signInDetails = AuthenticationResult.signInDetails;\n    }\n    await tokenOrchestrator.setTokens({\n      tokens\n    });\n  } else {\n    // This would be a service error\n    throw new AmplifyError({\n      message: 'Invalid tokens',\n      name: 'InvalidTokens',\n      recoverySuggestion: 'Check Cognito UserPool settings'\n    });\n  }\n}\nexport { cacheCognitoTokens };\n", "import { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { getCurrentUser } from '../apis/getCurrentUser.mjs';\nimport { USER_UNAUTHENTICATED_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION } from '../../../errors/constants.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\nconst dispatchSignedInHubEvent = async () => {\n  try {\n    Hub.dispatch('auth', {\n      event: 'signedIn',\n      data: await getCurrentUser()\n    }, 'Auth', AMPLIFY_SYMBOL);\n  } catch (error) {\n    if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n      throw new AuthError({\n        name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n        message: ERROR_MESSAGE,\n        recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.'\n      });\n    }\n    throw error;\n  }\n};\nexport { ERROR_MESSAGE, dispatchSignedInHubEvent };\n", "import { createAssertionFunction, AmplifyError, AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass PasskeyError extends AmplifyError {\n  constructor(params) {\n    super(params);\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    this.constructor = PasskeyError;\n    Object.setPrototypeOf(this, PasskeyError.prototype);\n  }\n}\nvar PasskeyErrorCode;\n(function (PasskeyErrorCode) {\n  // not supported\n  PasskeyErrorCode[\"PasskeyNotSupported\"] = \"PasskeyNotSupported\";\n  // duplicate passkey\n  PasskeyErrorCode[\"PasskeyAlreadyExists\"] = \"PasskeyAlreadyExists\";\n  // misconfigurations\n  PasskeyErrorCode[\"InvalidPasskeyRegistrationOptions\"] = \"InvalidPasskeyRegistrationOptions\";\n  PasskeyErrorCode[\"InvalidPasskeyAuthenticationOptions\"] = \"InvalidPasskeyAuthenticationOptions\";\n  PasskeyErrorCode[\"RelyingPartyMismatch\"] = \"RelyingPartyMismatch\";\n  // failed credential creation / retrieval\n  PasskeyErrorCode[\"PasskeyRegistrationFailed\"] = \"PasskeyRegistrationFailed\";\n  PasskeyErrorCode[\"PasskeyRetrievalFailed\"] = \"PasskeyRetrievalFailed\";\n  // cancel / aborts\n  PasskeyErrorCode[\"PasskeyRegistrationCanceled\"] = \"PasskeyRegistrationCanceled\";\n  PasskeyErrorCode[\"PasskeyAuthenticationCanceled\"] = \"PasskeyAuthenticationCanceled\";\n  PasskeyErrorCode[\"PasskeyOperationAborted\"] = \"PasskeyOperationAborted\";\n})(PasskeyErrorCode || (PasskeyErrorCode = {}));\nconst notSupportedRecoverySuggestion = 'Passkeys may not be supported on this device. Ensure your application is running in a secure context (HTTPS) and Web Authentication API is supported.';\nconst abortOrCancelRecoverySuggestion = 'User may have canceled the ceremony or another interruption has occurred. Check underlying error for details.';\nconst misconfigurationRecoverySuggestion = 'Ensure your user pool is configured to support the WEB_AUTHN as an authentication factor.';\nconst passkeyErrorMap = {\n  [PasskeyErrorCode.PasskeyNotSupported]: {\n    message: 'Passkeys may not be supported on this device.',\n    recoverySuggestion: notSupportedRecoverySuggestion\n  },\n  [PasskeyErrorCode.InvalidPasskeyRegistrationOptions]: {\n    message: 'Invalid passkey registration options.',\n    recoverySuggestion: misconfigurationRecoverySuggestion\n  },\n  [PasskeyErrorCode.InvalidPasskeyAuthenticationOptions]: {\n    message: 'Invalid passkey authentication options.',\n    recoverySuggestion: misconfigurationRecoverySuggestion\n  },\n  [PasskeyErrorCode.PasskeyRegistrationFailed]: {\n    message: 'Device failed to create passkey.',\n    recoverySuggestion: notSupportedRecoverySuggestion\n  },\n  [PasskeyErrorCode.PasskeyRetrievalFailed]: {\n    message: 'Device failed to retrieve passkey.',\n    recoverySuggestion: 'Passkeys may not be available on this device. Try an alternative authentication factor like PASSWORD, EMAIL_OTP, or SMS_OTP.'\n  },\n  [PasskeyErrorCode.PasskeyAlreadyExists]: {\n    message: 'Passkey already exists in authenticator.',\n    recoverySuggestion: 'Proceed with existing passkey or try again after deleting the credential.'\n  },\n  [PasskeyErrorCode.PasskeyRegistrationCanceled]: {\n    message: 'Passkey registration ceremony has been canceled.',\n    recoverySuggestion: abortOrCancelRecoverySuggestion\n  },\n  [PasskeyErrorCode.PasskeyAuthenticationCanceled]: {\n    message: 'Passkey authentication ceremony has been canceled.',\n    recoverySuggestion: abortOrCancelRecoverySuggestion\n  },\n  [PasskeyErrorCode.PasskeyOperationAborted]: {\n    message: 'Passkey operation has been aborted.',\n    recoverySuggestion: abortOrCancelRecoverySuggestion\n  },\n  [PasskeyErrorCode.RelyingPartyMismatch]: {\n    message: 'Relying party does not match current domain.',\n    recoverySuggestion: 'Ensure relying party identifier matches current domain.'\n  }\n};\nconst assertPasskeyError = createAssertionFunction(passkeyErrorMap, PasskeyError);\n/**\n * Handle Passkey Authentication Errors\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyAuthenticationError = err => {\n  if (err instanceof PasskeyError) {\n    return err;\n  }\n  if (err instanceof Error) {\n    if (err.name === 'NotAllowedError') {\n      const {\n        message,\n        recoverySuggestion\n      } = passkeyErrorMap[PasskeyErrorCode.PasskeyAuthenticationCanceled];\n      return new PasskeyError({\n        name: PasskeyErrorCode.PasskeyAuthenticationCanceled,\n        message,\n        recoverySuggestion,\n        underlyingError: err\n      });\n    }\n  }\n  return handlePasskeyError(err);\n};\n/**\n * Handle Passkey Registration Errors\n * https://w3c.github.io/webauthn/#sctn-create-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyRegistrationError = err => {\n  if (err instanceof PasskeyError) {\n    return err;\n  }\n  if (err instanceof Error) {\n    // Duplicate Passkey\n    if (err.name === 'InvalidStateError') {\n      const {\n        message,\n        recoverySuggestion\n      } = passkeyErrorMap[PasskeyErrorCode.PasskeyAlreadyExists];\n      return new PasskeyError({\n        name: PasskeyErrorCode.PasskeyAlreadyExists,\n        message,\n        recoverySuggestion,\n        underlyingError: err\n      });\n    }\n    // User Cancels Ceremony / Generic Catch All\n    if (err.name === 'NotAllowedError') {\n      const {\n        message,\n        recoverySuggestion\n      } = passkeyErrorMap[PasskeyErrorCode.PasskeyRegistrationCanceled];\n      return new PasskeyError({\n        name: PasskeyErrorCode.PasskeyRegistrationCanceled,\n        message,\n        recoverySuggestion,\n        underlyingError: err\n      });\n    }\n  }\n  return handlePasskeyError(err);\n};\n/**\n * Handles Overlapping Passkey Errors Between Registration & Authentication\n * https://w3c.github.io/webauthn/#sctn-create-request-exceptions\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyError = err => {\n  if (err instanceof Error) {\n    // Passkey Operation Aborted\n    if (err.name === 'AbortError') {\n      const {\n        message,\n        recoverySuggestion\n      } = passkeyErrorMap[PasskeyErrorCode.PasskeyOperationAborted];\n      return new PasskeyError({\n        name: PasskeyErrorCode.PasskeyOperationAborted,\n        message,\n        recoverySuggestion,\n        underlyingError: err\n      });\n    }\n    // Relying Party / Domain Mismatch\n    if (err.name === 'SecurityError') {\n      const {\n        message,\n        recoverySuggestion\n      } = passkeyErrorMap[PasskeyErrorCode.RelyingPartyMismatch];\n      return new PasskeyError({\n        name: PasskeyErrorCode.RelyingPartyMismatch,\n        message,\n        recoverySuggestion,\n        underlyingError: err\n      });\n    }\n  }\n  return new PasskeyError({\n    name: AmplifyErrorCode.Unknown,\n    message: 'An unknown error has occurred.',\n    underlyingError: err\n  });\n};\nexport { PasskeyError, PasskeyErrorCode, assertPasskeyError, handlePasskeyAuthenticationError, handlePasskeyRegistrationError };\n", "import { isBrowser } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Determines if passkey is supported in current context\n * Will return false if executed in non-secure context\n * @returns boolean\n */\nconst getIsPasskeySupported = () => {\n  return isBrowser() && window.isSecureContext && 'credentials' in navigator && typeof window.PublicKeyCredential === 'function';\n};\nexport { getIsPasskeySupported };\n", "import { base64Encoder } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// https://datatracker.ietf.org/doc/html/rfc4648#page-7\n/**\n * Converts an ArrayBuffer to a base64url encoded string\n * @param buffer - the ArrayBuffer instance of a Uint8Array\n * @returns string - a base64url encoded string\n */\nconst convertArrayBufferToBase64Url = buffer => {\n  return base64Encoder.convert(new Uint8Array(buffer), {\n    urlSafe: true,\n    skipPadding: true\n  });\n};\nexport { convertArrayBufferToBase64Url };\n", "import { base64Decoder } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a base64url encoded string to an ArrayBuffer\n * @param base64url - a base64url encoded string\n * @returns ArrayBuffer\n */\nconst convertBase64UrlToArrayBuffer = base64url => {\n  return Uint8Array.from(base64Decoder.convert(base64url, {\n    urlSafe: true\n  }), x => x.charCodeAt(0)).buffer;\n};\nexport { convertBase64UrlToArrayBuffer };\n", "import { convertArrayBufferToBase64Url } from '../../../foundation/convert/base64url/convertArrayBufferToBase64Url.mjs';\nimport { convertBase64UrlToArrayBuffer } from '../../../foundation/convert/base64url/convertBase64UrlToArrayBuffer.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deserializes Public Key Credential Creation Options JSON\n * @param input PasskeyCreateOptionsJson\n * @returns PublicKeyCredentialCreationOptions\n */\nconst deserializeJsonToPkcCreationOptions = input => {\n  const userIdBuffer = convertBase64UrlToArrayBuffer(input.user.id);\n  const challengeBuffer = convertBase64UrlToArrayBuffer(input.challenge);\n  const excludeCredentialsWithBuffer = (input.excludeCredentials || []).map(excludeCred => ({\n    ...excludeCred,\n    id: convertBase64UrlToArrayBuffer(excludeCred.id)\n  }));\n  return {\n    ...input,\n    excludeCredentials: excludeCredentialsWithBuffer,\n    challenge: challengeBuffer,\n    user: {\n      ...input.user,\n      id: userIdBuffer\n    }\n  };\n};\n/**\n * Serializes a Public Key Credential With Attestation to JSON\n * @param input PasskeyCreateResult\n * @returns PasskeyCreateResultJson\n */\nconst serializePkcWithAttestationToJson = input => {\n  const response = {\n    clientDataJSON: convertArrayBufferToBase64Url(input.response.clientDataJSON),\n    attestationObject: convertArrayBufferToBase64Url(input.response.attestationObject),\n    transports: input.response.getTransports(),\n    publicKeyAlgorithm: input.response.getPublicKeyAlgorithm(),\n    authenticatorData: convertArrayBufferToBase64Url(input.response.getAuthenticatorData())\n  };\n  const publicKey = input.response.getPublicKey();\n  if (publicKey) {\n    response.publicKey = convertArrayBufferToBase64Url(publicKey);\n  }\n  const resultJson = {\n    type: input.type,\n    id: input.id,\n    rawId: convertArrayBufferToBase64Url(input.rawId),\n    clientExtensionResults: input.getClientExtensionResults(),\n    response\n  };\n  if (input.authenticatorAttachment) {\n    resultJson.authenticatorAttachment = input.authenticatorAttachment;\n  }\n  return resultJson;\n};\n/**\n * Deserializes Public Key Credential Get Options JSON\n * @param input PasskeyGetOptionsJson\n * @returns PublicKeyCredentialRequestOptions\n */\nconst deserializeJsonToPkcGetOptions = input => {\n  const challengeBuffer = convertBase64UrlToArrayBuffer(input.challenge);\n  const allowedCredentialsWithBuffer = (input.allowCredentials || []).map(allowedCred => ({\n    ...allowedCred,\n    id: convertBase64UrlToArrayBuffer(allowedCred.id)\n  }));\n  return {\n    ...input,\n    challenge: challengeBuffer,\n    allowCredentials: allowedCredentialsWithBuffer\n  };\n};\n/**\n * Serializes a Public Key Credential With Attestation to JSON\n * @param input PasskeyGetResult\n * @returns PasskeyGetResultJson\n */\nconst serializePkcWithAssertionToJson = input => {\n  const response = {\n    clientDataJSON: convertArrayBufferToBase64Url(input.response.clientDataJSON),\n    authenticatorData: convertArrayBufferToBase64Url(input.response.authenticatorData),\n    signature: convertArrayBufferToBase64Url(input.response.signature)\n  };\n  if (input.response.userHandle) {\n    response.userHandle = convertArrayBufferToBase64Url(input.response.userHandle);\n  }\n  const resultJson = {\n    id: input.id,\n    rawId: convertArrayBufferToBase64Url(input.rawId),\n    type: input.type,\n    clientExtensionResults: input.getClientExtensionResults(),\n    response\n  };\n  if (input.authenticatorAttachment) {\n    resultJson.authenticatorAttachment = input.authenticatorAttachment;\n  }\n  return resultJson;\n};\nexport { deserializeJsonToPkcCreationOptions, deserializeJsonToPkcGetOptions, serializePkcWithAssertionToJson, serializePkcWithAttestationToJson };\n", "import { assertPasskeyError, PasskeyErrorCode } from '../errors.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertValidCredentialCreationOptions(credentialCreationOptions) {\n  assertPasskeyError([!!credentialCreationOptions, !!credentialCreationOptions?.challenge, !!credentialCreationOptions?.user, !!credentialCreationOptions?.rp, !!credentialCreationOptions?.pubKeyCredParams].every(Boolean), PasskeyErrorCode.InvalidPasskeyRegistrationOptions);\n}\nexport { assertValidCredentialCreationOptions };\n", "import { assertPasskeyError, PasskeyErrorCode } from '../errors.mjs';\nexport { assertValidCredentialCreationOptions } from './shared.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertCredentialIsPkcWithAuthenticatorAttestationResponse(credential) {\n  assertPasskeyError(credential && credential instanceof PublicKeyCredential && credential.response instanceof AuthenticatorAttestationResponse, PasskeyErrorCode.PasskeyRegistrationFailed);\n}\nfunction assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential) {\n  assertPasskeyError(credential && credential instanceof PublicKeyCredential && credential.response instanceof AuthenticatorAssertionResponse, PasskeyErrorCode.PasskeyRetrievalFailed);\n}\nexport { assertCredentialIsPkcWithAuthenticatorAssertionResponse, assertCredentialIsPkcWithAuthenticatorAttestationResponse };\n", "import { assertPasskeyError, PasskeyErrorCode, handlePasskeyAuthenticationError } from './errors.mjs';\nimport { getIsPasskeySupported } from './getIsPasskeySupported.mjs';\nimport { deserializeJsonToPkcGetOptions, serializePkcWithAssertionToJson } from './serde.mjs';\nimport { assertCredentialIsPkcWithAuthenticatorAssertionResponse } from './types/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getPasskey = async input => {\n  try {\n    const isPasskeySupported = getIsPasskeySupported();\n    assertPasskeyError(isPasskeySupported, PasskeyErrorCode.PasskeyNotSupported);\n    const passkeyGetOptions = deserializeJsonToPkcGetOptions(input);\n    const credential = await navigator.credentials.get({\n      publicKey: passkeyGetOptions\n    });\n    assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential);\n    return serializePkcWithAssertionToJson(credential);\n  } catch (err) {\n    throw handlePasskeyAuthenticationError(err);\n  }\n};\nexport { getPasskey };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createConfirmDeviceClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmDevice'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createConfirmDeviceClient };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst textEncoder = {\n  convert(input) {\n    return new TextEncoder().encode(input);\n  }\n};\nexport { textEncoder };\n", "/* eslint-disable */\n// @ts-nocheck -> BigInteger is already a vended utility\n// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\nfunction BigInteger(a, b) {\n  if (a != null) this.fromString(a, b);\n}\n// return new, unset BigInteger\nfunction nbi() {\n  return new BigInteger(null, null);\n}\n// Bits per digit\nlet dbits;\n// JavaScript engine analysis\nconst canary = 0xdeadbeefcafe;\nconst j_lm = (canary & 0xffffff) === 0xefcafe;\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    const v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n  const xl = x & 0x7fff;\n  const xh = x >> 15;\n  while (--n >= 0) {\n    let l = this[i] & 0x7fff;\n    const h = this[i++] >> 15;\n    const m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n  const xl = x & 0x3fff;\n  const xh = x >> 14;\n  while (--n >= 0) {\n    let l = this[i] & 0x3fff;\n    const h = this[i++] >> 14;\n    const m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w[j++] = l & 0xfffffff;\n  }\n  return c;\n}\nconst inBrowser = typeof navigator !== 'undefined';\nif (inBrowser && j_lm && navigator.appName === 'Microsoft Internet Explorer') {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if (inBrowser && j_lm && navigator.appName !== 'Netscape') {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else {\n  // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nconst BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nconst BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nconst BI_RC = [];\nlet rr, vv;\nrr = '0'.charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = 'a'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = 'A'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n  const c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n}\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for (let i = this.t - 1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\n}\n// return bigint initialized to value\nfunction nbv(i) {\n  const r = nbi();\n  r.fromInt(i);\n  return r;\n}\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n  let k;\n  if (b === 16) k = 4;else if (b === 8) k = 3;else if (b === 2) k = 1;else if (b === 32) k = 5;else if (b === 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  this.t = 0;\n  this.s = 0;\n  let i = s.length;\n  let mi = false;\n  let sh = 0;\n  while (--i >= 0) {\n    const x = intAt(s, i);\n    if (x < 0) {\n      if (s.charAt(i) === '-') mi = true;\n      continue;\n    }\n    mi = false;\n    if (sh === 0) this[this.t++] = x;else if (sh + k > this.DB) {\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this[this.t++] = x >> this.DB - sh;\n    } else this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n}\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  const c = this.s & this.DM;\n  while (this.t > 0 && this[this.t - 1] == c) --this.t;\n}\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if (this.s < 0) return '-' + this.negate().toString(b);\n  let k;\n  if (b == 16) k = 4;else if (b === 8) k = 3;else if (b === 2) k = 1;else if (b === 32) k = 5;else if (b === 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  const km = (1 << k) - 1;\n  let d;\n  let m = false;\n  let r = '';\n  let i = this.t;\n  let p = this.DB - i * this.DB % k;\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n    while (i >= 0) {\n      if (p < k) {\n        d = (this[i] & (1 << p) - 1) << k - p;\n        d |= this[--i] >> (p += this.DB - k);\n      } else {\n        d = this[i] >> (p -= k) & km;\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n  return m ? r : '0';\n}\n// (public) -this\nfunction bnNegate() {\n  const r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n}\n// (public) |this|\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n}\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  let r = this.s - a.s;\n  if (r != 0) return r;\n  let i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n  while (--i >= 0) if ((r = this[i] - a[i]) != 0) return r;\n  return 0;\n}\n// returns bit length of the integer x\nfunction nbits(x) {\n  let r = 1;\n  let t;\n  if ((t = x >>> 16) !== 0) {\n    x = t;\n    r += 16;\n  }\n  if ((t = x >> 8) !== 0) {\n    x = t;\n    r += 8;\n  }\n  if ((t = x >> 4) !== 0) {\n    x = t;\n    r += 4;\n  }\n  if ((t = x >> 2) !== 0) {\n    x = t;\n    r += 2;\n  }\n  if ((t = x >> 1) !== 0) {\n    x = t;\n    r += 1;\n  }\n  return r;\n}\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n}\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n  let i;\n  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n  for (i = n - 1; i >= 0; --i) r[i] = 0;\n  r.t = this.t + n;\n  r.s = this.s;\n}\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n  for (let i = n; i < this.t; ++i) r[i - n] = this[i];\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n}\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n  const bs = n % this.DB;\n  const cbs = this.DB - bs;\n  const bm = (1 << cbs) - 1;\n  const ds = Math.floor(n / this.DB);\n  let c = this.s << bs & this.DM;\n  let i;\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = this[i] >> cbs | c;\n    c = (this[i] & bm) << bs;\n  }\n  for (i = ds - 1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n}\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  const ds = Math.floor(n / this.DB);\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n  const bs = n % this.DB;\n  const cbs = this.DB - bs;\n  const bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n  for (let i = ds + 1; i < this.t; ++i) {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n}\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n  let i = 0;\n  let c = 0;\n  const m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c -= a.s;\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n  const x = this.abs();\n  const y = a.abs();\n  let i = x.t;\n  r.t = i + y.t;\n  while (--i >= 0) r[i] = 0;\n  for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  r.s = 0;\n  r.clamp();\n  if (this.s !== a.s) BigInteger.ZERO.subTo(r, r);\n}\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  const x = this.abs();\n  let i = r.t = 2 * x.t;\n  while (--i >= 0) r[i] = 0;\n  for (i = 0; i < x.t - 1; ++i) {\n    const c = x.am(i, x[i], r, 2 * i, 0, 1);\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n}\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n  const pm = m.abs();\n  if (pm.t <= 0) return;\n  const pt = this.abs();\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n  if (r === null) r = nbi();\n  const y = nbi();\n  const ts = this.s;\n  const ms = m.s;\n  const nsh = this.DB - nbits(pm[pm.t - 1]);\n  // normalize modulus\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n  const ys = y.t;\n  const y0 = y[ys - 1];\n  if (y0 === 0) return;\n  const yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n  const d1 = this.FV / yt;\n  const d2 = (1 << this.F1) / yt;\n  const e = 1 << this.F2;\n  let i = r.t;\n  let j = i - ys;\n  const t = q === null ? nbi() : q;\n  y.dlShiftTo(j, t);\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y);\n  // \"negative\" y so we can replace sub with am later\n  while (y.t < ys) y[y.t++] = 0;\n  while (--j >= 0) {\n    // Estimate quotient digit\n    let qd = r[--i] === y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n      while (r[i] < --qd) r.subTo(t, r);\n    }\n  }\n  if (q !== null) {\n    r.drShiftTo(ys, q);\n    if (ts !== ms) BigInteger.ZERO.subTo(q, q);\n  }\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r);\n  // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n}\n// (public) this mod a\nfunction bnMod(a) {\n  const r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n}\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  const x = this[0];\n  if ((x & 1) === 0) return 0;\n  let y = x & 3;\n  // y == 1/x mod 2^2\n  y = y * (2 - (x & 0xf) * y) & 0xf;\n  // y == 1/x mod 2^4\n  y = y * (2 - (x & 0xff) * y) & 0xff;\n  // y == 1/x mod 2^8\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff;\n  // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = y * (2 - x * y % this.DV) % this.DV;\n  // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return y > 0 ? this.DV - y : -y;\n}\nfunction bnEquals(a) {\n  return this.compareTo(a) === 0;\n}\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n  let i = 0;\n  let c = 0;\n  const m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c += a.s;\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n}\n// (public) this + a\nfunction bnAdd(a) {\n  const r = nbi();\n  this.addTo(a, r);\n  return r;\n}\n// (public) this - a\nfunction bnSubtract(a) {\n  const r = nbi();\n  this.subTo(a, r);\n  return r;\n}\n// (public) this * a\nfunction bnMultiply(a) {\n  const r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n}\n// (public) this / a\nfunction bnDivide(a) {\n  const r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n}\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n}\n// xR mod m\nfunction montConvert(x) {\n  const r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n}\n// x/R mod m\nfunction montRevert(x) {\n  const r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while (x.t <= this.mt2)\n  // pad x so am has enough room later\n  x[x.t++] = 0;\n  for (let i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    let j = x[i] & 0x7fff;\n    const u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n    // propagate carry\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n  let i = e.bitLength();\n  let k;\n  let r = nbv(1);\n  const z = new Montgomery(m);\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;\n  // precomputation\n  const g = [];\n  let n = 3;\n  const k1 = k - 1;\n  const km = (1 << k) - 1;\n  g[1] = z.convert(this);\n  if (k > 1) {\n    const g2 = nbi();\n    z.sqrTo(g[1], g2);\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n  let j = e.t - 1;\n  let w;\n  let is1 = true;\n  let r2 = nbi();\n  let t;\n  i = nbits(e[j]) - 1;\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n    n = k;\n    while ((w & 1) === 0) {\n      w >>= 1;\n      --n;\n    }\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n    while (j >= 0 && (e[j] & 1 << i) === 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n  const result = z.revert(r);\n  callback(null, result);\n  return result;\n}\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\nexport { BigInteger as default };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateS = async ({\n  a,\n  g,\n  k,\n  x,\n  B,\n  N,\n  U\n}) => {\n  return new Promise((resolve, reject) => {\n    g.modPow(x, N, (outerErr, outerResult) => {\n      if (outerErr) {\n        reject(outerErr);\n        return;\n      }\n      B.subtract(k.multiply(outerResult)).modPow(a.add(U.multiply(x)), N, (innerErr, innerResult) => {\n        if (innerErr) {\n          reject(innerErr);\n          return;\n        }\n        resolve(innerResult.mod(N));\n      });\n    });\n  });\n};\nexport { calculateS };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst INIT_N = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n  let encodedByte = i.toString(16).toLowerCase();\n  if (encodedByte.length === 1) {\n    encodedByte = `0${encodedByte}`;\n  }\n  SHORT_TO_HEX[i] = encodedByte;\n  HEX_TO_SHORT[encodedByte] = i;\n}\nexport { HEX_TO_SHORT, INIT_N, SHORT_TO_HEX };\n", "import { HEX_TO_SHORT } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nconst getBytesFromHex = encoded => {\n  if (encoded.length % 2 !== 0) {\n    throw new Error('Hex encoded strings must have an even number length');\n  }\n  const out = new Uint8Array(encoded.length / 2);\n  for (let i = 0; i < encoded.length; i += 2) {\n    const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n    if (encodedByte in HEX_TO_SHORT) {\n      out[i / 2] = HEX_TO_SHORT[encodedByte];\n    } else {\n      throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n    }\n  }\n  return out;\n};\nexport { getBytesFromHex };\n", "import { SHORT_TO_HEX } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nconst getHexFromBytes = bytes => {\n  let out = '';\n  for (let i = 0; i < bytes.byteLength; i++) {\n    out += SHORT_TO_HEX[bytes[i]];\n  }\n  return out;\n};\nexport { getHexFromBytes };\n", "import { Sha256 } from '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculate a hash from a `SourceData`\n * @param {SourceData} data Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nconst getHashFromData = data => {\n  const sha256 = new Sha256();\n  sha256.update(data);\n  const hashedData = sha256.digestSync();\n  const hashHexFromUint8 = getHexFromBytes(hashedData);\n  return new Array(64 - hashHexFromUint8.length).join('0') + hashHexFromUint8;\n};\nexport { getHashFromData };\n", "import { getBytesFromHex } from './getBytesFromHex.mjs';\nimport { getHashFromData } from './getHashFromData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculate a hash from a hex string\n * @param {string} hexStr Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nconst getHashFromHex = hexStr => getHashFromData(getBytesFromHex(hexStr));\nexport { getHashFromHex };\n", "import BigInteger from './BigInteger/BigInteger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\nconst HEX_MSB_REGEX = /^[89a-f]/i;\n/**\n * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n *\n * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n * byte array containing the two's-complement representation of a BigInteger. The array contains\n * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n *\n * Examples showing how ambiguity is avoided by left padding with:\n * \t\"00\" (for positive values where the most-significant-bit is set)\n *  \"FF\" (for negative values where the most-significant-bit is set)\n *\n * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n * padHex(bigInteger.fromInt(20))    === \"14\"\n *\n * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n * padHex(bigInteger.fromInt(56))    === \"38\"\n *\n * padHex(bigInteger.fromInt(-20))   === \"EC\"\n * padHex(bigInteger.fromInt(236))   === \"00EC\"\n *\n * padHex(bigInteger.fromInt(-56))   === \"C8\"\n * padHex(bigInteger.fromInt(200))   === \"00C8\"\n *\n * @param {AuthBigInteger} bigInt Number to encode.\n * @returns {String} even-length hex string of the two's complement encoding.\n */\nconst getPaddedHex = bigInt => {\n  if (!(bigInt instanceof BigInteger)) {\n    throw new Error('Not a BigInteger');\n  }\n  const isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n  /* Get a hex string for abs(bigInt) */\n  let hexStr = bigInt.abs().toString(16);\n  /* Pad hex to even length if needed */\n  hexStr = hexStr.length % 2 !== 0 ? `0${hexStr}` : hexStr;\n  /* Prepend \"00\" if the most significant bit is set */\n  hexStr = HEX_MSB_REGEX.test(hexStr) ? `00${hexStr}` : hexStr;\n  if (isNegative) {\n    /* Flip the bits of the representation */\n    const invertedNibbles = hexStr.split('').map(x => {\n      const invertedNibble = ~parseInt(x, 16) & 0xf;\n      return '0123456789ABCDEF'.charAt(invertedNibble);\n    }).join('');\n    /* After flipping the bits, add one to get the 2's complement representation */\n    const flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n    hexStr = flippedBitsBI.toString(16);\n    /*\n    For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n     Any sequence of '1' bits on the left can always be substituted with a single '1' bit\n    without changing the represented value.\n     This only happens in the case when the input is 80...00\n    */\n    if (hexStr.toUpperCase().startsWith('FF8')) {\n      hexStr = hexStr.substring(2);\n    }\n  }\n  return hexStr;\n};\nexport { getPaddedHex };\n", "import BigInteger from '../BigInteger/BigInteger.mjs';\nimport { getHashFromHex } from '../getHashFromHex.mjs';\nimport { getPaddedHex } from '../getPaddedHex.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateU = ({\n  A,\n  B\n}) => {\n  const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n  if (U.equals(BigInteger.ZERO)) {\n    throw new Error('U cannot be zero.');\n  }\n  return U;\n};\nexport { calculateU };\n", "import { Sha256 } from '@aws-crypto/sha256-js';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nconst getHkdfKey = (ikm, salt, info) => {\n  const awsCryptoHash = new Sha256(salt);\n  awsCryptoHash.update(ikm);\n  const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n  const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n  awsCryptoHashHmac.update(info);\n  const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n  const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n  return hashHexFromAWSCrypto.slice(0, 16);\n};\nexport { getHkdfKey };\n", "import { WordArray } from '@aws-amplify/core/internals/utils';\nimport { getBytesFromHex } from './getBytesFromHex.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nconst getRandomBytes = nBytes => {\n  const str = new WordArray().random(nBytes).toString();\n  return getBytesFromHex(str);\n};\nexport { getRandomBytes };\n", "import { base64Encoder } from '@aws-amplify/core/internals/utils';\nimport { getRandomBytes } from './getRandomBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Helper function to generate a random string\n * @returns {string} a random value.\n *\n * @internal\n */\nconst getRandomString = () => base64Encoder.convert(getRandomBytes(40));\nexport { getRandomString };\n", "import { AuthError } from '../../../../../errors/AuthError.mjs';\nimport { textEncoder } from '../../textEncoder/index.mjs';\nimport BigInteger from '../BigInteger/BigInteger.mjs';\nimport { calculateS } from '../calculate/calculateS.mjs';\nimport { calculateU } from '../calculate/calculateU.mjs';\nimport { getBytesFromHex } from '../getBytesFromHex.mjs';\nimport { getHashFromData } from '../getHashFromData.mjs';\nimport { getHashFromHex } from '../getHashFromHex.mjs';\nimport { getHexFromBytes } from '../getHexFromBytes.mjs';\nimport { getHkdfKey } from '../getHkdfKey.mjs';\nimport { getPaddedHex } from '../getPaddedHex.mjs';\nimport { getRandomBytes } from '../getRandomBytes.mjs';\nimport { getRandomString } from '../getRandomString.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/** @class */\nclass AuthenticationHelper {\n  constructor({\n    userPoolName,\n    a,\n    g,\n    A,\n    N\n  }) {\n    this.encoder = textEncoder;\n    this.userPoolName = userPoolName;\n    this.a = a;\n    this.g = g;\n    this.A = A;\n    this.N = N;\n    this.k = new BigInteger(getHashFromHex(`${getPaddedHex(N)}${getPaddedHex(g)}`), 16);\n  }\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */\n  getRandomPassword() {\n    if (!this.randomPassword) {\n      throw new AuthError({\n        name: 'EmptyBigIntegerRandomPassword',\n        message: 'random password is empty'\n      });\n    }\n    return this.randomPassword;\n  }\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */\n  getSaltToHashDevices() {\n    if (!this.saltToHashDevices) {\n      throw new AuthError({\n        name: 'EmptyBigIntegersaltToHashDevices',\n        message: 'saltToHashDevices is empty'\n      });\n    }\n    return this.saltToHashDevices;\n  }\n  /**\n   * @returns {string} Value used to verify devices.\n   */\n  getVerifierDevices() {\n    if (!this.verifierDevices) {\n      throw new AuthError({\n        name: 'EmptyBigIntegerVerifierDevices',\n        message: 'verifyDevices is empty'\n      });\n    }\n    return this.verifierDevices;\n  }\n  /**\n   * Generate salts and compute verifier.\n   *\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   *\n   * @returns {Promise<void>}\n   */\n  async generateHashDevice(deviceGroupKey, username) {\n    this.randomPassword = getRandomString();\n    const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n    const hashedString = getHashFromData(combinedString);\n    const hexRandom = getHexFromBytes(getRandomBytes(16));\n    // The random hex will be unambiguously represented as a postive integer\n    this.saltToHashDevices = getPaddedHex(new BigInteger(hexRandom, 16));\n    return new Promise((resolve, reject) => {\n      this.g.modPow(new BigInteger(getHashFromHex(this.saltToHashDevices + hashedString), 16), this.N, (err, result) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        this.verifierDevices = getPaddedHex(result);\n        resolve();\n      });\n    });\n  }\n  /**\n   * Calculates the final HKDF key based on computed S value, computed U value and the key\n   *\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {AuthBigInteger} B Server B value.\n   * @param {AuthBigInteger} salt Generated salt.\n   */\n  async getPasswordAuthenticationKey({\n    username,\n    password,\n    serverBValue,\n    salt\n  }) {\n    if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n      throw new Error('B cannot be zero.');\n    }\n    const U = calculateU({\n      A: this.A,\n      B: serverBValue\n    });\n    const usernamePassword = `${this.userPoolName}${username}:${password}`;\n    const usernamePasswordHash = getHashFromData(usernamePassword);\n    const x = new BigInteger(getHashFromHex(getPaddedHex(salt) + usernamePasswordHash), 16);\n    const S = await calculateS({\n      a: this.a,\n      g: this.g,\n      k: this.k,\n      x,\n      B: serverBValue,\n      N: this.N,\n      U\n    });\n    const context = this.encoder.convert('Caldera Derived Key');\n    const spacer = this.encoder.convert(String.fromCharCode(1));\n    const info = new Uint8Array(context.byteLength + spacer.byteLength);\n    info.set(context, 0);\n    info.set(spacer, context.byteLength);\n    const hkdfKey = getHkdfKey(getBytesFromHex(getPaddedHex(S)), getBytesFromHex(getPaddedHex(U)), info);\n    return hkdfKey;\n  }\n}\nexport { AuthenticationHelper as default };\n", "import BigInteger from '../BigInteger/BigInteger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateA = async ({\n  a,\n  g,\n  N\n}) => {\n  return new Promise((resolve, reject) => {\n    g.modPow(a, N, (err, A) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      if (A.mod(N).equals(BigInteger.ZERO)) {\n        reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n        return;\n      }\n      resolve(A);\n    });\n  });\n};\nexport { calculateA };\n", "import AuthenticationHelper from './AuthenticationHelper/AuthenticationHelper.mjs';\nimport BigInteger from './BigInteger/BigInteger.mjs';\nimport { calculateA } from './calculate/calculateA.mjs';\nimport { INIT_N } from './constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes.mjs';\nimport { getRandomBytes } from './getRandomBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a new {@link AuthenticationHelper} instance with randomly generated BigInteger seed\n *\n * @param userPoolName Cognito user pool name.\n * @returns An {@link AuthenticationHelper} instance.\n *\n * @internal\n */\nconst getAuthenticationHelper = async userPoolName => {\n  const N = new BigInteger(INIT_N, 16);\n  const g = new BigInteger('2', 16);\n  const a = generateRandomBigInteger();\n  const A = await calculateA({\n    a,\n    g,\n    N\n  });\n  return new AuthenticationHelper({\n    userPoolName,\n    a,\n    g,\n    A,\n    N\n  });\n};\n/**\n * Generates a random BigInteger.\n *\n * @returns {BigInteger} a random value.\n */\nconst generateRandomBigInteger = () => {\n  // This will be interpreted as a postive 128-bit integer\n  const hexRandom = getHexFromBytes(getRandomBytes(128));\n  // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n  return new BigInteger(hexRandom, 16);\n};\nexport { getAuthenticationHelper };\n", "import { base64Encoder, getDeviceName } from '@aws-amplify/core/internals/utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createConfirmDeviceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmDeviceClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthenticationHelper } from './srp/getAuthenticationHelper.mjs';\nimport { getBytesFromHex } from './srp/getBytesFromHex.mjs';\nimport '@aws-crypto/sha256-js';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * This function is used to kick off the device management flow.\n *\n * If an error is thrown while generating a hash device or calling the `ConfirmDevice`\n * client, then this API will ignore the error and return undefined. Otherwise the authentication\n * flow will not complete and the user won't be able to be signed in.\n *\n * @returns DeviceMetadata | undefined\n */\nasync function getNewDeviceMetadata({\n  userPoolId,\n  userPoolEndpoint,\n  newDeviceMetadata,\n  accessToken\n}) {\n  if (!newDeviceMetadata) return undefined;\n  const userPoolName = userPoolId.split('_')[1] || '';\n  const authenticationHelper = await getAuthenticationHelper(userPoolName);\n  const deviceKey = newDeviceMetadata?.DeviceKey;\n  const deviceGroupKey = newDeviceMetadata?.DeviceGroupKey;\n  try {\n    await authenticationHelper.generateHashDevice(deviceGroupKey ?? '', deviceKey ?? '');\n  } catch (errGenHash) {\n    // TODO: log error here\n    return undefined;\n  }\n  const deviceSecretVerifierConfig = {\n    Salt: base64Encoder.convert(getBytesFromHex(authenticationHelper.getSaltToHashDevices())),\n    PasswordVerifier: base64Encoder.convert(getBytesFromHex(authenticationHelper.getVerifierDevices()))\n  };\n  const randomPassword = authenticationHelper.getRandomPassword();\n  try {\n    const confirmDevice = createConfirmDeviceClient({\n      endpointResolver: createCognitoUserPoolEndpointResolver({\n        endpointOverride: userPoolEndpoint\n      })\n    });\n    await confirmDevice({\n      region: getRegionFromUserPoolId(userPoolId)\n    }, {\n      AccessToken: accessToken,\n      DeviceName: await getDeviceName(),\n      DeviceKey: newDeviceMetadata?.DeviceKey,\n      DeviceSecretVerifierConfig: deviceSecretVerifierConfig\n    });\n    return {\n      deviceKey,\n      deviceGroupKey,\n      randomPassword\n    };\n  } catch (error) {\n    // TODO: log error here\n    return undefined;\n  }\n}\nexport { getNewDeviceMetadata };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { cacheCognitoTokens } from '../../../providers/cognito/tokenProvider/cacheTokens.mjs';\nimport { dispatchSignedInHubEvent } from '../../../providers/cognito/utils/dispatchSignedInHubEvent.mjs';\nimport '../../utils/store/autoSignInStore.mjs';\nimport { signInStore, setActiveSignInState } from '../../utils/store/signInStore.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { assertPasskeyError, PasskeyErrorCode } from '../../utils/passkey/errors.mjs';\nimport { getPasskey } from '../../utils/passkey/getPasskey.mjs';\nimport { getNewDeviceMetadata } from '../../../providers/cognito/utils/getNewDeviceMetadata.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function handleWebAuthnSignInResult(challengeParameters) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    username,\n    signInSession,\n    signInDetails,\n    challengeName\n  } = signInStore.getState();\n  if (challengeName !== 'WEB_AUTHN' || !username) {\n    throw new AuthError({\n      name: AuthErrorCodes.SignInException,\n      message: 'Unable to proceed due to invalid sign in state.'\n    });\n  }\n  const {\n    CREDENTIAL_REQUEST_OPTIONS: credentialRequestOptions\n  } = challengeParameters;\n  assertPasskeyError(!!credentialRequestOptions, PasskeyErrorCode.InvalidPasskeyAuthenticationOptions);\n  const cred = await getPasskey(JSON.parse(credentialRequestOptions));\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: authConfig.userPoolEndpoint\n    })\n  });\n  const {\n    ChallengeName: nextChallengeName,\n    ChallengeParameters: nextChallengeParameters,\n    AuthenticationResult: authenticationResult,\n    Session: nextSession\n  } = await respondToAuthChallenge({\n    region: getRegionFromUserPoolId(authConfig.userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n  }, {\n    ChallengeName: 'WEB_AUTHN',\n    ChallengeResponses: {\n      USERNAME: username,\n      CREDENTIAL: JSON.stringify(cred)\n    },\n    ClientId: authConfig.userPoolClientId,\n    Session: signInSession\n  });\n  setActiveSignInState({\n    signInSession: nextSession,\n    username,\n    challengeName: nextChallengeName,\n    signInDetails\n  });\n  if (authenticationResult) {\n    await cacheCognitoTokens({\n      ...authenticationResult,\n      username,\n      NewDeviceMetadata: await getNewDeviceMetadata({\n        userPoolId: authConfig.userPoolId,\n        userPoolEndpoint: authConfig.userPoolEndpoint,\n        newDeviceMetadata: authenticationResult.NewDeviceMetadata,\n        accessToken: authenticationResult.AccessToken\n      }),\n      signInDetails\n    });\n    signInStore.dispatch({\n      type: 'RESET_STATE'\n    });\n    await dispatchSignedInHubEvent();\n    return {\n      isSignedIn: true,\n      nextStep: {\n        signInStep: 'DONE'\n      }\n    };\n  }\n  if (nextChallengeName === 'WEB_AUTHN') {\n    throw new AuthError({\n      name: AuthErrorCodes.SignInException,\n      message: 'Sequential WEB_AUTHN challenges returned from underlying service cannot be handled.'\n    });\n  }\n  return {\n    challengeName: nextChallengeName,\n    challengeParameters: nextChallengeParameters\n  };\n}\nexport { handleWebAuthnSignInResult };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst WEEK_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst getNowString = () => {\n  const now = new Date();\n  const weekDay = WEEK_NAMES[now.getUTCDay()];\n  const month = MONTH_NAMES[now.getUTCMonth()];\n  const day = now.getUTCDate();\n  let hours = now.getUTCHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  let minutes = now.getUTCMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  let seconds = now.getUTCSeconds();\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n  const year = now.getUTCFullYear();\n  // ddd MMM D HH:mm:ss UTC YYYY\n  const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n  return dateNow;\n};\nexport { getNowString };\n", "import { Sha256 } from '@aws-crypto/sha256-js';\nimport { base64Encoder, base64Decoder } from '@aws-amplify/core/internals/utils';\nimport { textEncoder } from '../textEncoder/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getSignatureString = ({\n  userPoolName,\n  username,\n  challengeParameters,\n  dateNow,\n  hkdf\n}) => {\n  const bufUPIDaToB = textEncoder.convert(userPoolName);\n  const bufUNaToB = textEncoder.convert(username);\n  const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n  const bufDNaToB = textEncoder.convert(dateNow);\n  const bufConcat = new Uint8Array(bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength + bufDNaToB.byteLength);\n  bufConcat.set(bufUPIDaToB, 0);\n  bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n  bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n  bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n  const awsCryptoHash = new Sha256(hkdf);\n  awsCryptoHash.update(bufConcat);\n  const resultFromAWSCrypto = awsCryptoHash.digestSync();\n  const signatureString = base64Encoder.convert(resultFromAWSCrypto);\n  return signatureString;\n};\nconst urlB64ToUint8Array = base64String => {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n  const rawData = base64Decoder.convert(base64);\n  const outputArray = new Uint8Array(rawData.length);\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n};\nexport { getSignatureString };\n", "import '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertDeviceMetadata } from './types.mjs';\nimport { getAuthenticationHelper } from './srp/getAuthenticationHelper.mjs';\nimport './srp/constants.mjs';\nimport { getNowString } from './srp/getNowString.mjs';\nimport { getSignatureString } from './srp/getSignatureString.mjs';\nimport BigInteger from './srp/BigInteger/BigInteger.mjs';\nimport { getUserContextData } from './userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function handleDeviceSRPAuth({\n  username,\n  config,\n  clientMetadata,\n  session,\n  tokenOrchestrator\n}) {\n  const {\n    userPoolId,\n    userPoolEndpoint\n  } = config;\n  const clientId = config.userPoolClientId;\n  const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n  assertDeviceMetadata(deviceMetadata);\n  const authenticationHelper = await getAuthenticationHelper(deviceMetadata.deviceGroupKey);\n  const challengeResponses = {\n    USERNAME: username,\n    SRP_A: authenticationHelper.A.toString(16),\n    DEVICE_KEY: deviceMetadata.deviceKey\n  };\n  const jsonReqResponseChallenge = {\n    ChallengeName: 'DEVICE_SRP_AUTH',\n    ClientId: clientId,\n    ChallengeResponses: challengeResponses,\n    ClientMetadata: clientMetadata,\n    Session: session\n  };\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    ChallengeParameters: respondedChallengeParameters,\n    Session\n  } = await respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId)\n  }, jsonReqResponseChallenge);\n  return handleDevicePasswordVerifier(username, respondedChallengeParameters, clientMetadata, Session, authenticationHelper, config, tokenOrchestrator);\n}\nasync function handleDevicePasswordVerifier(username, challengeParameters, clientMetadata, session, authenticationHelper, {\n  userPoolId,\n  userPoolClientId,\n  userPoolEndpoint\n}, tokenOrchestrator) {\n  const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n  assertDeviceMetadata(deviceMetadata);\n  const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n  const salt = new BigInteger(challengeParameters?.SALT, 16);\n  const {\n    deviceKey\n  } = deviceMetadata;\n  const {\n    deviceGroupKey\n  } = deviceMetadata;\n  const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n    username: deviceMetadata.deviceKey,\n    password: deviceMetadata.randomPassword,\n    serverBValue,\n    salt\n  });\n  const dateNow = getNowString();\n  const challengeResponses = {\n    USERNAME: challengeParameters?.USERNAME ?? username,\n    PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n    TIMESTAMP: dateNow,\n    PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n      username: deviceKey,\n      userPoolName: deviceGroupKey,\n      challengeParameters,\n      dateNow,\n      hkdf\n    }),\n    DEVICE_KEY: deviceKey\n  };\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReqResponseChallenge = {\n    ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n    ClientId: userPoolClientId,\n    ChallengeResponses: challengeResponses,\n    Session: session,\n    ClientMetadata: clientMetadata,\n    UserContextData\n  };\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  return respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId)\n  }, jsonReqResponseChallenge);\n}\nexport { handleDeviceSRPAuth };\n", "import { AuthError } from '../../../errors/AuthError.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport BigInteger from './srp/BigInteger/BigInteger.mjs';\nimport './srp/constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { getNowString } from './srp/getNowString.mjs';\nimport { getSignatureString } from './srp/getSignatureString.mjs';\nimport { getUserContextData } from './userContextData.mjs';\nimport { handleDeviceSRPAuth } from './handleDeviceSRPAuth.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function handlePasswordVerifierChallenge(password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const userPoolName = userPoolId?.split('_')[1] || '';\n  const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n  const salt = new BigInteger(challengeParameters?.SALT, 16);\n  const username = challengeParameters?.USER_ID_FOR_SRP;\n  if (!username) throw new AuthError({\n    name: 'EmptyUserIdForSRPException',\n    message: 'USER_ID_FOR_SRP was not found in challengeParameters'\n  });\n  const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n    username,\n    password,\n    serverBValue,\n    salt\n  });\n  const dateNow = getNowString();\n  const challengeResponses = {\n    USERNAME: username,\n    PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n    TIMESTAMP: dateNow,\n    PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n      username,\n      userPoolName,\n      challengeParameters,\n      dateNow,\n      hkdf\n    })\n  };\n  const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n  if (deviceMetadata && deviceMetadata.deviceKey) {\n    challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n  }\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReqResponseChallenge = {\n    ChallengeName: 'PASSWORD_VERIFIER',\n    ChallengeResponses: challengeResponses,\n    ClientMetadata: clientMetadata,\n    Session: session,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const response = await respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId)\n  }, jsonReqResponseChallenge);\n  if (response.ChallengeName === 'DEVICE_SRP_AUTH') return handleDeviceSRPAuth({\n    username,\n    config,\n    clientMetadata,\n    session: response.Session,\n    tokenOrchestrator\n  });\n  return response;\n}\nexport { handlePasswordVerifierChallenge };\n", "import { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * It will retry the function if the error is a `ResourceNotFoundException` and\n * will clean the device keys stored in the storage mechanism.\n *\n */\nasync function retryOnResourceNotFoundException(func, args, username, tokenOrchestrator) {\n  try {\n    return await func(...args);\n  } catch (error) {\n    if (error instanceof AuthError && error.name === 'ResourceNotFoundException' && error.message.includes('Device does not exist.')) {\n      await tokenOrchestrator.clearDeviceMetadata(username);\n      return func(...args);\n    }\n    throw error;\n  }\n}\nexport { retryOnResourceNotFoundException };\n", "import '../../../client/utils/store/autoSignInStore.mjs';\nimport { signInStore } from '../../../client/utils/store/signInStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction setActiveSignInUsername(username) {\n  const {\n    dispatch\n  } = signInStore;\n  dispatch({\n    type: 'SET_USERNAME',\n    value: username\n  });\n}\nexport { setActiveSignInUsername };\n", "import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData.mjs';\nimport { getAuthenticationHelper } from '../../../providers/cognito/utils/srp/getAuthenticationHelper.mjs';\nimport '../../../providers/cognito/utils/srp/constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { handlePasswordVerifierChallenge } from '../../../providers/cognito/utils/handlePasswordVerifierChallenge.mjs';\nimport { retryOnResourceNotFoundException } from '../../../providers/cognito/utils/retryOnResourceNotFoundException.mjs';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/setActiveSignInUsername.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles the Password SRP (Secure Remote Password) authentication flow.\n * This function can be used with both USER_SRP_AUTH and USER_AUTH flows.\n *\n * @param {Object} params - The parameters for the Password SRP authentication\n * @param {string} params.username - The username for authentication\n * @param {string} params.password - The user's password\n * @param {ClientMetadata} [params.clientMetadata] - Optional metadata to be sent with auth requests\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {AuthTokenOrchestrator} params.tokenOrchestrator - Token orchestrator for managing auth tokens\n * @param {AuthFlowType} params.authFlow - The type of authentication flow ('USER_SRP_AUTH' or 'USER_AUTH')\n * @param {AuthFactorType} [params.preferredChallenge] - Optional preferred challenge type when using USER_AUTH flow\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The authentication response\n */\nasync function handlePasswordSRP({\n  username,\n  password,\n  clientMetadata,\n  config,\n  tokenOrchestrator,\n  authFlow,\n  preferredChallenge\n}) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const userPoolName = userPoolId?.split('_')[1] || '';\n  const authenticationHelper = await getAuthenticationHelper(userPoolName);\n  const authParameters = {\n    USERNAME: username,\n    SRP_A: authenticationHelper.A.toString(16)\n  };\n  if (authFlow === 'USER_AUTH' && preferredChallenge) {\n    authParameters.PREFERRED_CHALLENGE = preferredChallenge;\n  }\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReq = {\n    AuthFlow: authFlow,\n    AuthParameters: authParameters,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  const initiateAuth = createInitiateAuthClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const resp = await initiateAuth({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.SignIn)\n  }, jsonReq);\n  const {\n    ChallengeParameters: challengeParameters,\n    Session: session\n  } = resp;\n  const activeUsername = challengeParameters?.USERNAME ?? username;\n  setActiveSignInUsername(activeUsername);\n  if (resp.ChallengeName === 'PASSWORD_VERIFIER') {\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator], activeUsername, tokenOrchestrator);\n  }\n  return resp;\n}\nexport { handlePasswordSRP };\n", "import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles the SELECT_CHALLENGE response for authentication.\n * Initiates the selected authentication challenge based on user choice.\n *\n * @param {Object} params - The parameters for handling the selected challenge\n * @param {string} params.username - The username for authentication\n * @param {string} params.session - The current authentication session token\n * @param {string} params.selectedChallenge - The challenge type selected by the user\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {ClientMetadata} [params.clientMetadata] - Optional metadata to be sent with auth requests\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The challenge response\n */\nasync function initiateSelectedChallenge({\n  username,\n  session,\n  selectedChallenge,\n  config,\n  clientMetadata\n}) {\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: config.userPoolEndpoint\n    })\n  });\n  return respondToAuthChallenge({\n    region: getRegionFromUserPoolId(config.userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n  }, {\n    ChallengeName: 'SELECT_CHALLENGE',\n    ChallengeResponses: {\n      USERNAME: username,\n      ANSWER: selectedChallenge\n    },\n    ClientId: config.userPoolClientId,\n    Session: session,\n    ClientMetadata: clientMetadata\n  });\n}\nexport { initiateSelectedChallenge };\n", "import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData.mjs';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/setActiveSignInUsername.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles the SELECT_CHALLENGE response specifically for Password authentication.\n * This function combines the SELECT_CHALLENGE flow with standard password authentication.\n *\n * @param {string} username - The username for authentication\n * @param {string} password - The user's password\n * @param {ClientMetadata} [clientMetadata] - Optional metadata to be sent with auth requests\n * @param {CognitoUserPoolConfig} config - Cognito User Pool configuration\n * @param {string} session - The current authentication session token\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The challenge response\n */\nasync function handleSelectChallengeWithPassword(username, password, clientMetadata, config, session) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const authParameters = {\n    ANSWER: 'PASSWORD',\n    USERNAME: username,\n    PASSWORD: password\n  };\n  const userContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const response = await respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n  }, {\n    ChallengeName: 'SELECT_CHALLENGE',\n    ChallengeResponses: authParameters,\n    ClientId: userPoolClientId,\n    ClientMetadata: clientMetadata,\n    Session: session,\n    UserContextData: userContextData\n  });\n  const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n  setActiveSignInUsername(activeUsername);\n  return response;\n}\nexport { handleSelectChallengeWithPassword };\n", "import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getAuthenticationHelper } from '../../../providers/cognito/utils/srp/getAuthenticationHelper.mjs';\nimport '../../../providers/cognito/utils/srp/constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData.mjs';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/setActiveSignInUsername.mjs';\nimport { retryOnResourceNotFoundException } from '../../../providers/cognito/utils/retryOnResourceNotFoundException.mjs';\nimport { handlePasswordVerifierChallenge } from '../../../providers/cognito/utils/handlePasswordVerifierChallenge.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles the SELECT_CHALLENGE response specifically for Password SRP authentication.\n * This function combines the SELECT_CHALLENGE flow with Password SRP protocol.\n *\n * @param {string} username - The username for authentication\n * @param {string} password - The user's password\n * @param {ClientMetadata} [clientMetadata] - Optional metadata to be sent with auth requests\n * @param {CognitoUserPoolConfig} config - Cognito User Pool configuration\n * @param {string} session - The current authentication session token\n * @param {AuthTokenOrchestrator} tokenOrchestrator - Token orchestrator for managing auth tokens\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The challenge response\n */\nasync function handleSelectChallengeWithPasswordSRP(username, password, clientMetadata, config, session, tokenOrchestrator) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const userPoolName = userPoolId.split('_')[1] || '';\n  const authenticationHelper = await getAuthenticationHelper(userPoolName);\n  const authParameters = {\n    ANSWER: 'PASSWORD_SRP',\n    USERNAME: username,\n    SRP_A: authenticationHelper.A.toString(16)\n  };\n  const userContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const response = await respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n  }, {\n    ChallengeName: 'SELECT_CHALLENGE',\n    ChallengeResponses: authParameters,\n    ClientId: userPoolClientId,\n    ClientMetadata: clientMetadata,\n    Session: session,\n    UserContextData: userContextData\n  });\n  const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n  setActiveSignInUsername(activeUsername);\n  if (response.ChallengeName === 'PASSWORD_VERIFIER') {\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [password, response.ChallengeParameters, clientMetadata, response.Session, authenticationHelper, config, tokenOrchestrator], activeUsername, tokenOrchestrator);\n  }\n  return response;\n}\nexport { handleSelectChallengeWithPasswordSRP };\n", "import { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { InitiateAuthException } from '../types/errors.mjs';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { USER_ALREADY_AUTHENTICATED_EXCEPTION } from '../../../errors/constants.mjs';\nimport { getCurrentUser } from '../apis/getCurrentUser.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createVerifySoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createVerifySoftwareTokenClient.mjs';\nimport { createAssociateSoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { handleWebAuthnSignInResult } from '../../../client/flows/userAuth/handleWebAuthnSignInResult.mjs';\nimport { handlePasswordSRP } from '../../../client/flows/shared/handlePasswordSRP.mjs';\nimport { initiateSelectedChallenge } from '../../../client/flows/userAuth/handleSelectChallenge.mjs';\nimport { handleSelectChallengeWithPassword } from '../../../client/flows/userAuth/handleSelectChallengeWithPassword.mjs';\nimport { handleSelectChallengeWithPasswordSRP } from '../../../client/flows/userAuth/handleSelectChallengeWithPasswordSRP.mjs';\nimport '../../../client/utils/store/autoSignInStore.mjs';\nimport { signInStore } from '../../../client/utils/store/signInStore.mjs';\nimport { getAuthenticationHelper } from './srp/getAuthenticationHelper.mjs';\nimport './srp/constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { getUserContextData } from './userContextData.mjs';\nimport { handlePasswordVerifierChallenge } from './handlePasswordVerifierChallenge.mjs';\nimport { handleDeviceSRPAuth } from './handleDeviceSRPAuth.mjs';\nimport { retryOnResourceNotFoundException } from './retryOnResourceNotFoundException.mjs';\nimport { setActiveSignInUsername } from './setActiveSignInUsername.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst USER_ATTRIBUTES = 'userAttributes.';\nfunction isWebAuthnResultAuthSignInOutput(result) {\n  return 'isSignedIn' in result && 'nextStep' in result;\n}\nasync function handleCustomChallenge({\n  challengeResponse,\n  clientMetadata,\n  session,\n  username,\n  config,\n  tokenOrchestrator\n}) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const challengeResponses = {\n    USERNAME: username,\n    ANSWER: challengeResponse\n  };\n  const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n  if (deviceMetadata && deviceMetadata.deviceKey) {\n    challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n  }\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReq = {\n    ChallengeName: 'CUSTOM_CHALLENGE',\n    ChallengeResponses: challengeResponses,\n    Session: session,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const response = await respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n  }, jsonReq);\n  if (response.ChallengeName === 'DEVICE_SRP_AUTH') {\n    return handleDeviceSRPAuth({\n      username,\n      config,\n      clientMetadata,\n      session: response.Session,\n      tokenOrchestrator\n    });\n  }\n  return response;\n}\nasync function handleMFASetupChallenge({\n  challengeResponse,\n  username,\n  clientMetadata,\n  session,\n  deviceName,\n  config\n}) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  if (challengeResponse === 'EMAIL') {\n    return {\n      ChallengeName: 'MFA_SETUP',\n      Session: session,\n      ChallengeParameters: {\n        MFAS_CAN_SETUP: '[\"EMAIL_OTP\"]'\n      },\n      $metadata: {}\n    };\n  }\n  if (challengeResponse === 'TOTP') {\n    return {\n      ChallengeName: 'MFA_SETUP',\n      Session: session,\n      ChallengeParameters: {\n        MFAS_CAN_SETUP: '[\"SOFTWARE_TOKEN_MFA\"]'\n      },\n      $metadata: {}\n    };\n  }\n  const challengeResponses = {\n    USERNAME: username\n  };\n  const isTOTPCode = /^\\d+$/.test(challengeResponse);\n  if (isTOTPCode) {\n    const verifySoftwareToken = createVerifySoftwareTokenClient({\n      endpointResolver: createCognitoUserPoolEndpointResolver({\n        endpointOverride: userPoolEndpoint\n      })\n    });\n    const {\n      Session\n    } = await verifySoftwareToken({\n      region: getRegionFromUserPoolId(userPoolId),\n      userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n    }, {\n      UserCode: challengeResponse,\n      Session: session,\n      FriendlyDeviceName: deviceName\n    });\n    signInStore.dispatch({\n      type: 'SET_SIGN_IN_SESSION',\n      value: Session\n    });\n    const jsonReq = {\n      ChallengeName: 'MFA_SETUP',\n      ChallengeResponses: challengeResponses,\n      Session,\n      ClientMetadata: clientMetadata,\n      ClientId: userPoolClientId\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n      endpointResolver: createCognitoUserPoolEndpointResolver({\n        endpointOverride: userPoolEndpoint\n      })\n    });\n    return respondToAuthChallenge({\n      region: getRegionFromUserPoolId(userPoolId),\n      userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n    }, jsonReq);\n  }\n  const isEmail = challengeResponse.includes('@');\n  if (isEmail) {\n    challengeResponses.EMAIL = challengeResponse;\n    const jsonReq = {\n      ChallengeName: 'MFA_SETUP',\n      ChallengeResponses: challengeResponses,\n      Session: session,\n      ClientMetadata: clientMetadata,\n      ClientId: userPoolClientId\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n      endpointResolver: createCognitoUserPoolEndpointResolver({\n        endpointOverride: userPoolEndpoint\n      })\n    });\n    return respondToAuthChallenge({\n      region: getRegionFromUserPoolId(userPoolId),\n      userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n    }, jsonReq);\n  }\n  throw new AuthError({\n    name: AuthErrorCodes.SignInException,\n    message: `Cannot proceed with MFA setup using challengeResponse: ${challengeResponse}`,\n    recoverySuggestion: 'Try passing \"EMAIL\", \"TOTP\", a valid email, or OTP code as the challengeResponse.'\n  });\n}\nasync function handleSelectMFATypeChallenge({\n  challengeResponse,\n  username,\n  clientMetadata,\n  session,\n  config\n}) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  assertValidationError(challengeResponse === 'TOTP' || challengeResponse === 'SMS' || challengeResponse === 'EMAIL', AuthValidationErrorCode.IncorrectMFAMethod);\n  const challengeResponses = {\n    USERNAME: username,\n    ANSWER: mapMfaType(challengeResponse)\n  };\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReq = {\n    ChallengeName: 'SELECT_MFA_TYPE',\n    ChallengeResponses: challengeResponses,\n    Session: session,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  return respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n  }, jsonReq);\n}\nasync function handleCompleteNewPasswordChallenge({\n  challengeResponse,\n  clientMetadata,\n  session,\n  username,\n  requiredAttributes,\n  config\n}) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const challengeResponses = {\n    ...createAttributes(requiredAttributes),\n    NEW_PASSWORD: challengeResponse,\n    USERNAME: username\n  };\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReq = {\n    ChallengeName: 'NEW_PASSWORD_REQUIRED',\n    ChallengeResponses: challengeResponses,\n    ClientMetadata: clientMetadata,\n    Session: session,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  return respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n  }, jsonReq);\n}\nasync function handleUserPasswordAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n  const {\n    userPoolClientId,\n    userPoolId,\n    userPoolEndpoint\n  } = config;\n  const authParameters = {\n    USERNAME: username,\n    PASSWORD: password\n  };\n  const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n  if (deviceMetadata && deviceMetadata.deviceKey) {\n    authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n  }\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReq = {\n    AuthFlow: 'USER_PASSWORD_AUTH',\n    AuthParameters: authParameters,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  const initiateAuth = createInitiateAuthClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const response = await initiateAuth({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.SignIn)\n  }, jsonReq);\n  const activeUsername = response.ChallengeParameters?.USERNAME ?? response.ChallengeParameters?.USER_ID_FOR_SRP ?? username;\n  setActiveSignInUsername(activeUsername);\n  if (response.ChallengeName === 'DEVICE_SRP_AUTH') return handleDeviceSRPAuth({\n    username: activeUsername,\n    config,\n    clientMetadata,\n    session: response.Session,\n    tokenOrchestrator\n  });\n  return response;\n}\nasync function handleUserSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n  return handlePasswordSRP({\n    username,\n    password,\n    clientMetadata,\n    config,\n    tokenOrchestrator,\n    authFlow: 'USER_SRP_AUTH'\n  });\n}\nasync function handleCustomAuthFlowWithoutSRP(username, clientMetadata, config, tokenOrchestrator) {\n  const {\n    userPoolClientId,\n    userPoolId,\n    userPoolEndpoint\n  } = config;\n  const authParameters = {\n    USERNAME: username\n  };\n  const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n  if (deviceMetadata && deviceMetadata.deviceKey) {\n    authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n  }\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReq = {\n    AuthFlow: 'CUSTOM_AUTH',\n    AuthParameters: authParameters,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  const initiateAuth = createInitiateAuthClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const response = await initiateAuth({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.SignIn)\n  }, jsonReq);\n  const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n  setActiveSignInUsername(activeUsername);\n  if (response.ChallengeName === 'DEVICE_SRP_AUTH') return handleDeviceSRPAuth({\n    username: activeUsername,\n    config,\n    clientMetadata,\n    session: response.Session,\n    tokenOrchestrator\n  });\n  return response;\n}\nasync function handleCustomSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n  assertTokenProviderConfig(config);\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const userPoolName = userPoolId?.split('_')[1] || '';\n  const authenticationHelper = await getAuthenticationHelper(userPoolName);\n  const authParameters = {\n    USERNAME: username,\n    SRP_A: authenticationHelper.A.toString(16),\n    CHALLENGE_NAME: 'SRP_A'\n  };\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReq = {\n    AuthFlow: 'CUSTOM_AUTH',\n    AuthParameters: authParameters,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  const initiateAuth = createInitiateAuthClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    ChallengeParameters: challengeParameters,\n    Session: session\n  } = await initiateAuth({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.SignIn)\n  }, jsonReq);\n  const activeUsername = challengeParameters?.USERNAME ?? username;\n  setActiveSignInUsername(activeUsername);\n  return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator], activeUsername, tokenOrchestrator);\n}\nasync function getSignInResult(params) {\n  const {\n    challengeName,\n    challengeParameters,\n    availableChallenges\n  } = params;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  switch (challengeName) {\n    case 'CUSTOM_CHALLENGE':\n      return {\n        isSignedIn: false,\n        nextStep: {\n          signInStep: 'CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE',\n          additionalInfo: challengeParameters\n        }\n      };\n    case 'MFA_SETUP':\n      {\n        const {\n          signInSession,\n          username\n        } = signInStore.getState();\n        const mfaSetupTypes = getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_SETUP)) || [];\n        const allowedMfaSetupTypes = getAllowedMfaSetupTypes(mfaSetupTypes);\n        const isTotpMfaSetupAvailable = allowedMfaSetupTypes.includes('TOTP');\n        const isEmailMfaSetupAvailable = allowedMfaSetupTypes.includes('EMAIL');\n        if (isTotpMfaSetupAvailable && isEmailMfaSetupAvailable) {\n          return {\n            isSignedIn: false,\n            nextStep: {\n              signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SETUP_SELECTION',\n              allowedMFATypes: allowedMfaSetupTypes\n            }\n          };\n        }\n        if (isEmailMfaSetupAvailable) {\n          return {\n            isSignedIn: false,\n            nextStep: {\n              signInStep: 'CONTINUE_SIGN_IN_WITH_EMAIL_SETUP'\n            }\n          };\n        }\n        if (isTotpMfaSetupAvailable) {\n          const associateSoftwareToken = createAssociateSoftwareTokenClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n              endpointOverride: authConfig.userPoolEndpoint\n            })\n          });\n          const {\n            Session,\n            SecretCode: secretCode\n          } = await associateSoftwareToken({\n            region: getRegionFromUserPoolId(authConfig.userPoolId)\n          }, {\n            Session: signInSession\n          });\n          signInStore.dispatch({\n            type: 'SET_SIGN_IN_SESSION',\n            value: Session\n          });\n          return {\n            isSignedIn: false,\n            nextStep: {\n              signInStep: 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP',\n              totpSetupDetails: getTOTPSetupDetails(secretCode, username)\n            }\n          };\n        }\n        throw new AuthError({\n          name: AuthErrorCodes.SignInException,\n          message: `Cannot initiate MFA setup from available types: ${mfaSetupTypes}`\n        });\n      }\n    case 'NEW_PASSWORD_REQUIRED':\n      return {\n        isSignedIn: false,\n        nextStep: {\n          signInStep: 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED',\n          missingAttributes: parseAttributes(challengeParameters.requiredAttributes)\n        }\n      };\n    case 'SELECT_MFA_TYPE':\n      return {\n        isSignedIn: false,\n        nextStep: {\n          signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION',\n          allowedMFATypes: getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_CHOOSE))\n        }\n      };\n    case 'SMS_OTP':\n    case 'SMS_MFA':\n      return {\n        isSignedIn: false,\n        nextStep: {\n          signInStep: 'CONFIRM_SIGN_IN_WITH_SMS_CODE',\n          codeDeliveryDetails: {\n            deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n            destination: challengeParameters.CODE_DELIVERY_DESTINATION\n          }\n        }\n      };\n    case 'SOFTWARE_TOKEN_MFA':\n      return {\n        isSignedIn: false,\n        nextStep: {\n          signInStep: 'CONFIRM_SIGN_IN_WITH_TOTP_CODE'\n        }\n      };\n    case 'EMAIL_OTP':\n      return {\n        isSignedIn: false,\n        nextStep: {\n          signInStep: 'CONFIRM_SIGN_IN_WITH_EMAIL_CODE',\n          codeDeliveryDetails: {\n            deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n            destination: challengeParameters.CODE_DELIVERY_DESTINATION\n          }\n        }\n      };\n    case 'WEB_AUTHN':\n      {\n        const result = await handleWebAuthnSignInResult(challengeParameters);\n        if (isWebAuthnResultAuthSignInOutput(result)) {\n          return result;\n        }\n        return getSignInResult(result);\n      }\n    case 'PASSWORD':\n    case 'PASSWORD_SRP':\n      return {\n        isSignedIn: false,\n        nextStep: {\n          signInStep: 'CONFIRM_SIGN_IN_WITH_PASSWORD'\n        }\n      };\n    case 'SELECT_CHALLENGE':\n      return {\n        isSignedIn: false,\n        nextStep: {\n          signInStep: 'CONTINUE_SIGN_IN_WITH_FIRST_FACTOR_SELECTION',\n          availableChallenges\n        }\n      };\n  }\n  // TODO: remove this error message for production apps\n  throw new AuthError({\n    name: AuthErrorCodes.SignInException,\n    message: 'An error occurred during the sign in process. ' + `${challengeName} challengeName returned by the underlying service was not addressed.`\n  });\n}\nfunction getTOTPSetupDetails(secretCode, username) {\n  return {\n    sharedSecret: secretCode,\n    getSetupUri: (appName, accountName) => {\n      const totpUri = `otpauth://totp/${appName}:${accountName ?? username}?secret=${secretCode}&issuer=${appName}`;\n      return new AmplifyUrl(totpUri);\n    }\n  };\n}\nfunction getSignInResultFromError(errorName) {\n  if (errorName === InitiateAuthException.PasswordResetRequiredException) {\n    return {\n      isSignedIn: false,\n      nextStep: {\n        signInStep: 'RESET_PASSWORD'\n      }\n    };\n  } else if (errorName === InitiateAuthException.UserNotConfirmedException) {\n    return {\n      isSignedIn: false,\n      nextStep: {\n        signInStep: 'CONFIRM_SIGN_UP'\n      }\n    };\n  }\n}\nfunction parseAttributes(attributes) {\n  if (!attributes) return [];\n  const parsedAttributes = JSON.parse(attributes).map(att => att.includes(USER_ATTRIBUTES) ? att.replace(USER_ATTRIBUTES, '') : att);\n  return parsedAttributes;\n}\nfunction createAttributes(attributes) {\n  if (!attributes) return {};\n  const newAttributes = {};\n  Object.entries(attributes).forEach(([key, value]) => {\n    if (value) newAttributes[`${USER_ATTRIBUTES}${key}`] = value;\n  });\n  return newAttributes;\n}\nasync function handleChallengeName(username, challengeName, session, challengeResponse, config, tokenOrchestrator, clientMetadata, options) {\n  const userAttributes = options?.userAttributes;\n  const deviceName = options?.friendlyDeviceName;\n  switch (challengeName) {\n    case 'WEB_AUTHN':\n    case 'SELECT_CHALLENGE':\n      if (challengeResponse === 'PASSWORD_SRP' || challengeResponse === 'PASSWORD') {\n        return {\n          ChallengeName: challengeResponse,\n          Session: session,\n          $metadata: {}\n        };\n      }\n      return initiateSelectedChallenge({\n        username,\n        session,\n        selectedChallenge: challengeResponse,\n        config,\n        clientMetadata\n      });\n    case 'SELECT_MFA_TYPE':\n      return handleSelectMFATypeChallenge({\n        challengeResponse,\n        clientMetadata,\n        session,\n        username,\n        config\n      });\n    case 'MFA_SETUP':\n      return handleMFASetupChallenge({\n        challengeResponse,\n        clientMetadata,\n        session,\n        username,\n        deviceName,\n        config\n      });\n    case 'NEW_PASSWORD_REQUIRED':\n      return handleCompleteNewPasswordChallenge({\n        challengeResponse,\n        clientMetadata,\n        session,\n        username,\n        requiredAttributes: userAttributes,\n        config\n      });\n    case 'CUSTOM_CHALLENGE':\n      return retryOnResourceNotFoundException(handleCustomChallenge, [{\n        challengeResponse,\n        clientMetadata,\n        session,\n        username,\n        config,\n        tokenOrchestrator\n      }], username, tokenOrchestrator);\n    case 'SMS_MFA':\n    case 'SOFTWARE_TOKEN_MFA':\n    case 'SMS_OTP':\n    case 'EMAIL_OTP':\n      return handleMFAChallenge({\n        challengeName,\n        challengeResponse,\n        clientMetadata,\n        session,\n        username,\n        config\n      });\n    case 'PASSWORD':\n      return handleSelectChallengeWithPassword(username, challengeResponse, clientMetadata, config, session);\n    case 'PASSWORD_SRP':\n      return handleSelectChallengeWithPasswordSRP(username, challengeResponse,\n      // This is the actual password\n      clientMetadata, config, session, tokenOrchestrator);\n  }\n  // TODO: remove this error message for production apps\n  throw new AuthError({\n    name: AuthErrorCodes.SignInException,\n    message: `An error occurred during the sign in process.\n\t\t${challengeName} challengeName returned by the underlying service was not addressed.`\n  });\n}\nfunction mapMfaType(mfa) {\n  let mfaType = 'SMS_MFA';\n  if (mfa === 'TOTP') mfaType = 'SOFTWARE_TOKEN_MFA';\n  if (mfa === 'EMAIL') mfaType = 'EMAIL_OTP';\n  return mfaType;\n}\nfunction getMFAType(type) {\n  if (type === 'SMS_MFA') return 'SMS';\n  if (type === 'SOFTWARE_TOKEN_MFA') return 'TOTP';\n  if (type === 'EMAIL_OTP') return 'EMAIL';\n  // TODO: log warning for unknown MFA type\n}\nfunction getMFATypes(types) {\n  if (!types) return undefined;\n  return types.map(getMFAType).filter(Boolean);\n}\nfunction parseMFATypes(mfa) {\n  if (!mfa) return [];\n  return JSON.parse(mfa);\n}\nfunction getAllowedMfaSetupTypes(availableMfaSetupTypes) {\n  return availableMfaSetupTypes.filter(authMfaType => authMfaType === 'EMAIL' || authMfaType === 'TOTP');\n}\nasync function assertUserNotAuthenticated() {\n  let authUser;\n  try {\n    authUser = await getCurrentUser();\n  } catch (error) {}\n  if (authUser && authUser.userId && authUser.username) {\n    throw new AuthError({\n      name: USER_ALREADY_AUTHENTICATED_EXCEPTION,\n      message: 'There is already a signed in user.',\n      recoverySuggestion: 'Call signOut before calling signIn again.'\n    });\n  }\n}\nfunction getActiveSignInUsername(username) {\n  const state = signInStore.getState();\n  return state.username ?? username;\n}\nasync function handleMFAChallenge({\n  challengeName,\n  challengeResponse,\n  clientMetadata,\n  session,\n  username,\n  config\n}) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const challengeResponses = {\n    USERNAME: username\n  };\n  if (challengeName === 'EMAIL_OTP') {\n    challengeResponses.EMAIL_OTP_CODE = challengeResponse;\n  }\n  if (challengeName === 'SMS_MFA') {\n    challengeResponses.SMS_MFA_CODE = challengeResponse;\n  }\n  if (challengeName === 'SMS_OTP') {\n    challengeResponses.SMS_OTP_CODE = challengeResponse;\n  }\n  if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n    challengeResponses.SOFTWARE_TOKEN_MFA_CODE = challengeResponse;\n  }\n  const userContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const jsonReq = {\n    ChallengeName: challengeName,\n    ChallengeResponses: challengeResponses,\n    Session: session,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData: userContextData\n  };\n  const respondToAuthChallenge = createRespondToAuthChallengeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  return respondToAuthChallenge({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn)\n  }, jsonReq);\n}\nexport { assertUserNotAuthenticated, createAttributes, getActiveSignInUsername, getAllowedMfaSetupTypes, getMFAType, getMFATypes, getSignInResult, getSignInResultFromError, getTOTPSetupDetails, handleChallengeName, handleCompleteNewPasswordChallenge, handleCustomAuthFlowWithoutSRP, handleCustomChallenge, handleCustomSRPAuthFlow, handleMFAChallenge, handleMFASetupChallenge, handleSelectMFATypeChallenge, handleUserPasswordAuthFlow, handleUserSRPAuthFlow, mapMfaType, parseAttributes, parseMFATypes };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { handleCustomAuthFlowWithoutSRP, getActiveSignInUsername, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { setActiveSignInState, resetActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport { retryOnResourceNotFoundException } from '../utils/retryOnResourceNotFoundException.mjs';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using a custom authentication flow without password\n *\n * @param input -  The SignInWithCustomAuthInput object\n * @returns AuthSignInResult\n * @throws service: {@link InitiateAuthException } - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws SignInWithCustomAuthOutput - Thrown when the token provider config is invalid.\n */\nasync function signInWithCustomAuth(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    username,\n    password,\n    options\n  } = input;\n  const signInDetails = {\n    loginId: username,\n    authFlowType: 'CUSTOM_WITHOUT_SRP'\n  };\n  const metadata = options?.clientMetadata;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n  assertValidationError(!password, AuthValidationErrorCode.CustomAuthSignInPassword);\n  try {\n    const {\n      ChallengeName: retriedChallengeName,\n      ChallengeParameters: retiredChallengeParameters,\n      AuthenticationResult,\n      Session\n    } = await retryOnResourceNotFoundException(handleCustomAuthFlowWithoutSRP, [username, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n    const activeUsername = getActiveSignInUsername(username);\n    // sets up local state used during the sign-in process\n    setActiveSignInState({\n      signInSession: Session,\n      username: activeUsername,\n      challengeName: retriedChallengeName,\n      signInDetails\n    });\n    if (AuthenticationResult) {\n      await cacheCognitoTokens({\n        username: activeUsername,\n        ...AuthenticationResult,\n        NewDeviceMetadata: await getNewDeviceMetadata({\n          userPoolId: authConfig.userPoolId,\n          userPoolEndpoint: authConfig.userPoolEndpoint,\n          newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n          accessToken: AuthenticationResult.AccessToken\n        }),\n        signInDetails\n      });\n      resetActiveSignInState();\n      await dispatchSignedInHubEvent();\n      return {\n        isSignedIn: true,\n        nextStep: {\n          signInStep: 'DONE'\n        }\n      };\n    }\n    return getSignInResult({\n      challengeName: retriedChallengeName,\n      challengeParameters: retiredChallengeParameters\n    });\n  } catch (error) {\n    resetActiveSignInState();\n    assertServiceError(error);\n    const result = getSignInResultFromError(error.name);\n    if (result) return result;\n    throw error;\n  }\n}\nexport { signInWithCustomAuth };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { handleCustomSRPAuthFlow, getActiveSignInUsername, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { setActiveSignInState, resetActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using a custom authentication flow with SRP\n *\n * @param input -  The SignInWithCustomSRPAuthInput object\n * @returns SignInWithCustomSRPAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito\n * service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithCustomSRPAuth(input) {\n  const {\n    username,\n    password,\n    options\n  } = input;\n  const signInDetails = {\n    loginId: username,\n    authFlowType: 'CUSTOM_WITH_SRP'\n  };\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const metadata = options?.clientMetadata;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n  assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n  try {\n    const {\n      ChallengeName: handledChallengeName,\n      ChallengeParameters: handledChallengeParameters,\n      AuthenticationResult,\n      Session\n    } = await handleCustomSRPAuthFlow(username, password, metadata, authConfig, tokenOrchestrator);\n    const activeUsername = getActiveSignInUsername(username);\n    // sets up local state used during the sign-in process\n    setActiveSignInState({\n      signInSession: Session,\n      username: activeUsername,\n      challengeName: handledChallengeName,\n      signInDetails\n    });\n    if (AuthenticationResult) {\n      await cacheCognitoTokens({\n        username: activeUsername,\n        ...AuthenticationResult,\n        NewDeviceMetadata: await getNewDeviceMetadata({\n          userPoolId: authConfig.userPoolId,\n          userPoolEndpoint: authConfig.userPoolEndpoint,\n          newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n          accessToken: AuthenticationResult.AccessToken\n        }),\n        signInDetails\n      });\n      resetActiveSignInState();\n      await dispatchSignedInHubEvent();\n      return {\n        isSignedIn: true,\n        nextStep: {\n          signInStep: 'DONE'\n        }\n      };\n    }\n    return getSignInResult({\n      challengeName: handledChallengeName,\n      challengeParameters: handledChallengeParameters\n    });\n  } catch (error) {\n    resetActiveSignInState();\n    assertServiceError(error);\n    const result = getSignInResultFromError(error.name);\n    if (result) return result;\n    throw error;\n  }\n}\nexport { signInWithCustomSRPAuth };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { handleUserSRPAuthFlow, getActiveSignInUsername, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { setActiveSignInState, resetActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in\n *\n * @param input - The SignInWithSRPInput object\n * @returns SignInWithSRPOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithSRP(input) {\n  const {\n    username,\n    password\n  } = input;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  const signInDetails = {\n    loginId: username,\n    authFlowType: 'USER_SRP_AUTH'\n  };\n  assertTokenProviderConfig(authConfig);\n  const clientMetaData = input.options?.clientMetadata;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n  assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n  try {\n    const {\n      ChallengeName: handledChallengeName,\n      ChallengeParameters: handledChallengeParameters,\n      AuthenticationResult,\n      Session\n    } = await handleUserSRPAuthFlow(username, password, clientMetaData, authConfig, tokenOrchestrator);\n    const activeUsername = getActiveSignInUsername(username);\n    // sets up local state used during the sign-in process\n    setActiveSignInState({\n      signInSession: Session,\n      username: activeUsername,\n      challengeName: handledChallengeName,\n      signInDetails\n    });\n    if (AuthenticationResult) {\n      await cacheCognitoTokens({\n        username: activeUsername,\n        ...AuthenticationResult,\n        NewDeviceMetadata: await getNewDeviceMetadata({\n          userPoolId: authConfig.userPoolId,\n          userPoolEndpoint: authConfig.userPoolEndpoint,\n          newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n          accessToken: AuthenticationResult.AccessToken\n        }),\n        signInDetails\n      });\n      resetActiveSignInState();\n      await dispatchSignedInHubEvent();\n      resetAutoSignIn();\n      return {\n        isSignedIn: true,\n        nextStep: {\n          signInStep: 'DONE'\n        }\n      };\n    }\n    return getSignInResult({\n      challengeName: handledChallengeName,\n      challengeParameters: handledChallengeParameters\n    });\n  } catch (error) {\n    resetActiveSignInState();\n    resetAutoSignIn();\n    assertServiceError(error);\n    const result = getSignInResultFromError(error.name);\n    if (result) return result;\n    throw error;\n  }\n}\nexport { signInWithSRP };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { handleUserPasswordAuthFlow, getActiveSignInUsername, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { setActiveSignInState, resetActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport { retryOnResourceNotFoundException } from '../utils/retryOnResourceNotFoundException.mjs';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using USER_PASSWORD_AUTH AuthFlowType\n *\n * @param input - The SignInWithUserPasswordInput object\n * @returns SignInWithUserPasswordOutput\n * @throws service: {@link InitiateAuthException } - Cognito service error thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithUserPassword(input) {\n  const {\n    username,\n    password,\n    options\n  } = input;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  const signInDetails = {\n    loginId: username,\n    authFlowType: 'USER_PASSWORD_AUTH'\n  };\n  assertTokenProviderConfig(authConfig);\n  const metadata = options?.clientMetadata;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n  assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n  try {\n    const {\n      ChallengeName: retiredChallengeName,\n      ChallengeParameters: retriedChallengeParameters,\n      AuthenticationResult,\n      Session\n    } = await retryOnResourceNotFoundException(handleUserPasswordAuthFlow, [username, password, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n    const activeUsername = getActiveSignInUsername(username);\n    // sets up local state used during the sign-in process\n    setActiveSignInState({\n      signInSession: Session,\n      username: activeUsername,\n      challengeName: retiredChallengeName,\n      signInDetails\n    });\n    if (AuthenticationResult) {\n      await cacheCognitoTokens({\n        ...AuthenticationResult,\n        username: activeUsername,\n        NewDeviceMetadata: await getNewDeviceMetadata({\n          userPoolId: authConfig.userPoolId,\n          userPoolEndpoint: authConfig.userPoolEndpoint,\n          newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n          accessToken: AuthenticationResult.AccessToken\n        }),\n        signInDetails\n      });\n      resetActiveSignInState();\n      await dispatchSignedInHubEvent();\n      resetAutoSignIn();\n      return {\n        isSignedIn: true,\n        nextStep: {\n          signInStep: 'DONE'\n        }\n      };\n    }\n    return getSignInResult({\n      challengeName: retiredChallengeName,\n      challengeParameters: retriedChallengeParameters\n    });\n  } catch (error) {\n    resetActiveSignInState();\n    resetAutoSignIn();\n    assertServiceError(error);\n    const result = getSignInResultFromError(error.name);\n    if (result) return result;\n    throw error;\n  }\n}\nexport { signInWithUserPassword };\n", "import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData.mjs';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { handlePasswordSRP } from '../shared/handlePasswordSRP.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/setActiveSignInUsername.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles user authentication flow with configurable challenge preferences.\n * Supports AuthFactorType challenges through the USER_AUTH flow.\n *\n * @param {HandleUserAuthFlowInput} params - Authentication flow parameters\n * @param {string} params.username - The username for authentication\n * @param {Record<string, string>} [params.clientMetadata] - Optional metadata to pass to authentication service\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {AuthTokenOrchestrator} params.tokenOrchestrator - Manages authentication tokens and device tracking\n * @param {AuthFactorType} [params.preferredChallenge] - Optional preferred authentication method\n * @param {string} [params.password] - Required when preferredChallenge is 'PASSWORD' or 'PASSWORD_SRP'\n *\n * @returns {Promise<InitiateAuthCommandOutput>} The authentication response from Cognito\n */\nasync function handleUserAuthFlow({\n  username,\n  clientMetadata,\n  config,\n  tokenOrchestrator,\n  preferredChallenge,\n  password,\n  session\n}) {\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = config;\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const authParameters = {\n    USERNAME: username\n  };\n  if (preferredChallenge) {\n    if (preferredChallenge === 'PASSWORD_SRP') {\n      assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n      return handlePasswordSRP({\n        username,\n        password,\n        clientMetadata,\n        config,\n        tokenOrchestrator,\n        authFlow: 'USER_AUTH',\n        preferredChallenge\n      });\n    }\n    if (preferredChallenge === 'PASSWORD') {\n      assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n      authParameters.PASSWORD = password;\n    }\n    authParameters.PREFERRED_CHALLENGE = preferredChallenge;\n  }\n  const jsonReq = {\n    AuthFlow: 'USER_AUTH',\n    AuthParameters: authParameters,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData\n  };\n  if (session) {\n    jsonReq.Session = session;\n  }\n  const initiateAuth = createInitiateAuthClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const response = await initiateAuth({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.SignIn)\n  }, jsonReq);\n  // Set the active username immediately after successful authentication attempt\n  // If a user starts a new sign-in while another sign-in is incomplete,\n  // this ensures we're tracking the correct user for subsequent auth challenges.\n  setActiveSignInUsername(username);\n  return response;\n}\nexport { handleUserAuthFlow };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { getActiveSignInUsername, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport { setActiveSignInState, resetActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { handleUserAuthFlow } from '../../../client/flows/userAuth/handleUserAuthFlow.mjs';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in through a registered email or phone number without a password by by receiving and entering an OTP.\n *\n * @param input - The SignInWithUserAuthInput object\n * @returns SignInWithUserAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password -- needs to change\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithUserAuth(input) {\n  const {\n    username,\n    password,\n    options\n  } = input;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  const signInDetails = {\n    loginId: username,\n    authFlowType: 'USER_AUTH'\n  };\n  assertTokenProviderConfig(authConfig);\n  const clientMetaData = options?.clientMetadata;\n  const preferredChallenge = options?.preferredChallenge;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n  try {\n    const handleUserAuthFlowInput = {\n      username,\n      config: authConfig,\n      tokenOrchestrator,\n      clientMetadata: clientMetaData,\n      preferredChallenge,\n      password\n    };\n    const autoSignInStoreState = autoSignInStore.getState();\n    if (autoSignInStoreState.active && autoSignInStoreState.username === username) {\n      handleUserAuthFlowInput.session = autoSignInStoreState.session;\n    }\n    const response = await handleUserAuthFlow(handleUserAuthFlowInput);\n    const activeUsername = getActiveSignInUsername(username);\n    setActiveSignInState({\n      signInSession: response.Session,\n      username: activeUsername,\n      challengeName: response.ChallengeName,\n      signInDetails\n    });\n    if (response.AuthenticationResult) {\n      await cacheCognitoTokens({\n        username: activeUsername,\n        ...response.AuthenticationResult,\n        NewDeviceMetadata: await getNewDeviceMetadata({\n          userPoolId: authConfig.userPoolId,\n          userPoolEndpoint: authConfig.userPoolEndpoint,\n          newDeviceMetadata: response.AuthenticationResult.NewDeviceMetadata,\n          accessToken: response.AuthenticationResult.AccessToken\n        }),\n        signInDetails\n      });\n      resetActiveSignInState();\n      await dispatchSignedInHubEvent();\n      resetAutoSignIn();\n      return {\n        isSignedIn: true,\n        nextStep: {\n          signInStep: 'DONE'\n        }\n      };\n    }\n    return getSignInResult({\n      challengeName: response.ChallengeName,\n      challengeParameters: response.ChallengeParameters,\n      availableChallenges: 'AvailableChallenges' in response ? response.AvailableChallenges : undefined\n    });\n  } catch (error) {\n    resetActiveSignInState();\n    resetAutoSignIn();\n    assertServiceError(error);\n    const result = getSignInResultFromError(error.name);\n    if (result) return result;\n    throw error;\n  }\n}\nexport { signInWithUserAuth };\n", "import { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\nimport { signInWithCustomAuth } from './signInWithCustomAuth.mjs';\nimport { signInWithCustomSRPAuth } from './signInWithCustomSRPAuth.mjs';\nimport { signInWithSRP } from './signInWithSRP.mjs';\nimport { signInWithUserPassword } from './signInWithUserPassword.mjs';\nimport { signInWithUserAuth } from './signInWithUserAuth.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in\n *\n * @param input -  The SignInInput object\n * @returns SignInOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n *  - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signIn(input) {\n  // Here we want to reset the store but not reassign the callback.\n  // The callback is reset when the underlying promise resolves or rejects.\n  // With the advent of session based sign in, this guarantees that the signIn API initiates a new auth flow,\n  // regardless of whether it is called for a user currently engaged in an active auto sign in session.\n  resetAutoSignIn(false);\n  const authFlowType = input.options?.authFlowType;\n  await assertUserNotAuthenticated();\n  switch (authFlowType) {\n    case 'USER_SRP_AUTH':\n      return signInWithSRP(input);\n    case 'USER_PASSWORD_AUTH':\n      return signInWithUserPassword(input);\n    case 'CUSTOM_WITHOUT_SRP':\n      return signInWithCustomAuth(input);\n    case 'CUSTOM_WITH_SRP':\n      return signInWithCustomSRPAuth(input);\n    case 'USER_AUTH':\n      return signInWithUserAuth(input);\n    default:\n      return signInWithSRP(input);\n  }\n}\nexport { signIn };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Transforms a user attributes object into an array of AttributeType objects.\n * @param attributes user attributes to be mapped to AttributeType objects.\n * @returns an array of AttributeType objects.\n */\nfunction toAttributeType(attributes) {\n  return Object.entries(attributes).map(([key, value]) => ({\n    Name: key,\n    Value: value\n  }));\n}\n/**\n * Transforms an array of AttributeType objects into a user attributes object.\n *\n * @param attributes - an array of AttributeType objects.\n * @returns AuthUserAttributes object.\n */\nfunction toAuthUserAttribute(attributes) {\n  const userAttributes = {};\n  attributes?.forEach(attribute => {\n    if (attribute.Name) userAttributes[attribute.Name] = attribute.Value;\n  });\n  return userAttributes;\n}\nexport { toAttributeType, toAuthUserAttribute };\n", "import { HubInternal } from '@aws-amplify/core/internals/utils';\nimport { signIn } from '../apis/signIn.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { setAutoSignIn, resetAutoSignIn } from '../apis/autoSignIn.mjs';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants.mjs';\nimport { signInWithUserAuth } from '../apis/signInWithUserAuth.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\nfunction handleCodeAutoSignIn(signInInput) {\n  const stopHubListener = HubInternal.listen('auth-internal', async ({\n    payload\n  }) => {\n    switch (payload.event) {\n      case 'confirmSignUp':\n        {\n          const response = payload.data;\n          if (response?.isSignUpComplete) {\n            HubInternal.dispatch('auth-internal', {\n              event: 'autoSignIn'\n            });\n            setAutoSignIn(autoSignInWithCode(signInInput));\n            stopHubListener();\n          }\n        }\n    }\n  });\n  // This will stop the listener if confirmSignUp is not resolved.\n  const timeOutId = setTimeout(() => {\n    stopHubListener();\n    clearTimeout(timeOutId);\n    resetAutoSignIn();\n  }, MAX_AUTOSIGNIN_POLLING_MS);\n}\nfunction debounce(fun, delay) {\n  let timer;\n  return args => {\n    if (!timer) {\n      fun(...args);\n    }\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = undefined;\n    }, delay);\n  };\n}\nfunction handleAutoSignInWithLink(signInInput, resolve, reject) {\n  const start = Date.now();\n  const autoSignInPollingIntervalId = setInterval(async () => {\n    const elapsedTime = Date.now() - start;\n    const maxTime = MAX_AUTOSIGNIN_POLLING_MS;\n    if (elapsedTime > maxTime) {\n      clearInterval(autoSignInPollingIntervalId);\n      reject(new AuthError({\n        name: AUTO_SIGN_IN_EXCEPTION,\n        message: 'The account was not confirmed on time.',\n        recoverySuggestion: 'Try to verify your account by clicking the link sent your email or phone and then login manually.'\n      }));\n      resetAutoSignIn();\n    } else {\n      try {\n        const signInOutput = await signIn(signInInput);\n        if (signInOutput.nextStep.signInStep !== 'CONFIRM_SIGN_UP') {\n          resolve(signInOutput);\n          clearInterval(autoSignInPollingIntervalId);\n          resetAutoSignIn();\n        }\n      } catch (error) {\n        clearInterval(autoSignInPollingIntervalId);\n        reject(error);\n        resetAutoSignIn();\n      }\n    }\n  }, 5000);\n}\nconst debouncedAutoSignInWithLink = debounce(handleAutoSignInWithLink, 300);\nconst debouncedAutoSignWithCodeOrUserConfirmed = debounce(handleAutoSignInWithCodeOrUserConfirmed, 300);\nfunction autoSignInWhenUserIsConfirmedWithLink(signInInput) {\n  return async () => {\n    return new Promise((resolve, reject) => {\n      debouncedAutoSignInWithLink([signInInput, resolve, reject]);\n    });\n  };\n}\nasync function handleAutoSignInWithCodeOrUserConfirmed(signInInput, resolve, reject) {\n  try {\n    const output = signInInput?.options?.authFlowType === 'USER_AUTH' ? await signInWithUserAuth(signInInput) : await signIn(signInInput);\n    resolve(output);\n    resetAutoSignIn();\n  } catch (error) {\n    reject(error);\n    resetAutoSignIn();\n  }\n}\nfunction autoSignInWithCode(signInInput) {\n  return async () => {\n    return new Promise((resolve, reject) => {\n      debouncedAutoSignWithCodeOrUserConfirmed([signInInput, resolve, reject]);\n    });\n  };\n}\nconst autoSignInUserConfirmed = autoSignInWithCode;\nexport { autoSignInUserConfirmed, autoSignInWhenUserIsConfirmedWithLink, handleCodeAutoSignIn };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseJsonError, parseJsonBody } from '@aws-amplify/core/internals/aws-client-utils';\nimport { validationErrorMap } from '../../../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthValidationErrorCode } from '../../../../errors/types/validation.mjs';\nimport { assertServiceError } from '../../../../errors/utils/assertServiceError.mjs';\nimport { SignUpException } from '../../../../providers/cognito/types/errors.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createSignUpClientDeserializer = () => async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseJsonError(response);\n    assertServiceError(error);\n    if (\n    // Missing Password Error\n    // 1 validation error detected: Value at 'password'failed to satisfy constraint: Member must not be null\n    error.name === SignUpException.InvalidParameterException && /'password'/.test(error.message) && /Member must not be null/.test(error.message)) {\n      const name = AuthValidationErrorCode.EmptySignUpPassword;\n      const {\n        message,\n        recoverySuggestion\n      } = validationErrorMap[name];\n      throw new AuthError({\n        name,\n        message,\n        recoverySuggestion\n      });\n    }\n    throw new AuthError({\n      name: error.name,\n      message: error.message\n    });\n  }\n  return parseJsonBody(response);\n};\nconst createSignUpClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SignUp'), createSignUpClientDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createSignUpClient, createSignUpClientDeserializer };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { toAttributeType } from '../utils/apiHelpers.mjs';\nimport { handleCodeAutoSignIn, autoSignInUserConfirmed, autoSignInWhenUserIsConfirmedWithLink } from '../utils/signUpHelpers.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport { createSignUpClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createSignUpClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport '../../../client/utils/store/signInStore.mjs';\nimport { setAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Creates a user\n *\n * @param input - The SignUpInput object\n * @returns SignUpOutput\n * @throws service: {@link SignUpException } - Cognito service errors thrown during the sign-up process.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signUp(input) {\n  const {\n    username,\n    password,\n    options\n  } = input;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  const signUpVerificationMethod = authConfig?.signUpVerificationMethod ?? 'code';\n  const {\n    clientMetadata,\n    validationData,\n    autoSignIn\n  } = input.options ?? {};\n  assertTokenProviderConfig(authConfig);\n  assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n  const signInServiceOptions = typeof autoSignIn !== 'boolean' ? autoSignIn : undefined;\n  const signInInput = {\n    username,\n    options: signInServiceOptions\n  };\n  // if the authFlowType is 'CUSTOM_WITHOUT_SRP' then we don't include the password\n  if (signInServiceOptions?.authFlowType !== 'CUSTOM_WITHOUT_SRP') {\n    signInInput.password = password;\n  }\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = authConfig;\n  const signUpClient = createSignUpClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const signUpClientInput = {\n    Username: username,\n    Password: undefined,\n    UserAttributes: options?.userAttributes && toAttributeType(options?.userAttributes),\n    ClientMetadata: clientMetadata,\n    ValidationData: validationData && toAttributeType(validationData),\n    ClientId: userPoolClientId,\n    UserContextData: getUserContextData({\n      username,\n      userPoolId,\n      userPoolClientId\n    })\n  };\n  if (password) {\n    signUpClientInput.Password = password;\n  }\n  const {\n    UserSub: userId,\n    CodeDeliveryDetails: cdd,\n    UserConfirmed: userConfirmed,\n    Session: session\n  } = await signUpClient({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.SignUp)\n  }, signUpClientInput);\n  if (signInServiceOptions || autoSignIn === true) {\n    autoSignInStore.dispatch({\n      type: 'START'\n    });\n    autoSignInStore.dispatch({\n      type: 'SET_USERNAME',\n      value: username\n    });\n    autoSignInStore.dispatch({\n      type: 'SET_SESSION',\n      value: session\n    });\n  }\n  const codeDeliveryDetails = {\n    destination: cdd?.Destination,\n    deliveryMedium: cdd?.DeliveryMedium,\n    attributeName: cdd?.AttributeName\n  };\n  const isSignUpComplete = !!userConfirmed;\n  const isAutoSignInStarted = autoSignInStore.getState().active;\n  // Sign Up Complete\n  // No Confirm Sign In Step Required\n  if (isSignUpComplete) {\n    if (isAutoSignInStarted) {\n      setAutoSignIn(autoSignInUserConfirmed(signInInput));\n      return {\n        isSignUpComplete: true,\n        nextStep: {\n          signUpStep: 'COMPLETE_AUTO_SIGN_IN'\n        },\n        userId\n      };\n    }\n    return {\n      isSignUpComplete: true,\n      nextStep: {\n        signUpStep: 'DONE'\n      },\n      userId\n    };\n  }\n  // Sign Up Not Complete\n  // Confirm Sign Up Step Required\n  if (isAutoSignInStarted) {\n    // Confirmation Via Link Occurs In Separate Context\n    // AutoSignIn Fn Will Initiate Polling Once Executed\n    if (signUpVerificationMethod === 'link') {\n      setAutoSignIn(autoSignInWhenUserIsConfirmedWithLink(signInInput));\n      return {\n        isSignUpComplete: false,\n        nextStep: {\n          signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n          codeDeliveryDetails\n        },\n        userId\n      };\n    }\n    // Confirmation Via Code Occurs In Same Context\n    // AutoSignIn Next Step Will Be Returned From Confirm Sign Up\n    handleCodeAutoSignIn(signInInput);\n  }\n  return {\n    isSignUpComplete: false,\n    nextStep: {\n      signUpStep: 'CONFIRM_SIGN_UP',\n      codeDeliveryDetails\n    },\n    userId\n  };\n}\nexport { signUp };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createForgotPasswordClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ForgotPassword'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createForgotPasswordClient };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createForgotPasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createForgotPasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resets a user's password.\n *\n * @param input -  The ResetPasswordInput object.\n * @returns ResetPasswordOutput\n * @throws -{@link ForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nasync function resetPassword(input) {\n  const {\n    username\n  } = input;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptyResetPasswordUsername);\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolClientId,\n    userPoolId,\n    userPoolEndpoint\n  } = authConfig;\n  const clientMetadata = input.options?.clientMetadata;\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const forgotPassword = createForgotPasswordClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const res = await forgotPassword({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ResetPassword)\n  }, {\n    Username: username,\n    ClientMetadata: clientMetadata,\n    ClientId: userPoolClientId,\n    UserContextData\n  });\n  const codeDeliveryDetails = res.CodeDeliveryDetails;\n  return {\n    isPasswordReset: false,\n    nextStep: {\n      resetPasswordStep: 'CONFIRM_RESET_PASSWORD_WITH_CODE',\n      codeDeliveryDetails: {\n        deliveryMedium: codeDeliveryDetails?.DeliveryMedium,\n        destination: codeDeliveryDetails?.Destination,\n        attributeName: codeDeliveryDetails?.AttributeName\n      }\n    }\n  };\n}\nexport { resetPassword };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createConfirmForgotPasswordClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmForgotPassword'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createConfirmForgotPasswordClient };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createConfirmForgotPasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmForgotPasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms the new password and verification code to reset the password.\n *\n * @param input -  The ConfirmResetPasswordInput object.\n * @throws -{@link ConfirmForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code, password or username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmResetPassword(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolClientId,\n    userPoolId,\n    userPoolEndpoint\n  } = authConfig;\n  const {\n    username,\n    newPassword\n  } = input;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmResetPasswordUsername);\n  assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword);\n  const code = input.confirmationCode;\n  assertValidationError(!!code, AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode);\n  const metadata = input.options?.clientMetadata;\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const confirmForgotPassword = createConfirmForgotPasswordClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await confirmForgotPassword({\n    region: getRegionFromUserPoolId(authConfig.userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmResetPassword)\n  }, {\n    Username: username,\n    ConfirmationCode: code,\n    Password: newPassword,\n    ClientMetadata: metadata,\n    ClientId: authConfig.userPoolClientId,\n    UserContextData\n  });\n}\nexport { confirmResetPassword };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createResendConfirmationCodeClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ResendConfirmationCode'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createResendConfirmationCodeClient };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createResendConfirmationCodeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createResendConfirmationCodeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resend the confirmation code while signing up\n *\n * @param input -  The ResendSignUpCodeInput object\n * @returns ResendSignUpCodeOutput\n * @throws service: {@link ResendConfirmationException } - Cognito service errors thrown when resending the code.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function resendSignUpCode(input) {\n  const {\n    username\n  } = input;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolClientId,\n    userPoolId,\n    userPoolEndpoint\n  } = authConfig;\n  const clientMetadata = input.options?.clientMetadata;\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const resendConfirmationCode = createResendConfirmationCodeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    CodeDeliveryDetails\n  } = await resendConfirmationCode({\n    region: getRegionFromUserPoolId(authConfig.userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ResendSignUpCode)\n  }, {\n    Username: username,\n    ClientMetadata: clientMetadata,\n    ClientId: authConfig.userPoolClientId,\n    UserContextData\n  });\n  const {\n    DeliveryMedium,\n    AttributeName,\n    Destination\n  } = {\n    ...CodeDeliveryDetails\n  };\n  return {\n    destination: Destination,\n    deliveryMedium: DeliveryMedium,\n    attributeName: AttributeName ? AttributeName : undefined\n  };\n}\nexport { resendSignUpCode };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createConfirmSignUpClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmSignUp'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createConfirmSignUpClient };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction, HubInternal } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createConfirmSignUpClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmSignUpClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport '../../../client/utils/store/signInStore.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms a new user account.\n *\n * @param input -  The ConfirmSignUpInput object.\n * @returns ConfirmSignUpOutput\n * @throws -{@link ConfirmSignUpException }\n * Thrown due to an invalid confirmation code.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmSignUp(input) {\n  const {\n    username,\n    confirmationCode,\n    options\n  } = input;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolId,\n    userPoolClientId,\n    userPoolEndpoint\n  } = authConfig;\n  const clientMetadata = options?.clientMetadata;\n  assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmSignUpUsername);\n  assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmSignUpCode);\n  const UserContextData = getUserContextData({\n    username,\n    userPoolId,\n    userPoolClientId\n  });\n  const confirmSignUpClient = createConfirmSignUpClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    Session: session\n  } = await confirmSignUpClient({\n    region: getRegionFromUserPoolId(authConfig.userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignUp)\n  }, {\n    Username: username,\n    ConfirmationCode: confirmationCode,\n    ClientMetadata: clientMetadata,\n    ForceAliasCreation: options?.forceAliasCreation,\n    ClientId: authConfig.userPoolClientId,\n    UserContextData\n  });\n  return new Promise((resolve, reject) => {\n    try {\n      const signUpOut = {\n        isSignUpComplete: true,\n        nextStep: {\n          signUpStep: 'DONE'\n        }\n      };\n      const autoSignInStoreState = autoSignInStore.getState();\n      if (!autoSignInStoreState.active || autoSignInStoreState.username !== username) {\n        resolve(signUpOut);\n        resetAutoSignIn();\n        return;\n      }\n      autoSignInStore.dispatch({\n        type: 'SET_SESSION',\n        value: session\n      });\n      const stopListener = HubInternal.listen('auth-internal', ({\n        payload\n      }) => {\n        switch (payload.event) {\n          case 'autoSignIn':\n            resolve({\n              isSignUpComplete: true,\n              nextStep: {\n                signUpStep: 'COMPLETE_AUTO_SIGN_IN'\n              }\n            });\n            stopListener();\n        }\n      });\n      HubInternal.dispatch('auth-internal', {\n        event: 'confirmSignUp',\n        data: signUpOut\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nexport { confirmSignUp };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport '../../../client/utils/store/autoSignInStore.mjs';\nimport { signInStore, setActiveSignInState, resetActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { handleChallengeName, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Continues or completes the sign in process when required by the initial call to `signIn`.\n *\n * @param input -  The ConfirmSignInInput object\n * @returns ConfirmSignInOutput\n * @throws  -{@link VerifySoftwareTokenException }:\n * Thrown due to an invalid MFA token.\n * @throws  -{@link RespondToAuthChallengeException }:\n * Thrown due to an invalid auth challenge response.\n * @throws  -{@link AssociateSoftwareTokenException}:\n * Thrown due to a service error during the MFA setup process.\n * @throws  -{@link AuthValidationErrorCode }:\n * Thrown when `challengeResponse` is not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmSignIn(input) {\n  const {\n    challengeResponse,\n    options\n  } = input;\n  const {\n    username,\n    challengeName,\n    signInSession,\n    signInDetails\n  } = signInStore.getState();\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const clientMetaData = options?.clientMetadata;\n  assertValidationError(!!challengeResponse, AuthValidationErrorCode.EmptyChallengeResponse);\n  if (!username || !challengeName || !signInSession)\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n      name: AuthErrorCodes.SignInException,\n      message: `\n\t\t\tAn error occurred during the sign in process.\n\n\t\t\tThis most likely occurred due to:\n\t\t\t1. signIn was not called before confirmSignIn.\n\t\t\t2. signIn threw an exception.\n\t\t\t3. page was refreshed during the sign in flow and session has expired.\n\t\t\t`,\n      recoverySuggestion: 'Make sure a successful call to signIn is made before calling confirmSignIn' + 'and that the session has not expired.'\n    });\n  try {\n    const {\n      Session,\n      ChallengeName: handledChallengeName,\n      AuthenticationResult,\n      ChallengeParameters: handledChallengeParameters\n    } = await handleChallengeName(username, challengeName, signInSession, challengeResponse, authConfig, tokenOrchestrator, clientMetaData, options);\n    // sets up local state used during the sign-in process\n    setActiveSignInState({\n      signInSession: Session,\n      username,\n      challengeName: handledChallengeName,\n      signInDetails\n    });\n    if (AuthenticationResult) {\n      await cacheCognitoTokens({\n        username,\n        ...AuthenticationResult,\n        NewDeviceMetadata: await getNewDeviceMetadata({\n          userPoolId: authConfig.userPoolId,\n          userPoolEndpoint: authConfig.userPoolEndpoint,\n          newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n          accessToken: AuthenticationResult.AccessToken\n        }),\n        signInDetails\n      });\n      resetActiveSignInState();\n      await dispatchSignedInHubEvent();\n      return {\n        isSignedIn: true,\n        nextStep: {\n          signInStep: 'DONE'\n        }\n      };\n    }\n    return getSignInResult({\n      challengeName: handledChallengeName,\n      challengeParameters: handledChallengeParameters\n    });\n  } catch (error) {\n    assertServiceError(error);\n    const result = getSignInResultFromError(error.name);\n    if (result) return result;\n    throw error;\n  }\n}\nexport { confirmSignIn };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createSetUserMFAPreferenceClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SetUserMFAPreference'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createSetUserMFAPreferenceClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createSetUserMFAPreferenceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createSetUserMFAPreferenceClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates the MFA preference of the user.\n *\n * @param input - The UpdateMFAPreferenceInput object.\n * @throws -{@link SetUserMFAPreferenceException } - Service error thrown when the MFA preference cannot be updated.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function updateMFAPreference(input) {\n  const {\n    sms,\n    totp,\n    email\n  } = input;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const setUserMFAPreference = createSetUserMFAPreferenceClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await setUserMFAPreference({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.UpdateMFAPreference)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    SMSMfaSettings: getMFASettings(sms),\n    SoftwareTokenMfaSettings: getMFASettings(totp),\n    EmailMfaSettings: getMFASettings(email)\n  });\n}\nfunction getMFASettings(mfaPreference) {\n  if (mfaPreference === 'DISABLED') {\n    return {\n      Enabled: false\n    };\n  } else if (mfaPreference === 'PREFERRED') {\n    return {\n      Enabled: true,\n      PreferredMfa: true\n    };\n  } else if (mfaPreference === 'ENABLED') {\n    return {\n      Enabled: true\n    };\n  } else if (mfaPreference === 'NOT_PREFERRED') {\n    return {\n      Enabled: true,\n      PreferredMfa: false\n    };\n  }\n}\nexport { getMFASettings, updateMFAPreference };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGetUserClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetUser'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createGetUserClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getMFATypes, getMFAType } from '../utils/signInHelpers.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createGetUserClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Fetches the preferred MFA setting and enabled MFA settings for the user.\n *\n * @returns FetchMFAPreferenceOutput\n * @throws  -{@link GetUserException} : error thrown when the service fails to fetch MFA preference\n * and settings.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function fetchMFAPreference() {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const getUser = createGetUserClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    PreferredMfaSetting,\n    UserMFASettingList\n  } = await getUser({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.FetchMFAPreference)\n  }, {\n    AccessToken: tokens.accessToken.toString()\n  });\n  return {\n    preferred: getMFAType(PreferredMfaSetting),\n    enabled: getMFATypes(UserMFASettingList)\n  };\n}\nexport { fetchMFAPreference };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createVerifySoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createVerifySoftwareTokenClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Verifies an OTP code retrieved from an associated authentication app.\n *\n * @param input - The VerifyTOTPSetupInput\n * @throws  -{@link VerifySoftwareTokenException }:\n * Thrown due to an invalid MFA token.\n * @throws  -{@link AuthValidationErrorCode }:\n * Thrown when `code` is not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function verifyTOTPSetup(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    code,\n    options\n  } = input;\n  assertValidationError(!!code, AuthValidationErrorCode.EmptyVerifyTOTPSetupCode);\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const verifySoftwareToken = createVerifySoftwareTokenClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await verifySoftwareToken({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.VerifyTOTPSetup)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    UserCode: code,\n    FriendlyDeviceName: options?.friendlyDeviceName\n  });\n}\nexport { verifyTOTPSetup };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createChangePasswordClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ChangePassword'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createChangePasswordClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createChangePasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createChangePasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's password while authenticated.\n *\n * @param input - The UpdatePasswordInput object.\n * @throws - {@link ChangePasswordException} - Cognito service errors thrown when updating a password.\n * @throws - {@link AuthValidationErrorCode} - Validation errors thrown when oldPassword or newPassword are empty.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function updatePassword(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    oldPassword,\n    newPassword\n  } = input;\n  assertValidationError(!!oldPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n  assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const changePassword = createChangePasswordClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await changePassword({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.UpdatePassword)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    PreviousPassword: oldPassword,\n    ProposedPassword: newPassword\n  });\n}\nexport { updatePassword };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { SETUP_TOTP_EXCEPTION } from '../types/errors.mjs';\nimport { getTOTPSetupDetails } from '../utils/signInHelpers.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport { createAssociateSoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Sets up TOTP for the user.\n *\n * @returns SetUpTOTPOutput\n * @throws -{@link AssociateSoftwareTokenException}\n * Thrown if a service occurs while setting up TOTP.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nasync function setUpTOTP() {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const username = tokens.idToken?.payload['cognito:username'] ?? '';\n  const associateSoftwareToken = createAssociateSoftwareTokenClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    SecretCode\n  } = await associateSoftwareToken({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.SetUpTOTP)\n  }, {\n    AccessToken: tokens.accessToken.toString()\n  });\n  if (!SecretCode) {\n    // This should never happen.\n    throw new AuthError({\n      name: SETUP_TOTP_EXCEPTION,\n      message: 'Failed to set up TOTP.'\n    });\n  }\n  return getTOTPSetupDetails(SecretCode, JSON.stringify(username));\n}\nexport { setUpTOTP };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUpdateUserAttributesClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('UpdateUserAttributes'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createUpdateUserAttributesClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { toAttributeType } from '../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createUpdateUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateUserAttributesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's attributes while authenticated.\n *\n * @param input - The UpdateUserAttributesInput object\n * @returns UpdateUserAttributesOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst updateUserAttributes = async input => {\n  const {\n    userAttributes,\n    options\n  } = input;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  const clientMetadata = options?.clientMetadata;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const updateUserAttributesClient = createUpdateUserAttributesClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    CodeDeliveryDetailsList\n  } = await updateUserAttributesClient({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.UpdateUserAttributes)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    ClientMetadata: clientMetadata,\n    UserAttributes: toAttributeType(userAttributes)\n  });\n  return {\n    ...getConfirmedAttributes(userAttributes),\n    ...getUnConfirmedAttributes(CodeDeliveryDetailsList)\n  };\n};\nfunction getConfirmedAttributes(attributes) {\n  const confirmedAttributes = {};\n  Object.keys(attributes)?.forEach(key => {\n    confirmedAttributes[key] = {\n      isUpdated: true,\n      nextStep: {\n        updateAttributeStep: 'DONE'\n      }\n    };\n  });\n  return confirmedAttributes;\n}\nfunction getUnConfirmedAttributes(codeDeliveryDetailsList) {\n  const unConfirmedAttributes = {};\n  codeDeliveryDetailsList?.forEach(codeDeliveryDetails => {\n    const {\n      AttributeName,\n      DeliveryMedium,\n      Destination\n    } = codeDeliveryDetails;\n    if (AttributeName) unConfirmedAttributes[AttributeName] = {\n      isUpdated: false,\n      nextStep: {\n        updateAttributeStep: 'CONFIRM_ATTRIBUTE_WITH_CODE',\n        codeDeliveryDetails: {\n          attributeName: AttributeName,\n          deliveryMedium: DeliveryMedium,\n          destination: Destination\n        }\n      }\n    };\n  });\n  return unConfirmedAttributes;\n}\nexport { updateUserAttributes };\n", "import { updateUserAttributes } from './updateUserAttributes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's attribute while authenticated.\n *\n * @param input - The UpdateUserAttributeInput object\n * @returns UpdateUserAttributeOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst updateUserAttribute = async input => {\n  const {\n    userAttribute: {\n      attributeKey,\n      value\n    },\n    options\n  } = input;\n  const output = await updateUserAttributes({\n    userAttributes: {\n      [attributeKey]: value\n    },\n    options\n  });\n  return Object.values(output)[0];\n};\nexport { updateUserAttribute };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createVerifyUserAttributeClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('VerifyUserAttribute'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createVerifyUserAttributeClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createVerifyUserAttributeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createVerifyUserAttributeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms a user attribute with the confirmation code.\n *\n * @param input -  The ConfirmUserAttributeInput object\n * @throws  -{@link AuthValidationErrorCode } -\n * Thrown when `confirmationCode` is not defined.\n * @throws  -{@link VerifyUserAttributeException } - Thrown due to an invalid confirmation code or attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmUserAttribute(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    confirmationCode,\n    userAttributeKey\n  } = input;\n  assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmUserAttributeCode);\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const verifyUserAttribute = createVerifyUserAttributeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await verifyUserAttribute({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmUserAttribute)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    AttributeName: userAttributeKey,\n    Code: confirmationCode\n  });\n}\nexport { confirmUserAttribute };\n", "import { ConsoleLogger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: delete this module when the Auth class is removed.\nconst logger = new ConsoleLogger('AuthError');\nclass AuthError extends Error {\n  constructor(type) {\n    const {\n      message,\n      log\n    } = authErrorMessages[type];\n    super(message);\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    this.constructor = AuthError;\n    Object.setPrototypeOf(this, AuthError.prototype);\n    this.name = 'AuthError';\n    this.log = log || message;\n    logger.error(this.log);\n  }\n}\nclass NoUserPoolError extends AuthError {\n  constructor(type) {\n    super(type);\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    this.constructor = NoUserPoolError;\n    Object.setPrototypeOf(this, NoUserPoolError.prototype);\n    this.name = 'NoUserPoolError';\n  }\n}\nconst authErrorMessages = {\n  oauthSignInError: {\n    message: AuthErrorStrings.OAUTH_ERROR,\n    log: 'Make sure Cognito Hosted UI has been configured correctly'\n  },\n  noConfig: {\n    message: AuthErrorStrings.DEFAULT_MSG,\n    log: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `\n  },\n  missingAuthConfig: {\n    message: AuthErrorStrings.DEFAULT_MSG,\n    log: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `\n  },\n  emptyUsername: {\n    message: AuthErrorStrings.EMPTY_USERNAME\n  },\n  // TODO: should include a list of valid sign-in types\n  invalidUsername: {\n    message: AuthErrorStrings.INVALID_USERNAME\n  },\n  emptyPassword: {\n    message: AuthErrorStrings.EMPTY_PASSWORD\n  },\n  emptyCode: {\n    message: AuthErrorStrings.EMPTY_CODE\n  },\n  signUpError: {\n    message: AuthErrorStrings.SIGN_UP_ERROR,\n    log: 'The first parameter should either be non-null string or object'\n  },\n  noMFA: {\n    message: AuthErrorStrings.NO_MFA\n  },\n  invalidMFA: {\n    message: AuthErrorStrings.INVALID_MFA\n  },\n  emptyChallengeResponse: {\n    message: AuthErrorStrings.EMPTY_CHALLENGE\n  },\n  noUserSession: {\n    message: AuthErrorStrings.NO_USER_SESSION\n  },\n  deviceConfig: {\n    message: AuthErrorStrings.DEVICE_CONFIG\n  },\n  networkError: {\n    message: AuthErrorStrings.NETWORK_ERROR\n  },\n  autoSignInError: {\n    message: AuthErrorStrings.AUTOSIGNIN_ERROR\n  },\n  default: {\n    message: AuthErrorStrings.DEFAULT_MSG\n  }\n};\nexport { AuthError, NoUserPoolError, authErrorMessages };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthErrorTypes;\n(function (AuthErrorTypes) {\n  AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n  AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n  AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n  AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n  AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n  AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n  AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n  AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n  AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n  AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n  AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n  AuthErrorTypes[\"Default\"] = \"default\";\n  AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n  AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n  AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n  AuthErrorTypes[\"OAuthSignInError\"] = \"oauthSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\nexport { AuthErrorTypes };\n", "import { authErrorMessages } from '../../../../Errors.mjs';\nimport { AuthErrorCodes } from '../../../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createOAuthError = (message, recoverySuggestion) => new AuthError({\n  message: message ?? 'An error has occurred during the oauth process.',\n  name: AuthErrorCodes.OAuthSignInError,\n  recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log\n});\nexport { createOAuthError };\n", "import { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthErrorTypes } from '../../../../types/Auth.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nconst validationFailedMessage = 'An error occurred while validating the state.';\nconst validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nconst validateState = async state => {\n  const savedState = await oAuthStore.loadOAuthState();\n  // This is because savedState only exists if the flow was initiated by Amplify\n  const validatedState = state === savedState ? savedState : undefined;\n  if (!validatedState) {\n    throw new AuthError({\n      name: AuthErrorTypes.OAuthSignInError,\n      message: state === null ? flowCancelledMessage : validationFailedMessage,\n      recoverySuggestion: state === null ? undefined : validationRecoverySuggestion\n    });\n  }\n  return validatedState;\n};\nexport { flowCancelledMessage, validateState, validationFailedMessage, validationRecoverySuggestion };\n", "import { AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { decodeJWT, Hub } from '@aws-amplify/core';\nimport { cacheCognitoTokens } from '../../tokenProvider/cacheTokens.mjs';\nimport { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent.mjs';\nimport '../refreshAuthTokens.mjs';\nimport '../../tokenProvider/errorHelpers.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { resolveAndClearInflightPromises } from './inflightPromise.mjs';\nimport { tokenOrchestrator } from '../../tokenProvider/tokenProvider.mjs';\nimport { createOAuthError } from './createOAuthError.mjs';\nimport { validateState } from './validateState.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst completeOAuthFlow = async ({\n  currentUrl,\n  userAgentValue,\n  clientId,\n  redirectUri,\n  responseType,\n  domain,\n  preferPrivateSession\n}) => {\n  const urlParams = new AmplifyUrl(currentUrl);\n  const error = urlParams.searchParams.get('error');\n  const errorMessage = urlParams.searchParams.get('error_description');\n  if (error) {\n    throw createOAuthError(errorMessage ?? error);\n  }\n  if (responseType === 'code') {\n    return handleCodeFlow({\n      currentUrl,\n      userAgentValue,\n      clientId,\n      redirectUri,\n      domain,\n      preferPrivateSession\n    });\n  }\n  return handleImplicitFlow({\n    currentUrl,\n    redirectUri,\n    preferPrivateSession\n  });\n};\nconst handleCodeFlow = async ({\n  currentUrl,\n  userAgentValue,\n  clientId,\n  redirectUri,\n  domain,\n  preferPrivateSession\n}) => {\n  /* Convert URL into an object with parameters as keys\n  { redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n  const url = new AmplifyUrl(currentUrl);\n  const code = url.searchParams.get('code');\n  const state = url.searchParams.get('state');\n  // if `code` or `state` is not presented in the redirect url, most likely\n  // that the end user cancelled the inflight oauth flow by:\n  // 1. clicking the back button of browser\n  // 2. closing the provider hosted UI page and coming back to the app\n  if (!code || !state) {\n    throw createOAuthError('User cancelled OAuth flow.');\n  }\n  // may throw error is being caught in attemptCompleteOAuthFlow.ts\n  const validatedState = await validateState(state);\n  const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n  // TODO(v6): check hub events\n  // dispatchAuthEvent(\n  // \t'codeFlow',\n  // \t{},\n  // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n  // );\n  const codeVerifier = await oAuthStore.loadPKCE();\n  const oAuthTokenBody = {\n    grant_type: 'authorization_code',\n    code,\n    client_id: clientId,\n    redirect_uri: redirectUri,\n    ...(codeVerifier ? {\n      code_verifier: codeVerifier\n    } : {})\n  };\n  const body = Object.entries(oAuthTokenBody).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n  const {\n    access_token,\n    refresh_token: refreshToken,\n    id_token,\n    error,\n    error_message: errorMessage,\n    token_type,\n    expires_in\n  } = await (await fetch(oAuthTokenEndpoint, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      [USER_AGENT_HEADER]: userAgentValue\n    },\n    body\n  })).json();\n  if (error) {\n    // error is being caught in attemptCompleteOAuthFlow.ts\n    throw createOAuthError(errorMessage ?? error);\n  }\n  const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n  await cacheCognitoTokens({\n    username,\n    AccessToken: access_token,\n    IdToken: id_token,\n    RefreshToken: refreshToken\n  });\n  return completeFlow({\n    redirectUri,\n    state: validatedState,\n    preferPrivateSession\n  });\n};\nconst handleImplicitFlow = async ({\n  currentUrl,\n  redirectUri,\n  preferPrivateSession\n}) => {\n  // hash is `null` if `#` doesn't exist on URL\n  const url = new AmplifyUrl(currentUrl);\n  const {\n    id_token,\n    access_token,\n    state,\n    token_type,\n    expires_in,\n    error_description,\n    error\n  } = (url.hash ?? '#').substring(1) // Remove # from returned code\n  .split('&').map(pairings => pairings.split('=')).reduce((accum, [k, v]) => ({\n    ...accum,\n    [k]: v\n  }), {\n    id_token: undefined,\n    access_token: undefined,\n    state: undefined,\n    token_type: undefined,\n    expires_in: undefined,\n    error_description: undefined,\n    error: undefined\n  });\n  if (error) {\n    throw createOAuthError(error_description ?? error);\n  }\n  if (!access_token) {\n    // error is being caught in attemptCompleteOAuthFlow.ts\n    throw createOAuthError('No access token returned from OAuth flow.');\n  }\n  const validatedState = await validateState(state);\n  const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n  await cacheCognitoTokens({\n    username,\n    AccessToken: access_token,\n    IdToken: id_token\n  });\n  return completeFlow({\n    redirectUri,\n    state: validatedState,\n    preferPrivateSession\n  });\n};\nconst completeFlow = async ({\n  redirectUri,\n  state,\n  preferPrivateSession\n}) => {\n  await tokenOrchestrator.setOAuthMetadata({\n    oauthSignIn: true\n  });\n  await oAuthStore.clearOAuthData();\n  await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n  // this should be called before any call that involves `fetchAuthSession`\n  // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n  //  `fetchAuthSession` can be resolved\n  resolveAndClearInflightPromises();\n  // clear history before sending out final Hub events\n  clearHistory(redirectUri);\n  if (isCustomState(state)) {\n    Hub.dispatch('auth', {\n      event: 'customOAuthState',\n      data: urlSafeDecode(getCustomState(state))\n    }, 'Auth', AMPLIFY_SYMBOL);\n  }\n  Hub.dispatch('auth', {\n    event: 'signInWithRedirect'\n  }, 'Auth', AMPLIFY_SYMBOL);\n  await dispatchSignedInHubEvent();\n};\nconst isCustomState = state => {\n  return /-/.test(state);\n};\nconst getCustomState = state => {\n  return state.split('-').splice(1).join('-');\n};\nconst clearHistory = redirectUri => {\n  if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n    window.history.replaceState(window.history.state, '', redirectUri);\n  }\n};\nexport { completeOAuthFlow };\n", "import { invalidOriginException, invalidRedirectException, invalidPreferredRedirectUrlException } from '../../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/** @internal */\nfunction getRedirectUrl(redirects, preferredRedirectUrl) {\n  if (preferredRedirectUrl) {\n    const redirectUrl = redirects?.find(redirect => redirect === preferredRedirectUrl);\n    if (!redirectUrl) {\n      throw invalidPreferredRedirectUrlException;\n    }\n    return redirectUrl;\n  } else {\n    const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ?? redirects?.find(isTheSameDomain);\n    const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n    if (redirectUrlFromTheSameOrigin) {\n      return redirectUrlFromTheSameOrigin;\n    } else if (redirectUrlFromDifferentOrigin) {\n      throw invalidOriginException;\n    }\n    throw invalidRedirectException;\n  }\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = redirect => redirect.startsWith(\n// eslint-disable-next-line no-constant-binary-expression\nString(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = redirect => redirect.includes(String(window.location.hostname));\nconst isHttp = redirect => redirect.startsWith('http://');\nconst isHttps = redirect => redirect.startsWith('https://');\nexport { getRedirectUrl };\n", "import { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { resolveAndClearInflightPromises } from './inflightPromise.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst handleFailure = async error => {\n  resolveAndClearInflightPromises();\n  await oAuthStore.clearOAuthInflightData();\n  Hub.dispatch('auth', {\n    event: 'signInWithRedirect_failure',\n    data: {\n      error\n    }\n  }, 'Auth', AMPLIFY_SYMBOL);\n};\nexport { handleFailure };\n", "import { assertTokenProviderConfig, assertOAuthConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { completeOAuthFlow } from './completeOAuthFlow.mjs';\nimport { getRedirectUrl } from './getRedirectUrl.mjs';\nimport { handleFailure } from './handleFailure.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst attemptCompleteOAuthFlow = async authConfig => {\n  try {\n    assertTokenProviderConfig(authConfig);\n    assertOAuthConfig(authConfig);\n    oAuthStore.setAuthConfig(authConfig);\n  } catch (_) {\n    // no-op\n    // This should not happen as Amplify singleton checks the oauth config key\n    // unless the oauth config object doesn't contain required properties\n    return;\n  }\n  // No inflight OAuth\n  if (!(await oAuthStore.loadOAuthInFlight())) {\n    return;\n  }\n  try {\n    const currentUrl = window.location.href;\n    const {\n      loginWith,\n      userPoolClientId\n    } = authConfig;\n    const {\n      domain,\n      redirectSignIn,\n      responseType\n    } = loginWith.oauth;\n    const redirectUri = getRedirectUrl(redirectSignIn);\n    await completeOAuthFlow({\n      currentUrl,\n      clientId: userPoolClientId,\n      domain,\n      redirectUri,\n      responseType,\n      userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect)\n    });\n  } catch (err) {\n    await handleFailure(err);\n  }\n};\nexport { attemptCompleteOAuthFlow };\n", "import { Amplify } from '@aws-amplify/core';\nimport { isBrowser, ADD_OAUTH_LISTENER } from '@aws-amplify/core/internals/utils';\nimport { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// attach the side effect for handling the completion of an inflight oauth flow\n// this side effect works only on Web\nisBrowser() && (() => {\n  // add the listener to the singleton for triggering\n  Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n})();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst cognitoHostedUIIdentityProviderMap = {\n  Google: 'Google',\n  Facebook: 'Facebook',\n  Amazon: 'LoginWithAmazon',\n  Apple: 'SignInWithApple'\n};\nexport { cognitoHostedUIIdentityProviderMap };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst openAuthSession = async url => {\n  if (!window?.location) {\n    return;\n  }\n  // enforce HTTPS\n  window.location.href = url.replace('http://', 'https://');\n};\nexport { openAuthSession };\n", "import { Sha256 } from '@aws-crypto/sha256-js';\nimport { getCrypto, base64Encoder } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst CODE_VERIFIER_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n/**\n *\n * @param length Desired length of the code verifier.\n *\n * **NOTE:** According to the [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.1)\n * A code verifier must be with a length >= 43 and <= 128.\n *\n * @returns An object that contains the generated `codeVerifier` and a method\n * `toCodeChallenge` to generate the code challenge from the `codeVerifier`\n * following the spec of [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.2).\n */\nconst generateCodeVerifier = length => {\n  const randomBytes = new Uint8Array(length);\n  getCrypto().getRandomValues(randomBytes);\n  let value = '';\n  let codeChallenge;\n  for (const byte of randomBytes) {\n    value += CODE_VERIFIER_CHARSET.charAt(byte % CODE_VERIFIER_CHARSET.length);\n  }\n  return {\n    value,\n    method: 'S256',\n    toCodeChallenge() {\n      if (codeChallenge) {\n        return codeChallenge;\n      }\n      codeChallenge = generateCodeChallenge(value);\n      return codeChallenge;\n    }\n  };\n};\nfunction generateCodeChallenge(codeVerifier) {\n  const awsCryptoHash = new Sha256();\n  awsCryptoHash.update(codeVerifier);\n  const codeChallenge = removePaddingChar(base64Encoder.convert(awsCryptoHash.digestSync(), {\n    urlSafe: true\n  }));\n  return codeChallenge;\n}\nfunction removePaddingChar(base64Encoded) {\n  return base64Encoded.replace(/=/g, '');\n}\nexport { generateCodeVerifier };\n", "import { generateRandomString } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateState = () => {\n  return generateRandomString(32);\n};\nexport { generateState };\n", "import { createOAuthError } from './createOAuthError.mjs';\nimport { handleFailure } from './handleFailure.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst listenForOAuthFlowCancellation = store => {\n  async function handleCancelOAuthFlow(event) {\n    const isBfcache = event.persisted;\n    if (isBfcache && (await store.loadOAuthInFlight())) {\n      const error = createOAuthError('User cancelled OAuth flow.');\n      await handleFailure(error);\n    }\n    window.removeEventListener('pageshow', handleCancelOAuthFlow);\n  }\n  window.addEventListener('pageshow', handleCancelOAuthFlow);\n};\nexport { listenForOAuthFlowCancellation };\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, assertOAuthConfig, urlSafeEncode, isBrowser, AuthAction } from '@aws-amplify/core/internals/utils';\nimport '../utils/oauth/enableOAuthListener.mjs';\nimport { cognitoHostedUIIdentityProviderMap } from '../types/models.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { openAuthSession } from '../../../utils/openAuthSession.mjs';\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\nimport { generateCodeVerifier } from '../utils/oauth/generateCodeVerifier.mjs';\nimport { generateState } from '../utils/oauth/generateState.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { oAuthStore } from '../utils/oauth/oAuthStore.mjs';\nimport '../tokenProvider/tokenProvider.mjs';\nimport { getRedirectUrl } from '../utils/oauth/getRedirectUrl.mjs';\nimport { handleFailure } from '../utils/oauth/handleFailure.mjs';\nimport { completeOAuthFlow } from '../utils/oauth/completeOAuthFlow.mjs';\nimport '../../../types/Auth.mjs';\nimport { createOAuthError } from '../utils/oauth/createOAuthError.mjs';\nimport { listenForOAuthFlowCancellation } from '../utils/oauth/cancelOAuthFlow.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs in a user with OAuth. Redirects the application to an Identity Provider.\n *\n * @param input - The SignInWithRedirectInput object, if empty it will redirect to Cognito HostedUI\n *\n * @throws AuthTokenConfigException - Thrown when the user pool config is invalid.\n * @throws OAuthNotConfigureException - Thrown when the oauth config is invalid.\n */\nasync function signInWithRedirect(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  assertOAuthConfig(authConfig);\n  oAuthStore.setAuthConfig(authConfig);\n  await assertUserNotAuthenticated();\n  let provider = 'COGNITO'; // Default\n  if (typeof input?.provider === 'string') {\n    provider = cognitoHostedUIIdentityProviderMap[input.provider];\n  } else if (input?.provider?.custom) {\n    provider = input.provider.custom;\n  }\n  return oauthSignIn({\n    oauthConfig: authConfig.loginWith.oauth,\n    clientId: authConfig.userPoolClientId,\n    provider,\n    customState: input?.customState,\n    preferPrivateSession: input?.options?.preferPrivateSession,\n    options: {\n      loginHint: input?.options?.loginHint,\n      lang: input?.options?.lang,\n      nonce: input?.options?.nonce\n    }\n  });\n}\nconst oauthSignIn = async ({\n  oauthConfig,\n  provider,\n  clientId,\n  customState,\n  preferPrivateSession,\n  options\n}) => {\n  const {\n    domain,\n    redirectSignIn,\n    responseType,\n    scopes\n  } = oauthConfig;\n  const {\n    loginHint,\n    lang,\n    nonce\n  } = options ?? {};\n  const randomState = generateState();\n  /* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito\n  single-encodes/decodes url on first sign in and double-encodes/decodes url\n  when user already signed in. Using encodeURIComponent, Base32, Base64 add\n  characters % or = which on further encoding becomes unsafe. '=' create issue\n  for parsing query params.\n  Refer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n  const state = customState ? `${randomState}-${urlSafeEncode(customState)}` : randomState;\n  const {\n    value,\n    method,\n    toCodeChallenge\n  } = generateCodeVerifier(128);\n  const redirectUri = getRedirectUrl(oauthConfig.redirectSignIn);\n  if (isBrowser()) oAuthStore.storeOAuthInFlight(true);\n  oAuthStore.storeOAuthState(state);\n  oAuthStore.storePKCE(value);\n  const queryString = Object.entries({\n    redirect_uri: redirectUri,\n    response_type: responseType,\n    client_id: clientId,\n    identity_provider: provider,\n    scope: scopes.join(' '),\n    // eslint-disable-next-line camelcase\n    ...(loginHint && {\n      login_hint: loginHint\n    }),\n    ...(lang && {\n      lang\n    }),\n    ...(nonce && {\n      nonce\n    }),\n    state,\n    ...(responseType === 'code' && {\n      code_challenge: toCodeChallenge(),\n      code_challenge_method: method\n    })\n  }).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n  // TODO(v6): use URL object instead\n  const oAuthUrl = `https://${domain}/oauth2/authorize?${queryString}`;\n  // this will only take effect in the following scenarios:\n  // 1. the user cancels the OAuth flow on web via back button, and\n  // 2. when bfcache is enabled\n  listenForOAuthFlowCancellation(oAuthStore);\n  // the following is effective only in react-native as openAuthSession resolves only in react-native\n  const {\n    type,\n    error,\n    url\n  } = (await openAuthSession(oAuthUrl)) ?? {};\n  try {\n    if (type === 'error') {\n      throw createOAuthError(String(error));\n    }\n    if (type === 'success' && url) {\n      await completeOAuthFlow({\n        currentUrl: url,\n        clientId,\n        domain,\n        redirectUri,\n        responseType,\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        preferPrivateSession\n      });\n    }\n  } catch (err) {\n    await handleFailure(err);\n    // rethrow the error so it can be caught by `await signInWithRedirect()` in react-native\n    throw err;\n  }\n};\nexport { signInWithRedirect };\n", "import { assertTokenProviderConfig, fetchAuthSession, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../../utils/types.mjs';\nimport { toAuthUserAttribute } from '../../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../../common/AuthErrorStrings.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport '../../types/errors.mjs';\nimport { createGetUserClient } from '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchUserAttributes = async amplify => {\n  const authConfig = amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession(amplify, {\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const getUser = createGetUserClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    UserAttributes\n  } = await getUser({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes)\n  }, {\n    AccessToken: tokens.accessToken.toString()\n  });\n  return toAuthUserAttribute(UserAttributes);\n};\nexport { fetchUserAttributes };\n", "import { Amplify } from '@aws-amplify/core';\nimport { fetchUserAttributes as fetchUserAttributes$1 } from './internal/fetchUserAttributes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Fetches the current user attributes while authenticated.\n *\n * @throws - {@link GetUserException} - Cognito service errors thrown when the service is not able to get the user.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst fetchUserAttributes = () => {\n  return fetchUserAttributes$1(Amplify);\n};\nexport { fetchUserAttributes };\n", "import { clearCredentials, Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport '../refreshAuthTokens.mjs';\nimport '../../tokenProvider/errorHelpers.mjs';\nimport '../types.mjs';\nimport { tokenOrchestrator } from '../../tokenProvider/tokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst completeOAuthSignOut = async store => {\n  await store.clearOAuthData();\n  tokenOrchestrator.clearTokens();\n  await clearCredentials();\n  Hub.dispatch('auth', {\n    event: 'signedOut'\n  }, 'Auth', AMPLIFY_SYMBOL);\n};\nexport { completeOAuthSignOut };\n", "import { assertOAuthConfig } from '@aws-amplify/core/internals/utils';\nimport { openAuthSession } from '../../../../utils/openAuthSession.mjs';\nimport { getRedirectUrl } from './getRedirectUrl.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst oAuthSignOutRedirect = async (authConfig, preferPrivateSession = false, redirectUrl) => {\n  assertOAuthConfig(authConfig);\n  const {\n    loginWith,\n    userPoolClientId\n  } = authConfig;\n  const {\n    domain,\n    redirectSignOut\n  } = loginWith.oauth;\n  const signoutUri = getRedirectUrl(redirectSignOut, redirectUrl);\n  const oAuthLogoutEndpoint = `https://${domain}/logout?${Object.entries({\n    client_id: userPoolClientId,\n    logout_uri: encodeURIComponent(signoutUri)\n  }).map(([k, v]) => `${k}=${v}`).join('&')}`;\n  return openAuthSession(oAuthLogoutEndpoint);\n};\nexport { oAuthSignOutRedirect };\n", "import { completeOAuthSignOut } from './completeOAuthSignOut.mjs';\nimport { oAuthSignOutRedirect } from './oAuthSignOutRedirect.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst handleOAuthSignOut = async (cognitoConfig, store, tokenOrchestrator, redirectUrl) => {\n  const {\n    isOAuthSignIn\n  } = await store.loadOAuthSignIn();\n  const oauthMetadata = await tokenOrchestrator.getOAuthMetadata();\n  // Clear everything before attempting to visted logout endpoint since the current application\n  // state could be wiped away on redirect\n  await completeOAuthSignOut(store);\n  // The isOAuthSignIn flag is propagated by the oAuthToken store which manages oauth keys in local storage only.\n  // These keys are used to determine if a user is in an inflight or signedIn oauth states.\n  // However, this behavior represents an issue when 2 apps share the same set of tokens in Cookie storage because the app that didn't\n  // start the OAuth will not have access to the oauth keys.\n  // A heuristic solution is to add oauth metadata to the tokenOrchestrator which will have access to the underlying\n  // storage mechanism that is used by Amplify.\n  if (isOAuthSignIn || oauthMetadata?.oauthSignIn) {\n    // On web, this will always end up being a void action\n    return oAuthSignOutRedirect(cognitoConfig, false, redirectUrl);\n  }\n};\nexport { handleOAuthSignOut };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createRevokeTokenClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('RevokeToken'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createRevokeTokenClient };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGlobalSignOutClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GlobalSignOut'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createGlobalSignOutClient };\n", "import { ConsoleLogger, Amplify, clearCredentials, Hub, defaultStorage } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, assertOAuthConfig, AMPLIFY_SYMBOL, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { DefaultOAuthStore } from '../utils/signInWithRedirectStore.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens, assertAuthTokensWithRefreshToken } from '../utils/types.mjs';\nimport '@aws-crypto/sha256-js';\nimport { handleOAuthSignOut } from '../utils/oauth/handleOAuthSignOut.mjs';\nimport { OAUTH_SIGNOUT_EXCEPTION } from '../../../errors/constants.mjs';\nimport '../../../Errors.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../types/Auth.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport { createRevokeTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRevokeTokenClient.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createGlobalSignOutClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGlobalSignOutClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('Auth');\n/**\n * Signs a user out\n *\n * @param input - The SignOutInput object\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signOut(input) {\n  const cognitoConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(cognitoConfig);\n  if (input?.global) {\n    await globalSignOut(cognitoConfig);\n  } else {\n    await clientSignOut(cognitoConfig);\n  }\n  let hasOAuthConfig;\n  try {\n    assertOAuthConfig(cognitoConfig);\n    hasOAuthConfig = true;\n  } catch (err) {\n    hasOAuthConfig = false;\n  }\n  if (hasOAuthConfig) {\n    const oAuthStore = new DefaultOAuthStore(defaultStorage);\n    oAuthStore.setAuthConfig(cognitoConfig);\n    const {\n      type\n    } = (await handleOAuthSignOut(cognitoConfig, oAuthStore, tokenOrchestrator, input?.oauth?.redirectUrl)) ?? {};\n    if (type === 'error') {\n      throw new AuthError({\n        name: OAUTH_SIGNOUT_EXCEPTION,\n        message: `An error occurred when attempting to log out from OAuth provider.`\n      });\n    }\n  } else {\n    // complete sign out\n    tokenOrchestrator.clearTokens();\n    await clearCredentials();\n    Hub.dispatch('auth', {\n      event: 'signedOut'\n    }, 'Auth', AMPLIFY_SYMBOL);\n  }\n}\nasync function clientSignOut(cognitoConfig) {\n  try {\n    const {\n      userPoolEndpoint,\n      userPoolId,\n      userPoolClientId\n    } = cognitoConfig;\n    const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n    assertAuthTokensWithRefreshToken(authTokens);\n    if (isSessionRevocable(authTokens.accessToken)) {\n      const revokeToken = createRevokeTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n          endpointOverride: userPoolEndpoint\n        })\n      });\n      await revokeToken({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignOut)\n      }, {\n        ClientId: userPoolClientId,\n        Token: authTokens.refreshToken\n      });\n    }\n  } catch (err) {\n    // this shouldn't throw\n    logger.debug('Client signOut error caught but will proceed with token removal');\n  }\n}\nasync function globalSignOut(cognitoConfig) {\n  try {\n    const {\n      userPoolEndpoint,\n      userPoolId\n    } = cognitoConfig;\n    const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n    assertAuthTokens(authTokens);\n    const globalSignOutClient = createGlobalSignOutClient({\n      endpointResolver: createCognitoUserPoolEndpointResolver({\n        endpointOverride: userPoolEndpoint\n      })\n    });\n    await globalSignOutClient({\n      region: getRegionFromUserPoolId(userPoolId),\n      userAgentValue: getAuthUserAgentValue(AuthAction.SignOut)\n    }, {\n      AccessToken: authTokens.accessToken.toString()\n    });\n  } catch (err) {\n    // it should not throw\n    logger.debug('Global signOut error caught but will proceed with token removal');\n  }\n}\nconst isSessionRevocable = token => !!token?.payload?.origin_jti;\nexport { signOut };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGetUserAttributeVerificationCodeClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetUserAttributeVerificationCode'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createGetUserAttributeVerificationCodeClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createGetUserAttributeVerificationCodeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserAttributeVerificationCodeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resends user's confirmation code when updating attributes while authenticated.\n *\n * @param input - The SendUserAttributeVerificationCodeInput object\n * @returns SendUserAttributeVerificationCodeOutput\n * @throws - {@link GetUserAttributeVerificationException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst sendUserAttributeVerificationCode = async input => {\n  const {\n    userAttributeKey,\n    options\n  } = input;\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  const clientMetadata = options?.clientMetadata;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const getUserAttributeVerificationCode = createGetUserAttributeVerificationCodeClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    CodeDeliveryDetails\n  } = await getUserAttributeVerificationCode({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.SendUserAttributeVerificationCode)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    ClientMetadata: clientMetadata,\n    AttributeName: userAttributeKey\n  });\n  const {\n    DeliveryMedium,\n    AttributeName,\n    Destination\n  } = {\n    ...CodeDeliveryDetails\n  };\n  return {\n    destination: Destination,\n    deliveryMedium: DeliveryMedium,\n    attributeName: AttributeName\n  };\n};\nexport { sendUserAttributeVerificationCode };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createDeleteUserAttributesClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteUserAttributes'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createDeleteUserAttributesClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createDeleteUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserAttributesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deletes user attributes.\n *\n * @param input -  The DeleteUserAttributesInput object\n * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function deleteUserAttributes(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userAttributeKeys\n  } = input;\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const deleteUserAttributesClient = createDeleteUserAttributesClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await deleteUserAttributesClient({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    UserAttributeNames: userAttributeKeys\n  });\n}\nexport { deleteUserAttributes };\n", "import { parseJsonError } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createEmptyResponseDeserializer = () => async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseJsonError(response);\n    assertServiceError(error);\n    throw new AuthError({\n      name: error.name,\n      message: error.message\n    });\n  } else {\n    return undefined;\n  }\n};\nexport { createEmptyResponseDeserializer };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { createEmptyResponseDeserializer } from './shared/serde/createEmptyResponseDeserializer.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createDeleteUserClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteUser'), createEmptyResponseDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createDeleteUserClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createDeleteUserClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { signOut } from './signOut.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deletes a user from the user pool while authenticated.\n *\n * @throws - {@link DeleteUserException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function deleteUser() {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession();\n  assertAuthTokens(tokens);\n  const serviceDeleteUser = createDeleteUserClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await serviceDeleteUser({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUser)\n  }, {\n    AccessToken: tokens.accessToken.toString()\n  });\n  await tokenOrchestrator.clearDeviceMetadata();\n  await signOut();\n}\nexport { deleteUser };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUpdateDeviceStatusClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('UpdateDeviceStatus'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createUpdateDeviceStatusClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens, assertDeviceMetadata } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createUpdateDeviceStatusClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateDeviceStatusClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Marks device as remembered while authenticated.\n *\n * @throws - {@link UpdateDeviceStatusException} - Cognito service errors thrown when\n * setting device status to remembered using an invalid device key.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function rememberDevice() {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession();\n  assertAuthTokens(tokens);\n  const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata();\n  assertDeviceMetadata(deviceMetadata);\n  const updateDeviceStatus = createUpdateDeviceStatusClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await updateDeviceStatus({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.RememberDevice)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    DeviceKey: deviceMetadata.deviceKey,\n    DeviceRememberedStatus: 'remembered'\n  });\n}\nexport { rememberDevice };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { createEmptyResponseDeserializer } from './shared/serde/createEmptyResponseDeserializer.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createForgetDeviceClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ForgetDevice'), createEmptyResponseDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createForgetDeviceClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens, assertDeviceMetadata } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createForgetDeviceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createForgetDeviceClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Forget a remembered device while authenticated.\n *\n * @param input - The ForgetDeviceInput object.\n * @throws - {@link ForgetDeviceException} - Cognito service errors thrown when\n * forgetting device with invalid device key\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function forgetDevice(input) {\n  const {\n    device: {\n      id: externalDeviceKey\n    } = {\n      id: undefined\n    }\n  } = input ?? {};\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession();\n  assertAuthTokens(tokens);\n  const deviceMetadata = await tokenOrchestrator.getDeviceMetadata();\n  const currentDeviceKey = deviceMetadata?.deviceKey;\n  if (!externalDeviceKey) assertDeviceMetadata(deviceMetadata);\n  const serviceForgetDevice = createForgetDeviceClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await serviceForgetDevice({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.ForgetDevice)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    DeviceKey: externalDeviceKey ?? currentDeviceKey\n  });\n  if (!externalDeviceKey || externalDeviceKey === currentDeviceKey) await tokenOrchestrator.clearDeviceMetadata();\n}\nexport { forgetDevice };\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createListDevicesClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ListDevices'), createUserPoolDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createListDevicesClient };\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createListDevicesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createListDevicesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Cognito Documentation for max device\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nconst MAX_DEVICES = 60;\n/**\n * Fetches devices that have been remembered using {@link rememberDevice}\n * for the currently authenticated user.\n *\n * @returns FetchDevicesOutput\n * @throws {@link ListDevicesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function fetchDevices() {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession();\n  assertAuthTokens(tokens);\n  const listDevices = createListDevicesClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const response = await listDevices({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.FetchDevices)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    Limit: MAX_DEVICES\n  });\n  return parseDevicesResponse(response.Devices ?? []);\n}\nconst parseDevicesResponse = async devices => {\n  return devices.map(({\n    DeviceKey: id = '',\n    DeviceAttributes = [],\n    DeviceCreateDate,\n    DeviceLastModifiedDate,\n    DeviceLastAuthenticatedDate\n  }) => {\n    let deviceName;\n    const attributes = DeviceAttributes.reduce((attrs, {\n      Name,\n      Value\n    }) => {\n      if (Name && Value) {\n        if (Name === 'device_name') deviceName = Value;\n        attrs[Name] = Value;\n      }\n      return attrs;\n    }, {});\n    const result = {\n      id,\n      name: deviceName,\n      attributes,\n      createDate: DeviceCreateDate ? new Date(DeviceCreateDate * 1000) : undefined,\n      lastModifiedDate: DeviceLastModifiedDate ? new Date(DeviceLastModifiedDate * 1000) : undefined,\n      lastAuthenticatedDate: DeviceLastAuthenticatedDate ? new Date(DeviceLastAuthenticatedDate * 1000) : undefined\n    };\n    return result;\n  });\n};\nexport { fetchDevices };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst IdentityIdStorageKeys = {\n  identityId: 'identityId'\n};\nexport { IdentityIdStorageKeys };\n", "import { ConsoleLogger } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\nimport { IdentityIdStorageKeys } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('DefaultIdentityIdStore');\nclass DefaultIdentityIdStore {\n  setAuthConfig(authConfigParam) {\n    assertIdentityPoolIdConfig(authConfigParam.Cognito);\n    this.authConfig = authConfigParam;\n    this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n  }\n  constructor(keyValueStorage) {\n    this._authKeys = {};\n    this._hasGuestIdentityId = false;\n    this.keyValueStorage = keyValueStorage;\n  }\n  async loadIdentityId() {\n    assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n    try {\n      if (this._primaryIdentityId) {\n        return {\n          id: this._primaryIdentityId,\n          type: 'primary'\n        };\n      } else {\n        const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n        if (storedIdentityId) {\n          this._hasGuestIdentityId = true;\n          return {\n            id: storedIdentityId,\n            type: 'guest'\n          };\n        }\n        return null;\n      }\n    } catch (err) {\n      logger.log('Error getting stored IdentityId.', err);\n      return null;\n    }\n  }\n  async storeIdentityId(identity) {\n    assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n    if (identity.type === 'guest') {\n      this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n      // Clear in-memory storage of primary identityId\n      this._primaryIdentityId = undefined;\n      this._hasGuestIdentityId = true;\n    } else {\n      this._primaryIdentityId = identity.id;\n      // Clear locally stored guest id\n      if (this._hasGuestIdentityId) {\n        this.keyValueStorage.removeItem(this._authKeys.identityId);\n        this._hasGuestIdentityId = false;\n      }\n    }\n  }\n  async clearIdentityId() {\n    this._primaryIdentityId = undefined;\n    await this.keyValueStorage.removeItem(this._authKeys.identityId);\n  }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n  return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n};\nexport { DefaultIdentityIdStore };\n", "import { decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction formLoginsMap(idToken) {\n  const issuer = decodeJWT(idToken).payload.iss;\n  const res = {};\n  if (!issuer) {\n    throw new AuthError({\n      name: 'InvalidIdTokenException',\n      message: 'Invalid Idtoken.'\n    });\n  }\n  const domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n  res[domainName] = idToken;\n  return res;\n}\nexport { formLoginsMap };\n", "import { getId } from '@aws-amplify/core';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { formLoginsMap } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Provides a Cognito identityId\n *\n * @param tokens - The AuthTokens received after SignIn\n * @returns string\n * @throws configuration exceptions: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service exceptions: {@link GetIdException }\n */\nasync function cognitoIdentityIdProvider({\n  tokens,\n  authConfig,\n  identityIdStore\n}) {\n  identityIdStore.setAuthConfig({\n    Cognito: authConfig\n  });\n  // will return null only if there is no identityId cached or if there is an error retrieving it\n  const identityId = await identityIdStore.loadIdentityId();\n  if (identityId) {\n    return identityId.id;\n  }\n  const logins = tokens?.idToken ? formLoginsMap(tokens.idToken.toString()) : {};\n  const generatedIdentityId = await generateIdentityId(logins, authConfig);\n  // Store generated identityId\n  identityIdStore.storeIdentityId({\n    id: generatedIdentityId,\n    type: tokens ? 'primary' : 'guest'\n  });\n  return generatedIdentityId;\n}\nasync function generateIdentityId(logins, authConfig) {\n  const identityPoolId = authConfig?.identityPoolId;\n  const region = getRegionFromIdentityPoolId(identityPoolId);\n  // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n  let idResult;\n  // for a first-time user, this will return a brand new identity\n  // for a returning user, this will retrieve the previous identity assocaited with the logins\n  try {\n    idResult = (await getId({\n      region\n    }, {\n      IdentityPoolId: identityPoolId,\n      Logins: logins\n    })).IdentityId;\n  } catch (e) {\n    assertServiceError(e);\n    throw new AuthError(e);\n  }\n  if (!idResult) {\n    throw new AuthError({\n      name: 'GetIdResponseException',\n      message: 'Received undefined response from getId operation',\n      recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.'\n    });\n  }\n  return idResult;\n}\nexport { cognitoIdentityIdProvider };\n", "import { ConsoleLogger, getCredentialsForIdentity } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertIdTokenInAuthTokens } from '../utils/types.mjs';\nimport { cognitoIdentityIdProvider } from './IdentityIdProvider.mjs';\nimport { formLoginsMap } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('CognitoCredentialsProvider');\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nclass CognitoAWSCredentialsAndIdentityIdProvider {\n  constructor(identityIdStore) {\n    this._nextCredentialsRefresh = 0;\n    this._identityIdStore = identityIdStore;\n  }\n  async clearCredentialsAndIdentityId() {\n    logger.debug('Clearing out credentials and identityId');\n    this._credentialsAndIdentityId = undefined;\n    await this._identityIdStore.clearIdentityId();\n  }\n  async clearCredentials() {\n    logger.debug('Clearing out in-memory credentials');\n    this._credentialsAndIdentityId = undefined;\n  }\n  async getCredentialsAndIdentityId(getCredentialsOptions) {\n    const isAuthenticated = getCredentialsOptions.authenticated;\n    const {\n      tokens\n    } = getCredentialsOptions;\n    const {\n      authConfig\n    } = getCredentialsOptions;\n    try {\n      assertIdentityPoolIdConfig(authConfig?.Cognito);\n    } catch {\n      // No identity pool configured, skipping\n      return;\n    }\n    if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n      // TODO(V6): return partial result like Native platforms\n      return;\n    }\n    const {\n      forceRefresh\n    } = getCredentialsOptions;\n    const tokenHasChanged = this.hasTokenChanged(tokens);\n    const identityId = await cognitoIdentityIdProvider({\n      tokens,\n      authConfig: authConfig.Cognito,\n      identityIdStore: this._identityIdStore\n    });\n    // Clear cached credentials when forceRefresh is true OR the cache token has changed\n    if (forceRefresh || tokenHasChanged) {\n      this.clearCredentials();\n    }\n    if (!isAuthenticated) {\n      return this.getGuestCredentials(identityId, authConfig.Cognito);\n    } else {\n      assertIdTokenInAuthTokens(tokens);\n      return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n    }\n  }\n  async getGuestCredentials(identityId, authConfig) {\n    // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n    if (this._credentialsAndIdentityId && !this.isPastTTL() && this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n      logger.info('returning stored credentials as they neither past TTL nor expired.');\n      return this._credentialsAndIdentityId;\n    }\n    // Clear to discard if any authenticated credentials are set and start with a clean slate\n    this.clearCredentials();\n    const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n    // use identityId to obtain guest credentials\n    // save credentials in-memory\n    // No logins params should be passed for guest creds:\n    // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n    let clientResult;\n    try {\n      clientResult = await getCredentialsForIdentity({\n        region\n      }, {\n        IdentityId: identityId\n      });\n    } catch (e) {\n      assertServiceError(e);\n      throw new AuthError(e);\n    }\n    if (clientResult?.Credentials?.AccessKeyId && clientResult?.Credentials?.SecretKey) {\n      this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n      const res = {\n        credentials: {\n          accessKeyId: clientResult.Credentials.AccessKeyId,\n          secretAccessKey: clientResult.Credentials.SecretKey,\n          sessionToken: clientResult.Credentials.SessionToken,\n          expiration: clientResult.Credentials.Expiration\n        },\n        identityId\n      };\n      if (clientResult.IdentityId) {\n        res.identityId = clientResult.IdentityId;\n        this._identityIdStore.storeIdentityId({\n          id: clientResult.IdentityId,\n          type: 'guest'\n        });\n      }\n      this._credentialsAndIdentityId = {\n        ...res,\n        isAuthenticatedCreds: false\n      };\n      return res;\n    } else {\n      throw new AuthError({\n        name: 'CredentialsNotFoundException',\n        message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`\n      });\n    }\n  }\n  async credsForOIDCTokens(authConfig, authTokens, identityId) {\n    if (this._credentialsAndIdentityId && !this.isPastTTL() && this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n      logger.debug('returning stored credentials as they neither past TTL nor expired.');\n      return this._credentialsAndIdentityId;\n    }\n    // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n    this.clearCredentials();\n    const logins = authTokens.idToken ? formLoginsMap(authTokens.idToken.toString()) : {};\n    const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n    let clientResult;\n    try {\n      clientResult = await getCredentialsForIdentity({\n        region\n      }, {\n        IdentityId: identityId,\n        Logins: logins\n      });\n    } catch (e) {\n      assertServiceError(e);\n      throw new AuthError(e);\n    }\n    if (clientResult?.Credentials?.AccessKeyId && clientResult?.Credentials?.SecretKey) {\n      this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n      const res = {\n        credentials: {\n          accessKeyId: clientResult.Credentials.AccessKeyId,\n          secretAccessKey: clientResult.Credentials.SecretKey,\n          sessionToken: clientResult.Credentials.SessionToken,\n          expiration: clientResult.Credentials.Expiration\n        },\n        identityId\n      };\n      if (clientResult.IdentityId) {\n        res.identityId = clientResult.IdentityId;\n        // note: the following call removes guest identityId from the persistent store (localStorage)\n        this._identityIdStore.storeIdentityId({\n          id: clientResult.IdentityId,\n          type: 'primary'\n        });\n      }\n      // Store the credentials in-memory along with the expiration\n      this._credentialsAndIdentityId = {\n        ...res,\n        isAuthenticatedCreds: true,\n        associatedIdToken: authTokens.idToken?.toString()\n      };\n      return res;\n    } else {\n      throw new AuthError({\n        name: 'CredentialsException',\n        message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`\n      });\n    }\n  }\n  isPastTTL() {\n    return this._nextCredentialsRefresh === undefined ? true : this._nextCredentialsRefresh <= Date.now();\n  }\n  hasTokenChanged(tokens) {\n    return !!tokens && !!this._credentialsAndIdentityId?.associatedIdToken && tokens.idToken?.toString() !== this._credentialsAndIdentityId.associatedIdToken;\n  }\n}\nexport { CognitoAWSCredentialsAndIdentityIdProvider };\n"],
  "mappings": "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",
  "names": ["LogType", "name", "name", "AmplifyErrorCode", "name", "AuthConfigurationErrorCode", "assert", "assert", "RawSha256", "fromUtf8", "Sha256", "name", "logger", "logger", "name", "logger", "api", "name", "URL", "name", "version", "version", "name", "Framework", "Category", "AiAction", "AnalyticsAction", "ApiAction", "AuthAction", "DataStoreAction", "GeoAction", "InAppMessagingAction", "InteractionsAction", "PredictionsAction", "PubSubAction", "PushNotificationAction", "StorageAction", "api", "BackgroundProcessManagerState", "fetchAuthSession", "defaultConfig", "jitteredBackoff", "jitteredBackoff", "logger", "name", "converter", "defaultConfig", "CacheErrorCode", "assert", "logger", "defaultConfig", "assert", "logger", "defaultConfig", "logger", "I18nErrorCode", "assert", "logger", "I18n", "assert", "SERVICE_NAME", "endpointResolver", "defaultConfig", "jitteredBackoff", "getSharedHeaders", "PinpointValidationErrorCode", "assert", "hexEncode", "getSharedHeaders", "defaultConfig", "assert", "getSharedHeaders", "defaultConfig", "logger", "UpdateEndpointException", "ServiceWorkerErrorCode", "assert", "crypto", "AuthValidationErrorCode", "AuthErrorStrings", "AuthErrorCodes", "getCurrentUser", "getSharedHeaders", "buildHttpRpcRequest", "disableCacheMiddlewareFactory", "jitteredBackoff", "AssociateSoftwareTokenException", "ChangePasswordException", "ConfirmDeviceException", "ConfirmForgotPasswordException", "ConfirmSignUpException", "DeleteUserAttributesException", "DeleteUserException", "ForgetDeviceException", "ForgotPasswordException", "GetUserException", "GetIdException", "GetCredentialsForIdentityException", "GetUserAttributeVerificationException", "GlobalSignOutException", "InitiateAuthException", "ResendConfirmationException", "RespondToAuthChallengeException", "SetUserMFAPreferenceException", "SignUpException", "UpdateUserAttributesException", "VerifySoftwareTokenException", "VerifyUserAttributeException", "UpdateDeviceStatusException", "ListDevicesException", "TokenProviderErrorCode", "assert", "assert", "createKeysForAuthStorage", "oauthSignIn", "name", "getCurrentUser", "PasskeyErrorCode", "SHORT_TO_HEX", "HEX_TO_SHORT", "HEX_TO_SHORT", "SHORT_TO_HEX", "tokenOrchestrator", "tokenOrchestrator", "tokenOrchestrator", "tokenOrchestrator", "tokenOrchestrator", "tokenOrchestrator", "getCurrentUser", "tokenOrchestrator", "name", "autoSignIn", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "logger", "AuthErrorTypes", "getRedirectUrl", "getRedirectUrl", "getRedirectUrl", "fetchUserAttributes", "getRedirectUrl", "tokenOrchestrator", "logger", "oAuthStore", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "fetchAuthSession", "logger", "createKeysForAuthStorage", "logger", "isAuthenticated"]
}
